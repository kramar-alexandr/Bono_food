// ui
event definewindows
begin
  real h,h2,h3,v,vs,vm,t;
  
  SetLangMode(LangLatvian,"LAT",0);

  WindowBegin("Maks‚juma uzdevums",OPDClass,CGview,-);
  SetWRect(20,80,640,464);
  Sizeable(-1,-1,0,0);
  UseView(OPVc);
  ActiveFieldOnNew("PayDate");    
  h = 100; h2 = 280; h3 = 490; v = 6;
  Tile(0,110,false,"",SerNr);
  EditField(h,v, 80,"S•r. Nr",St_i,SerNr,false,TSerSClass);
  EditField(h2,v,80,"Izrakst´ts",Normal,PayDate,false,PasteCurDate);
  EditField(h3,v,82,"Samaks‚ts",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=20,20,"Sam. veids",Normal,PayMode,false,PMSClass);
  EnterSkip(Math);
  EditField(h2,v,120,"Nor•úinu konts",Normal,BankAcc,false,0);
  EditField(h3,v,82,"K‚rtoä. atsl•ga",Normal,SortCode,false,0);
  EditField(h,v+=20,80,"Atsauksme",Normal,PayNumber,false,0);
  CheckBox(h2,v,0,"R•ú.Nr./gr.",APonTR);
    EditField(h3,v,82,"Valoda",Normal,LangCode,false,LangSClass);
  EditField(h,v+=20,472,"Koment‚rs",Normal,BankName,false,0);
  EnterSkip(Math);
  vs = 20;
//  CheckBox(h,v=6,0,"Noraid´ts",RejectedFlag);
//  CheckBox(h2,v,0,"R•ú.Nr/Gr",APonTR);
  TileButton(1,"Maks. uzd.");
  TileButton(2,"Banka");
  Tile(1,120,true,"1",Math);
  CheckBox(25,v=-39,0,"Izrakst´ts",OrderedFlag);
  CheckBox(25,v=-20,0,"Gr‚matot",DoneFlag);
  HalPushButton(250,-25,250+100,-5,"EPaymentQueOPDsm","Nosðt´t uz banku"); //4.4
  HalPushButton(120,-25,130+110,-5,"FidaVista_OPEnDsm","Bankas eksports");
  EditField(-300,-21,50,"Valðta",Normal,PayCurCode,false,CurncyCodeSClass);
  EditField(-125,-21,85,"P‚rskait´t",Normal,CurPayVal,true,0);
  h=4;
  MatrixBegin(h,v=24,-50,-40,-,99);
  vm = v;
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(t=1,24,"R•ú. Nr.",0,VISerNr,false,APSClass);
  EnterSkip(RecVal);
  MatCol(t  ,105,"Pieg‚d‚t‚js",0,VECode,false,VESClass);
  MatCol(t=5,24,"",0,VISerNr,false,APSClass);
  MatText(t,70,"Skonto atl.",true);
  MatCol(t,140,"Objekts",0,Objects,false,ObjSClass);
  MatCol(t,-360,"R•ú.val.",0,PInvCurncy,true,0);
  MatCol(t,-320,"R•ú.summa",0,PInvVal,true,0);
  MatCol(t,-240,"B.val.",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-200,"B.summa",0,BankVal,true,0);
  MatCol(t,-120,"Nos.val.",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-80,"Nos.summa",0,RecVal,true,0);
  MatCol(t=7,24,"",0,VISerNr,false,APSClass);
  MatText(t,-480,"Bankas pakalpoj.",true);
  MatCol(t,-390,"R. val",0,PInvCurncy,true,0);
  MatCol(t,-350,"Apmaks‚t",0,PInvVal,true,0);
  MatCol(t,-260,"B.val",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank.summa",0,BankVal,true,0);
  MatCol(t,-130,"S.val",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Sam. summa",0,RecVal,true,0);
  Flip(1);
  MatCol(t=1,190,"Teksts",0,Comment,false,0);
  MatCol(t,-300,"B.val.",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-250,"Bankas summa",0,BankVal,true,0);
  MatCol(t,-150,"Nos.val.",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-100,"Nos.summa",0,RecVal,true,0);
  Flip(2);
  MatCol(t=1,190,"R. val",0,PInvCurncy,true,CurncyCodeSClass);
  MatCol(t,-310,"Neapmaks‚ts",0,PInvOutstand,false,0);
  MatCol(t,-220,"Apmaks‚t",0,PInvVal,true,0);
  MatCol(t,-130,"S.val",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Sam.summa",0,RecVal,true,0);
  Flip(3);
  MatCol(t=1  ,190,"Teksts",0,Comment,false,0);
  MatCol(t  ,-260,"Objekti",0,Objects,false,ObjSClass);
  MatCol(t,-130,"S.val",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Sam.summa",0,RecVal,true,0);
  Flip(4);
  MatCol(t=1,190,"Teksts",0,Comment,false,0);
  MatCol(t,-270,"Sam. v.",0,PayMode,false,PMSClass);
  MatCol(t,-220,"‰eks",0,ChequeNr,false,0);
  MatCol(t,-130,"Nos.val.",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Nosðt´ts",0,RecVal,true,0);
  Flip(5);
  MatCol(t=1,190,"Teksts",0,Comment,false,0);
  MatCol(t,-320,"Pasðt.Nr.",0,OrderNr,false,POSClass);
  MatCol(t,-230,"Priekäapm.Nr.",0,PrepayNr,false,POSClass);
  MatCol(t,-130,"S.val",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Sam.summa",0,RecVal,true,0);
  Flip(6);
  MatCol(t=1,190,"Teksts",0,Comment,false,0);
  MatCol(t,-310,"PVN kd",0,VATCode,false,VATCodeSClass);
  MatCol(t,-270,"PVN",0,VATVal,false,0);
//  MatCol(t,-200,"Papildus nodoklis",0,TAX1Sum,false,0);
  MatCol(t,-130,"S.val",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Sam.summa",0,RecVal,true,0);
  Flip(7);
  MatCol(t=1,190,"Noapaºoä. konts",0,RoundOffAcc,false,AccSClass);
  MatCol(t,-220,"Noapaºoäana",0,RoundOff,true,0);
//  MatCol(t,-220,"Bank.apkalp",0,BankFeeVal,true,0);
  MatCol(t,-130,"S.val",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Sam.summa",0,RecVal,true,0);
  Flip(8);
  MatCol(t=1  ,190,"Teksts",0,Comment,false,0);
  MatCol(t,-320,"Bankas atsauksme",0,BankRefStr,false,0);
  MatCol(t,-220,"Bankas konts",0,BankAcc,false,VEBankAccSClass);
  MatCol(t,-90,"K‚rtoä. atsl•ga",0,SortCode,false,0);
  Flip(9);
  MatCol(t=1,190,"B.Val",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-445,"Bankas summa",0,BankVal,true,0);
  MatCol(t,-360,"Bankas pak.",0,BankFeeVal,true,0);
  MatCol(t,-280,"Uz B1 summu",0,ToRateB1BankVal,true,0);
  MatCol(t,-210,"B1 summa",0,B1BankVal,true,0);
  MatCol(t,-140,"B2 summa",0,B2BankVal,true,0);
//  MatCol(t,-120,"Papild.%",0,BankFeePrc,true,0);
  MatCol(t,-70," Koef.",0,Coef,true,0);
  Flip(10);
  MatCol(t=1  ,190,"Teksts",0,Comment,false,0);
  MatCol(t,-320,"Iemaksa",0,VISerNr,false,APInstallSClass);
  MatCol(t,-250,"Iet. nod.",0,WHTax,false,WHTaxSClass);
  MatCol(t,-200,"Atsauksmes numurs",0,rkPayNumber,false,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,8,"H");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,9,"I");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,10,"J");
  Tile(2,50,true,"1",BankAcc);
  v=6; h= 100;
  EditField(h,v,120,"Bankas konts",Normal,BankAcc,false,0);
 
  CheckBox(h2,v,0,"Starptautiskais maks. uzd.",ForeignPayment);
  ButtonFrame(h,vm=(v+=40),123,2,"Mak‚juma form‚ts");
  RadioButton(h,v,0,0,"Pa rind‚m",PayperSupplier);
  RadioButton(h,v+=16,1,0,"Pa pieg‚d‚t‚jiem",PayperSupplier);  
  RadioButton(h,v+=16,2,0,"S•rija",PayperSupplier);  
  ButtonFrame(h2,v=vm,123,3,"Mak‚juma veids");
  RadioButton(h2,v,0,0,"Standarta",PayMethod);
  RadioButton(h2,v+=16,1,0,"Steidzams",PayMethod);
  RadioButton(h2,v+=16,2,0,"±paäi steidzams",PayMethod);  
  ButtonFrame(h3,v=vm,123,3,"Bankas komisija");
  RadioButton(h3,v,0,0,"M•s maks‚jam",Bankfees);
  RadioButton(h3,v+=16,1,0,"Pieg‚d‚t‚js maks‚",Bankfees);
  RadioButton(h3,v+=16,2,0,"Dal´ta",Bankfees);  
  
/*  
  CheckBox(25,v=-39,0,"O_rdered",OrderedFlag);
  CheckBox(25,v=-20,0,"OK",DoneFlag);
  HalPushButton(150,-30,150+100,-5,"EPaymentQueOPDsm","Send to Bank"); 
*/  
  SpecMenuItem("Druk‚t",' ',0); // any code for this one??, no code
  SpecialMenu("(-",' ',1,"");
  SpecialMenu("Skonto atlaide",' ',2,"CashDiscountOPDsm");
  SpecialMenu("Bankas pakalpojums",' ',3,"NewFeeOPDsm");
  SpecialMenu("Atv•rt gr‚matojumu",'t',5,"OpenTRFromOP");
  SpecialMenu("Pieäúirt ‹eka Nr.",' ',6,"AssignChequeOPDsm");
  SpecialMenu("Sagatavot ‹eku",' ',9,"PrepChecqOPDsm");
  SpecialMenu("Veidot kases izdevumu orderi",' ',8,"CLOutFromOPDsm");
  SpecialMenu("Veidot pirmo notikumu",' ',10,"FirstEventOPDsm");
  SpecialMenu("Veidot PVN korekciju pieg‚d‚t‚jiem",' ',9,"VATCorrectionOPsm");
  SpecialMenu("Apr•úin‚t ietur•tos nodokºus",' ',11,"WithholdTaxesOPDsm");
  SpecialMenu("Bankas izraksts",' ',12,"BankStOPDsm");
  SpecialMenu("E-maks‚juma uzd. statuss",' ',13,"EPaymentStatusOPDsm");
  SpecialMenu("Druk‚t kases ieÀ./izd.",' ',4,"PrintCashInOutOPDsm");
  EndWindow;



  return;
end;
