external inner function Boolean HasPreferedOfficialSerNr();
external inner function Boolean HasInvoiceOfficialSerNr();
external inner function Boolean HasCategories();
external inner function Boolean HasContactClassification();
external inner function Boolean HasModSO();
external inner function Boolean HasModQT();
external inner function Boolean HasModPOS();
external inner function Boolean HasAdvancedCRM();
external inner function Boolean HasModCheck();
external inner function Boolean HasModCO();
external inner function Boolean HasLimitedAccess();
external inner function Boolean AcceptanceStatusColumnTest(string);
external inner function Boolean HasCustomerStatusReport();
external inner function Boolean HasFreightAdvanced();
external inner function Boolean UseTaxTemplatesforTaxCalc();
external inner function real VATZoneButtonsLabelsLAT(real,real,real,real);
external inner function Boolean HasBuyBack();
external inner function Boolean HasStandardCRM();
external inner function Boolean HasEMail();
external inner function Boolean HasAdvancedProduction();
external inner function Boolean HasDownpayments();
external inner function Boolean HasSalesman();
external inner function Boolean HasVATZone();
external inner function Boolean HasSalesmanBonus();
external inner function Boolean HasSalesGroup();
external inner function Boolean HasAdvancedPricing();
external inner function Boolean HasModSVO();
external inner function Boolean HasWithholdingTax();
external inner function Boolean HasItemGroups();
external inner function Boolean HasConsStockMoveInvoices();
external inner function Boolean HasIntegratedNL();
external inner function string 60 UserDefined(string,string);
external inner function string 255 VATZoneNameLAT();
external inner function Boolean HasModCRM();
external inner function Boolean HasPersons();
external inner function Boolean HasModWHM();
external inner function Boolean HasETaxDocuments();
external inner function Boolean HasReturnedGoods();
external inner function Boolean HasModNL();
external inner function Boolean HasNumberSeries();
external inner function Boolean HasCountryPerCustomer();
external inner function Boolean HasPositions();
external inner function Boolean HasSerialNumbers();
external inner function Boolean HasCustItem();
external inner function Boolean HasLanguages();
external inner function Boolean HasModTS();
external inner function Boolean HasBranch();
external inner function Boolean HasObjects();
external inner function Boolean HasRoute();
external inner function Boolean HasOfficialSerNr();
external inner function Boolean HasTREO();
external inner function Boolean IsEnterprise();
external inner function Boolean StandardHansa();
external inner function Boolean HasModIN();
external inner function Boolean HasModSL();
external inner function Boolean HasMultiLocations();
external inner function Boolean HasModPO();
external inner function Boolean HasMultiCurrency();
external inner function Boolean HasVarieties();
external inner function Boolean HasBase2();
external inner function Boolean HasApprovals();
external inner function Boolean HasModPL();
external inner function Boolean HasRetGoodsToSupp();
external inner function Boolean HasTaxMatrix();
external inner function Boolean HasQualityControl();
external inner function Boolean HasAdvancedStock();
external inner function Boolean HasModRent();
external inner function Boolean HasExtTax();
external inner function Boolean HasModProd();
external inner function Boolean HasThrouLocation();
external inner function Boolean HasDepartments();
external inner function Boolean HasSecondQuantity();

external inner function Boolean HasJewelleryInterface();
external inner function Boolean HasCharts();
external inner function Boolean HasItemClassification();
external inner function string 255 VATZoneEditFieldLabelLAT(Integer);
external inner procedure RateField(real,real,real,string,integer,string,boolean,real,real,string,boolean);

SetLangMode(LangLatvian,"LAT",2);

procedure TSERW2(Boolean gtcol)
begin
  real h,h1,h2,h3,h4,h5,v;

  h = 8; v = 60;
  h1=24; h2=h1+80; h3=h2+80; h4=h3+80; h5=h4+80;
  if (GuiType==kGuiCocoa or GuiType==kGuiiPhone) then begin
    SetWRect(20,80,670,351);
    Sizeable(-1,-1,0,0);
    MatrixBegin(h,v,-31,-20,IVSerRowType,199);
    MatCol(1,h1,"Nr. no",0,TSerStart,false,0);
    MatCol(1,h2,"līdz",0,TSerEnd,false,0);
    MatCol(1,h3,"Datums no",0,StartDate,false,0);
    MatCol(1,h4,"līdz",0,EndDate,false,0);
    MatCol(1,h5,"Komentārs",0,TSerCom,false,0);
    MatCol(1,-170,"Exp. prefix",0,ExpPrefix,false,0);
    if (gtcol and Left(BuildProductCode,5)!="Books") then begin
      MatCol(1,-100,"Grām.",0,DonotGenTrans,false,SetSClass);
    end;
  end else begin
    SetWRect(20,80,632,357);
    Sizeable(-1,-1,0,0);
    StaticText(h+h1+5,v-23,"Nr.",false);
    StaticText(h+h3+5,v-23,"Datums",false);
    MatrixBegin(h,v,-31,-20,IVSerRowType,199);
    MatCol(1,h1,"No",0,TSerStart,false,0);
    MatCol(1,h2,"Līdz",0,TSerEnd,false,0);
    MatCol(1,h3,"No",0,StartDate,false,0);
    MatCol(1,h4,"Līdz",0,EndDate,false,0);
    MatCol(1,h5,"Komentārs",0,TSerCom,false,0);
    MatCol(1,-140,"Exp. prefix",0,ExpPrefix,false,0);
    if (gtcol and Left(BuildProductCode,5)!="Books") then begin
      MatCol(1,-70,"Gr.",0,DonotGenTrans,false,SetSClass);
    end;
  end;
  /*The name DonotGenTrans is beacause of default value whcich is zero*/
  EndMatrix;
  //SpecialMenu("Magic Serial Help",' ',1,"MagicSerialHelp");
  return;
end;

procedure TSERW_LAT() begin
  TSERW2(HasModNL);
  return;
end;

window PIDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs;

  WindowBegin("Pasūtāmais artikuls",PIDClass,CGview,-);
  SetWRect(20,80,527,380);
//  Sizeable(-1,-1,0,0);
  UseView(PIVc);
  Tile(0,90,false,"",ItemCode);
  v = 10; vs = 20; h = 80; h2 = 230; h3 = 380;
  EditField(h,v, 82,"Artikuls",Normal,ItemCode,false,INSClass);
  EditField(h2,v,-40,"Apraksts",Normal,Comment,false,0);
  EditField(h,v+=vs ,82,"Piegādātājs",Normal,VECode,false,VESClass);
  EditField(h2,v,-40,"Nos.",Normal,VEName,false,0);
  EditField(h,v+=vs ,82,"Noliktava",Normal,Location,false,LocationSClass);
  TileButton(1,"Cenas");
  TileButton(2,"Teksts");
  TileButton(3,"Dienas"); //EBS
  CheckBox(h2-30,v,0,"Noklusētais piegādātājs",DefaultChoice);
  CheckBox(h2+110,v,0,"Pasūtīt no piegādātāja",VEOrder);
  Tile(1,190,false,"1",PurPrice);
  EditField(h=120,v=6 ,82,"Cena",Normal,PurPrice,true,0);
  EditField(h3,v ,70,"Muita",Normal,PurchaseCost,true,0);
  EditField(h,v+=vs,50,"Valūta",Normal,CurncyCode,true,CurncyCodeSClass);
  EditField(h3,v ,70,"Vien. konv.",Normal,PIFactor,true,0);
  EditField(h,v+=vs ,82,"Pieg. artikuls",Normal,VEItemCode,false,0);
  EditField(h3,v ,70,"Pieg. vienība",Normal,VEUnit,false,UnitSClass);
/*  EditField(h,v+=vs ,200,"Comment",Normal,Comment,false,0);*/
  EditField(h,v+=vs ,82,"Norm. pas. daudz.",Normal,NormPOQty,true,0);
  EditField(h3,v ,82,"Min. pas. daudz.",Normal,MinPOQty,true,0);
  EditField(h,v+=vs ,82,"Ražotājs",Normal,Manufacturer,false,VESClass);
  EditField(h3,v ,50,"Ražotājvalsts",Normal,OrgCountry,false,CountrySClass);
  //EditField(h,v+=vs,60,"Aģents",Normal,SalesMan,false,UserSClass);
  EditField(h,v+=vs ,50,"Nosūtīšanas dienas",Normal,PlannedDelDays,false,0);
  EditField(h,v+=vs ,50,"Min. derīguma termiņs",Normal,MinBestBeforeDays,false,0); //EBS
  EditField(h3,v,60,"Aģentu grupa",Normal,SalesGroup,false,SalesGroupSClass);
  ButtonFrame(h3,v+=vs,123,2,"Nokl. nol. tips");
  RadioButton(h3,v,kStockTypePurchased,0,"Nopirkts",DefStockType);
  RadioButton(h3,v+=16,kStockTypeConsignment,0,"Krava",DefStockType);
  Tile(2,100,true,"2",Math);
  MatrixBegin(4,v=24,-32,-20,-,99);
  MatCol(1,24,"Teksts",0,Text,false,0);
  EndMatrix;
  Tile(3,190,false,"1",MonFlag);
  CheckBox(h=50,v+=10,0,"Pirmdienas",MonFlag);
  CheckBox(h,v+=16,0,"Otrdienas",TueFlag);
  CheckBox(h,v+=16,0,"Trešdienas",WedFlag);
  CheckBox(h,v+=16,0,"Ceturtdienas",ThuFlag);
  CheckBox(h,v+=16,0,"Piektdienas",FriFlag);
  CheckBox(h,v+=16,0,"Sestdienas",SatFlag);
  CheckBox(h,v+=16,0,"Svētdienas",SunFlag);
  EndWindow;

  return;
end;

window INDClass:8
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer tilenr;
  real h,h1,h2,h3,h4,h5,h6,v,vm,vs;
  string 255 label;
  record CYBlock CYb;

  BlockLoad(CYb);

  WindowBegin("Artikuls",INDClass,CGview,-);
  SetWRect(20,80,800,400);
  Sizeable(-1,-1,-1,0);
  DynamicWindow;
  UseView(INVc);
  Tile(0,87,false,"",Code);
  v = 6; vs = 20; h = 145; h1 = 300; h2 = 375; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"Nr.",Normal,Code,false,0);
  EditField(h2-25,v,80,"Grupa",Normal,Group,false,ITSClass);
  EditField(h5+140,v,-40,"Svītru kods",Normal,BarCode,false,0);
  EditField(h,v+=vs,-40,"Apraksts",Normal,Name,false,0);
  EditField(h,v+=vs,285,"Kods",Normal,AlternativeCode,false,0);
  tilenr = 1;
  TileButton(tilenr,"Cenas"); tilenr = tilenr + 1;
  TileButton(tilenr,"Nol."); tilenr = tilenr + 1;
  TileButton(tilenr,"Nol. vad."); tilenr = tilenr + 1;
  if (UserCanAction("ViewCostPrice",true)) then begin
  TileButton(tilenr,"Izm."); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Specif."); tilenr = tilenr + 1;
  TileButton(tilenr,"Konti"); tilenr = tilenr + 1;
  TileButton(tilenr,"Variāc."); tilenr = tilenr + 1;
  TileButton(tilenr,"Teksti"); tilenr = tilenr + 1;
  TileButton(tilenr,"Izm. mod."); tilenr = tilenr + 1;
  TileButton(tilenr,"Liet. vērt."); tilenr = tilenr + 1;
  tilenr = 1;
  CheckBox(h2+90,v,0,"Slēgts ",Terminated);
  CheckBox(h2+150,v,0,"Nav paredzēts pārdošanai",NotForSales);
  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
  EditField(h,v=6 ,100,"Vienība",Normal,Unittext,false,UnitSClass);
  EditField(h,v+=vs,100,"Cena",Normal,UPrice1,true,0);
  EditField(h,v+=vs,100,"Cenas izmaiņas",ViewOnly,LastBasePriceChange,true,0);
  EditField(h,v+=vs,100,"Cenas faktors",Normal,PriceFactor,true,0);
  EditField(h,v+=vs,100,"Cenas formula",Normal,CalcPrice,false,CPMSClass);
  EditField(h,v+=vs,100,"Uzcenojums",Normal,Markup,true,0);
  EditField(h,v+=vs,100,"Prēmijas %",Normal,Bonus,true,0);
  EditField(h,v+=vs,-240,"Objekti",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,-240,"Artikulu klase",Normal,DispGroups,false,DISClass);
  EnterSkip(DispGroups);
  ButtonFrame(h1,v=24,120,4,"Artikula tips");
  RadioButton(h1,v,kItemTypePlain,0,"Vienkāršs",ItemType);
  RadioButton(h1,v+=16,kItemTypeStocked,0,"Noliktavas",ItemType);
  RadioButton(h1,v+=16,kItemTypeStructured,0,"Strukturētais",ItemType);
  RadioButton(h1,v+=16,kItemTypeService,0,"Servisa",ItemType);
  EndFrame;

  Pict_Field(-205,8,-35,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"Pievienot att.");
  end;
  CheckBox(h1,v+=32,0,"Projektos uzskatīt par nol. artikulu",ItemMaterial);
  CheckBox(h1,v+=16,0,"Pieprasīt derīguma termiņu",EBS_ReqBestBefore); //EBS
  Tile(tilenr,170,false,tilenr,MinLevel);  tilenr = tilenr + 1; // Need to clean this Tile up!
  v = 6;
  vm = v;
  ButtonFrame(h1,v+=24,143,3,"Sērijas numurs");
  RadioButton(h1,v,0,0,"Nekāds",SerNrf);
  RadioButton(h1,v+=16,1,0,"Vienības",SerNrf);
  RadioButton(h1,v+=16,2,0,"Partijas",SerNrf);
  CheckBox(h1+200,v,0,"Neprasīt partijas nr. POS rēķinā",DonotRequireBatchNrOnIVCash);
  EditField(h,v=6,100,"Min. daudz",Normal,MinLevel,true,0);
  EditField(h,v+=vs,100,"Maks. daudz",Normal,MaxLevel,true,0);
  EditField(h,v+=vs  ,100,"Departaments",Normal,Department,false,DepSClass);
  EditField(h,v+=vs  ,100,"Līguma likmes tips",Normal,InvCode,false,0);
  EditField(h,v+=vs,100,"Info par art. izcelsmi",Normal,DefaultSource,false,SourceSClass);
  EditField(h5,v ,50,"Vides nodoklis uz kg",Normal,RepaPricePerWeight,true,0);
  h6 = h5 + 160;
  EditField(h6,v ,50,"Vienība 3",Normal,Unittext3,true,UnitSClass);
  EditField(h,v+=vs ,100,"Piesārņ. līmenis",Normal,HazLevCode,false,HazLevSClass);
  EditField(h5,v ,50,"Mitrums %",Normal,AlcPrc,true,0);
  // EditField(h6,v, 80,"Nol. artikula tips",Normal,StockItemType,false,SetSClass);
  EditField(h6,v,50,"Koeficients 3",Normal,UnitCoefficient3,true,0);
  EditField(h,v+=vs ,100,"Vienība 2",Normal,Unittext2,false,UnitSClass);
  EditField(h5,v ,50,"Daudzums 1",Normal,Conversion1,true,0);
  EditField(h6,v ,50,"Vienība 4",Normal,Unittext4,true,UnitSClass);
  EditField(h,v+=vs,100,"Koeficients",Normal,UnitCoefficient,true,0);
  EditField(h5,v ,50,"Daudzums 2",Normal,Conversion2,true,0);
  EditField(h6,v,50,"Koeficients 4",Normal,UnitCoefficient4,true,0);

  Tile(tilenr,170,false,tilenr,LocArea);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6) ,100,"Nokl. paletes artikuls",Normal,DefPalletItem,true,INSClass);
  EditField(h5,v ,80,"Saņemšanas vieta",Normal,PickArea,false,LocAreaSClass);
  EditField(-120,v ,80,"Def. pick pos.",Normal,EBS_DefPickPos,false,PosSClass); //EBS
  EditField(h,v+=vs ,100,"Nokl. atraš. vieta",Normal,LocArea,false,LocAreaSClass);
  EditField(h5,v ,50,"Paletes iekraušanas vietā",Normal,PalletsInPickArea,true,0);
  EditField(h,v+=vs ,50,"Maks. daudz. uz paletes",Normal,QtyonPallet,true,0);
  EditField(h4,v ,50,"Kārtas paletē",Normal,PalletLayers,true,0);
  EditField(h5,v ,50,"Daudz. kārtā",Normal,QtyonPalletLayer,true,0);
  EditField(h,v+=vs ,50,"Paletes platums",Normal,PalletWidth,true,0);
  EditField(h4,v ,50,"Augstums",Normal,PalletHeight,true,0);
  EditField(h5,v ,50,"Biezums",Normal,PalletDepth,true,0);
  EditField(h,v+=vs ,50,"Nokl. pozīcijas platums",Normal,DefPosWidth,true,0);
  EditField(h4,v ,50,"Augstums",Normal,DefPosHeight,true,0);
  EditField(h5,v ,50,"Biezums",Normal,DefPosDepth,true,0);
  EditField(h,v+=vs ,50,"Artikula platums",Normal,Width,true,0);
  EditField(h4,v ,50,"Augstums",Normal,Height,true,0);
  EditField(h5,v ,50,"Biezums",Normal,Depth,true,0);
  EditField(h,v+=vs ,50,"Artikula tilpums",Normal,Volume,true,0);
  EditField(h4,v ,50,"Blīvums",Normal,Density,true,0);
  EditField(h5,v ,50,"Neto svars",Normal,NetWeight,true,0);
  EditField(h,v+=vs ,50,"Min. pick. area qty",Normal,UserVal1,true,0); //EBS
  EditField(h5,v ,50,"Svars",Normal,Weight,true,0); //EBS edit
  if (UserCanAction("ViewCostPrice",true)) then begin
  Tile(tilenr,190,false,tilenr,InPrice);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),100,"Pašizmaksa",Normal,InPrice,true,0);
  EditField(h5,v,70,"Pašizm. izmaiņas",ViewOnly,LastPriceChange,true,0);
  EditField(h,v+=vs ,100,"Pašizmaksa bāzes 2",Normal,InPriceB2,true,0);
  ButtonFrame(h1,v+=24,200,4,"Pašizmaksa pie preču saņemšanas");
  RadioButton(h1,v,0,0,"Nemainīt",UpdateCost);
  RadioButton(h1,v+=16,1,0,"Pēdējā pirkuma pašizmaksa",UpdateCost);
  RadioButton(h1,v+=16,2,0,"Vidējā svērtā",UpdateCost);
  RadioButton(h1,v+=16,3,0,"Pēdējā pirkuma cena",UpdateCost);
  ButtonFrame(h5=540,v=v-3*16,200,3,"Atj. pašizmaksu pie Preču pārvērtēšanas");
  RadioButton(h5,v,0,0,"Nē",SRUpdateCost);
  RadioButton(h5,v+=16,1,0,"Pēdējā pārvērtēšanas cena",SRUpdateCost);
  RadioButton(h5,v+=16,2,0,"Vidējā svērtā",SRUpdateCost);
  EditField(h,v=vm+2*vs,100,"Papildizm.",Normal,ExtraCost,true,0);
  EditField(h,v+=vs ,100,"Vidējā svērtā",Normal,WeighedAvPrice,true,0);
  EditField(h,v+=vs ,100,"Vidējā svērtā bāzes 2",Normal,WeighedAvPriceB2,true,0);
  EditField(h,v+=vs ,100,"Pēdējā pirk. pašizm.",Normal,LastPurchPrice,true,0);
  EditField(h,v+=vs ,100,"Pēdējā pirk. cena",Normal,LastPurchPrice2,true,0);
  EditField(h,v+=vs ,100,"Pēdējā pirkuma valūta",Normal,LastPurchCurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,100,"Piegāde",Normal,FixedFreight,true,0);
  CheckBox(h1,v,0,"Iekļaut artikula piegādes izmaksas",InclItemFreight);
  end;
  Tile(tilenr,150,false,tilenr,Recepy);  tilenr = tilenr + 1;
  EditField(h,v=6 ,120,"Specifikācija",Normal,Recepy,false,RecSClass);
  CheckBox(h1,v,0,"Ievietot sastāvdaļas ievadot",ExplodeRec); // "Show components on documents" is better English but VERY confusing
  EditField(h,v+=vs ,120,"Rēķina specifikācija",Normal,InvRecepy,false,RecSClass);
  EditField(h2,v,150,"Svītru kods",Normal,BarCode,false,0);
  EditField(h,v+=vs ,120,"Līguma artikuls",Normal,ContractItem,false,INSClass);
  EditField(h2,v,150,"EAN kods",Normal,EUCodex,false,CommoditySClass);
  EditField(h,v+=vs ,120,"Īres artikuls",Normal,RentalItem,false,INSClass);
  EditField(h2,v,150,"EKN kods",Normal,EKNCode,false,0); // i think it is same as Commodity Code
  EditField(h,v+=vs ,120,"Garantijas mēneši",Normal,WarrantyLength,true,0);
  EditField(h2,v,150,"Krāsa",Normal,colnr,false,SetSClass);
  EditField(h,v+=vs,120,"Kārt. kods",Normal,SortCode,true,0);
  EditField(h,v+=vs,-40,"Īsais nosaukums",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"Brīdinājums",Normal,WarnText1,false,0);
  Tile(tilenr,130,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  v = 6;
  vm = v;
  EditField(h,vm,55,"Realizāc. konts",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLAT & "realiz. konts",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Eksporta realiz.",Normal,ExpSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Viet.izm. konts",Normal,CostAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLAT & "izm. konts",Normal,EUCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Eksporta izm. konts",Normal,ExpCostAcc,false,AccSClass);
  EditField(h2,v=vm,20,"PVN kods",Normal,VATCode,false,VATCodeSClass);
  EditField(h2,v+=vs,20,VATZoneNameLAT & "PVN kods",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h2,v+=vs,20,"Eksporta PVN kods",Normal,VATCodeExp,false,VATCodeSClass);
  EditField(h2,v+=vs,55,"Komponentes",Normal,CompUsage,false,AccSClass);
  CheckBox(h2,v+=20,0,"Aprēķināt reģ. real. nodokli",Perceptions);
  CheckBox(h2,v+=16,0,"Aprēķināt ieturētos nodokļus",Withholdings);
  EditField(h2=520,v=vm,50,"Viet. nod. veidne",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,VATZoneNameLAT & "nod. veidne",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,"Ārpus ES nod. veidne",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
  if (HasLocalization("GBR,LTU,POL")) then begin
	EditField(h2=680,v=vm,20,"Reversais #PVN# kods",Normal,RvrsVATCode,false,VATCodeSClass);
  end;
  Tile(tilenr,70,false,tilenr,VARMask);  tilenr = tilenr + 1;
  EditField(h,v=6,-40,"Variāciju šablons",Normal,VARMask,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Secība atskaitēs",Normal,VARRepOrder,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Apakškompl.",Normal,VARSubsets,false,VARSubsetsSClass);
  Tile(tilenr,120,true,tilenr,Math);  tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-40,-,99);
  MatCol(1,24,"Valoda",0,LangCode,false,LangSClass);
  MatCol(1,94,"Teksts",0,Text,false,0);
  EndMatrix;
  Tile(tilenr,220,false,tilenr,CostPerc);  tilenr = tilenr + 1;
  ButtonFrame(h=100,vm=(v=20),230,6,"Primārais izmaksu modelis");
  RadioButton(h,v,0,0,"Noklusējuma",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"Pašizmaksa",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"% _no cenas",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"Vidējā svērtā",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"Rindas",PrimaryCostModel);
  RadioButton(h,v+=16,kCostModelNoneItem,0,"Nekāds",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"Rindas izmaksu modelis");
  RadioButton(h,v,0,0,"Noklusējuma",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"F_IFO cena",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"LIFO cena",QueuedCostModel);

  ButtonFrame(h2=380,v=vm,200,3,"Pašizmaksa pa sēriju numuriem");
  RadioButton(h2,v,0,0,"Noklusējuma",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"Pašizmaksa neizmantojot Sēr. Nr.",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"Pašizmaksa pa sēriju numuriem",FIFOPerSerialNr);
  ButtonFrame(h2,v+=40,200,3,"Rindas izmaksu modelis pa nolikt.");
  RadioButton(h2,v,0,0,"Noklusējuma",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"Sekundārā pašizm. neatkarīgi no nol.",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"Sekundārā pašizm. pa noliktavām",FIFOPerLocation);
  ButtonFrame(h2,v+=40,200,3,"Vid. svērtā pa noliktavām");
  RadioButton(h2,v,0,0,"Noklusējuma",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"Vid. svērtā neatkarīgi no nol.",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"Vid. svērtā pa noliktavam",WAPerLocation);
/*5.3
  ButtonFrame(h2,v+=40,200,3,"Pašizmaksa pa noliktavām");
  RadioButton(h2,v,0,0,"Noklusējuma",CostPricePerLocation);
  RadioButton(h2,v+=16,1,0,"Pašizmaksa neatkarīgi no nol.",CostPricePerLocation);
  RadioButton(h2,v+=16,2,0,"Pašizmaksa pa noliktavām",CostPricePerLocation);
*/
  Tile(tilenr,240,false,tilenr,-); tilenr = tilenr + 1;
  h = 180; v = 6;
  label = UserDefined("INVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v=6 ,-40,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("INVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("INVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("INVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("INVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("INVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal1,true,0);
  end;
  label = UserDefined("INVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal2,true,0);
  end;
  label = UserDefined("INVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal3,true,0);
  end;
  label = UserDefined("INVc","UserDate1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate1,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate2,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate3,true,PasteCurDate);
  end;
  SpecialMenu("Artikula statusa atskaite",'I',0,"INStatusINDsm");
  SpecialMenu("Veidot pasūtījuma artikulu",' ',1,"PIFromINDsm");
  SpecialMenu("Veidot specifikāciju",' ',2,"RecFromINDsm");
//  SpecMenuItem("Recalculate Price List",' ',2);
    SpecialMenu("Artikula kustības pārskats",'h',3,"INrsRn_INSm");//CMD H DOES HIDE HANSA
  SpecialMenu("Artikula novietojuma statuss",' ',4,"LocItemStatDsm");
  EndWindow;

  return;
end;

window PUDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs;
  string 255 label;
  record CYBlock CYb;
  Integer tilenr;
  Integer f,flipnr,rn;

  BlockLoad(CYb);
  WindowBegin("Saņemtās preces",PUDClass,CGview,-);
  if (HasJewelleryInterface) then begin
    SetWRect(20,80,870,620);
  end else begin
    SetWRect(20,80,750,620);
  end;
  if (HasMultiCurrency or IsEnterprise or HasObjects) then begin
  Sizeable(-1,-1,0,0);
  end;
  UseView(PUVc);
  ActiveFieldOnNew("VECode");
  FormName(PurchaseForm);
  Tile(0,74,false,"",TransDate);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Piegādātājs",Normal,VECode,false,VESClass);
  EnterSkip(TransDate);
  EditField(h=255,v=vm,-40,"Nosaukums",Normal,VEName,false,0);
  CheckBox(h4=-100,v+=20,0,"Grāmatot",OKFlag);
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  CheckBox(h4,v+=16,0,"Cena ar PVN",InclVAT);
  end else begin
    CheckBox(h4,v+=16,0,"Cena ar PVN",InclVAT);
  end;
  CheckBox(-200,v-16,0,"Importēts",BLT_Importf); //EBS
  CheckBox(-200,v,0,"Eksportēts",BLT_Exportf); //EBS
  tilenr = 1;
  TileButton(tilenr,"Nosac."); tilenr = tilenr + 1;
  TileButton(tilenr,"Artikuli"); tilenr = tilenr + 1;
  if (HasMultiCurrency) then begin
    TileButton(tilenr,"Valūta"); tilenr = tilenr + 1;
  end;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
    TileButton(tilenr,"Papildu izm."); tilenr = tilenr + 1;
    TileButton(tilenr,"Transp."); tilenr = tilenr + 1;
    end;
    TileButton(tilenr,"Komentārs"); tilenr = tilenr + 1;
  end;
  tilenr = 1;

  vs = 20; h1 = 110; h2 = 300; h3 = 550; h4 = -100;
  Tile(tilenr,70,false,tilenr,TransDate); tilenr = tilenr + 1;
  EditField(h1,vm=(v=6),82,"Grāmat. datums",Normal,TransDate,false,PasteCurDate);
  if (IsEnterprise==false) then begin
    EditField(h2,v,-20,"Komentārs",Normal,Comment,false,0);
  end;
  if (HasMultiLocations) then begin
    v = v + vs;
    EditField(h1,v,82,"Noliktava",Normal,Location,false,LocationSClass);
  end;
  if (HasRoute) then begin
    v = v + vs;
    EditField(h1,v,82,"Maršruts",ViewOnly,Sorting,false,0);
  end;
  v = v + vs;
  // Need a cleaner way to skip to next visible field
  if (HasObjects) then begin
    EnterSkip(Objects);
  end else begin
    if (HasModPO) then begin
      EnterSkip(PONr);
    end else begin
      if (IsEnterprise) then begin
        if (StandardHansa==false) then begin
          EnterSkip(POCOSerNr);
        end else begin
          EnterSkip(PUClass);
        end;
      end else begin
        if (HasLanguages) then begin
          EnterSkip(LangCode);
        end else begin
          if (IsEnterprise) then begin
            EnterSkip(CustomsNr);
          end else begin
            if (HasLocalization("ARG,MEX,USA")) then begin
              EnterSkip(DispatchNumber);
            end else begin
              EnterSkip(Math);
            end;
          end;
        end;
      end;
    end;
  end;
  SoftEditField(h1,v,82,"Svītrkods",Normal,"scanbarcode",false,0,M4Str,60);
  if (HasObjects) then begin
    if (IsEnterprise) then begin
  EditField(h2,v=vm,135,"Objekts",Normal,Objects,false,ObjSClass);
    end else begin
      if (HasMultiLocations) then begin
        EditField(h2,v,135,"Objekts",Normal,Objects,false,ObjSClass);
      end else begin
        v = v + vs;
        EditField(h2,v,135,"Objekts",Normal,Objects,false,ObjSClass);
      end;
    end;
  end;
  if (HasModPO) then begin
    if (HasObjects) then begin
      v = v + vs;
    end;
    EditField(h2,v,135,"Pasūtījums Nr.",ViewOnly,PONr,false,0);
  end;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      v = v + vs;
      EditField(h2,v,135,"Pasūtījuma līgums",ViewOnly,POCOSerNr,true,POCOSClass);
      EditField(h2,v+=vs,135,"Forklifter",Normal,ForkliftUser,false,UserSClass); //EBS
    end;
  EditField(h3,v=vm,80,"Pasūtījuma klase",ViewOnly,PUClass,false,0);
  end;
  if (HasLanguages) then begin
    v = v + vs;
    EditField(h3,v,80,"Valoda",Normal,LangCode,false,LangSClass);
  end;
  if (IsEnterprise) then begin
    v = v + vs;
    EditField(h3,v,80,"Muitas Nr.",Normal,CustomsNr,false,0);
  end;
  if (HasLocalization("ARG,MEX,USA")) then begin
    v = v + vs;
    EditField(h3,v,80,"Dispatch Number",Normal,DispatchNumber,false,0);
  end;
//  CheckBox(h4,v=vm,0,"Price Incl. #VAT#",InclVAT);
  EnterSkip(Math);
  Tile(tilenr,220,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  if (HasSerialNumbers or HasLocalization("ARG,MEX,USA") or HasJewelleryInterface) then begin
    MatrixBegin(4,v,-50,-50,-,200);
  end else begin
    MatrixBegin(4,v,-25,-50,-,200);
  end;
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(1,28,"Artikuls",0,ArtCode,false,INSClass);
//  MatCol(1,84,"Var",0,VARList,true,VARSClass);
//  MatCol(1,144,"Qty",0,Quant,true,0);
  //EBS -->
  // if (HasVarieties) then begin
  // MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
  // end else begin
  //   MatCol(1,94,"Daudz.",0,Quant,true,0);
  // end;
  // EnterSkip(Spec);
  //EBS <--
  MatText(t=3,28,"Paraksts",true);
  MatCol(t,100,"",0,Sign,false,0);
  MatText(t,160,"Korekcija",true);
  MatCol(t,290,"Labojums",0,UpdDate,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  //EBS -->
  if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Daudz.",0,Quant,true,0);
  end;
  EnterSkip(Spec);
  //EBS <--
  MatColTL(1,154,"Vienība",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  MatCol(1,194,"Daudz. 2",0,Quant2,true,0); //EBS
  MatColTL(1,244,"Vien. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass); //EBS
  MatCol(1,284,"Nosaukums",0,Spec,false,0);
  MatCol(1,-280,"Imp.",0,ImportQuant,true,0); //EBS
  MatCol(1,-240,"Cena",0,UPrice,true,0);
  MatCol(1,-160,"Iepirk. cena",0,CostPrice,true,0);
  MatCol(1,-80,"Summa",0,Sum,true,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.2",0,Quant2,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.2",0,Quant2,true,0);
    end;
    EnterSkip(Spec);
    MatColTL(1,164,"Vien. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass);
    MatCol(1,204,"Nosaukums",0,Spec,false,0);
  // MatCol(1,144,"Nosaukums",0,Spec,false,0);
  //EBS <--
  MatCol(1,-350,"Noliktava",0,Location,false,LocationSClass);
  MatCol(1,-280,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-150,"Derīgs līdz",0,BestBefore,false,0);
  MatCol(1,-60,"Part.stat.",0,BatchStatus,false,BatchStatusSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Nosaukums",0,Spec,false,0);
  MatColTL(1,-404,"Cena",0,-1,ViewOnly,-1,InPrice,false,0);
    if (StandardHansa==false) then begin
  MatColTL(1,-324,"Cenu neatb.",0,-1,ViewOnly,-1,VarianceAmount,false,0);
  MatCol(1,-244,"Iepirk. cena",0,UPrice,true,0);
  MatCol(1,-174,"Papildu izm.",0,Extra,true,0);
  MatCol(1,-104,"Pašizm.",0,CostPrice,true,0);
    end else begin
      MatCol(1,-324,"Nosūt. izm.",0,ShipCost,true,0);
      MatCol(1,-244,"Papildu izm.",0,Extra,true,0);
      MatCol(1,-164,"Muitas izm.",0,CustomsCost,true,0);
    end;
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
  MatCol(1,-34,"Nod.v.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(1,-34,"PVNkd",0,VATCode,false,VATCodeSClass);
  end;
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Nosaukums",0,Spec,false,0);
  MatCol(1,-350,"Pieg. artik. Nr.",0,VEItemCode,false,PISClass);
  MatColTL(1,-270,"P. vien.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);
  MatCol(1,-200,"P. daudz.",0,VEQuant,true,0);
    if (StandardHansa==false) then begin
  MatCol(1,-140,"Koef.",0,Coefficient,true,0);
    end;
  MatCol(1,-90,"Pamatcena",0,BasePrice,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Nosaukums",0,Spec,false,0);
    if (StandardHansa==false) then begin
  MatCol(1,-400,"Nol. tips",0,StockType,false,SetSClass);
    end;
    if (HasTREO) then begin
  MatCol(1,-310,"TREO",0,TREO,false,SetSClass);
    end;
  MatCol(1,-220,"Nol. konts",0,CostAcc,false,AccSClass);
  MatCol(1,-155,"Kred. konts",0,CredAcc,false,AccSClass);
  MatCol(1,-90,"Objekti",0,Objects,false,ObjSClass);
    if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
      MatCol(1,144,"Muitas Nr.",0,CustomsNr,false,0);
      MatCol(1,-340,"Muitas dat.",0,CustomsDate,false,PasteCurDate);
  MatCol(1,-240,"Valsts",0,CountryOfOrg,false,CountrySClass);
  MatCol(1,-140,"Vieta",0,PosCode,false,PosSClass);
  MatCol(1,-70,"Uz vietu",0,ToPosCode,false,FreePosSClass);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Nosaukums",0,Spec,false,0);
  MatCol(1,-250,"Sērijas Nr",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-135,"Plat.",0,UnitXval,true,0);
  MatCol(1,-90,"Augst.",0,UnitYval,true,0);
  MatCol(1,-45,"Biez.",0,UnitZval,true,0);
    if (StandardHansa==false) then begin
  Flip(flipnr); flipnr = flipnr + 1;
  //EBS -->
  if (HasVarieties) then begin
  MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Daudz.",0,Quant,true,0);
  end;
  EnterSkip(Spec);
  //EBS <--
      MatCol(1,144,"Papildizm.",0,Extra,true,0);
  MatCol(1,-420,"Pieg.",0,ShipCost,true,0);
  MatCol(1,-360,"Muita",0,CustomsCost,true,0);
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Izm. 1";end;
  MatCol(1,-300,label,0,RowCost1,false,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Izm. 2";end;
  MatCol(1,-240,label,0,RowCost2,false,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Izm. 3";end;
  MatCol(1,-180,label,0,RowCost3,false,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Izm. 4";end;
  MatCol(1,-120,label,0,RowCost4,false,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Izm. 5";end;
  MatCol(1,-60,label,0,RowCost5,false,0);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Pas. Nr.",0,PONr,false,POSClass);
  MatCol(1,194,"Pas. Rnd.",0,OrdRow,false,0);
  MatCol(1,-370,"Pas. sask.",0,PORecon,false,0);
  MatCol(1,-310,"Komentārs",0,POReconComment,false,0);
  MatCol(1,-200,"Rēķ.sask.",0,VIRecon,false,0);
  MatCol(1,-130,"Komentārs",0,VIReconComment,false,0);
  end else begin
    if (HasSerialNumbers) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      //EBS -->
      if (HasVarieties) then begin
      MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
      end else begin
        MatCol(1,94,"Daudz.",0,Quant,true,0);
      end;
      EnterSkip(Spec);
      //EBS <--
      MatCol(1,144,"Apraksts",0,Spec,false,0);
      MatCol(1,-150,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
    end;
/*
    MatCol(1,-280,"Vienības cena",0,UPrice,true,0);
    MatCol(1,-210,"Transport.",0,ShipCost,true,0);
    MatCol(1,-140,"Papildu",0,Extra,true,0);
    MatCol(1,-70,"Pašizmaksa",0,CostPrice,true,0);
*/
  end;
  if (HasLocalization("ARG,MEX,USA")) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
    MatCol(t=1,144,"Description",0,Spec,false,0);
    MatCol(t,-250,"Dispatch Number",0,DispatchNumber,false,0);
  end;
  //EBS-->
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,94,"Nosaukums",0,Spec,false,0);
  if (HasVarieties) then begin
    MatCol(1,-500,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,-500,"Daudz.",0,Quant,true,0);
  end;
  MatColTL(1,-440,"Vien.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  if (HasVarieties) then begin
    MatCol(1,-390,"Daudz.2",0,Quant2,true,MATVARINSClass);
  end else begin
    MatCol(1,-390,"Daudz.2",0,Quant2,true,0);
  end;
  MatColTL(1,-330,"Vien. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass);
  MatCol(1,-280,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-150,"Derīgs līdz",0,BestBefore,false,0);
  MatCol(1,-70,"Uz vietu",0,ToPosCode,false,FreePosSClass);
  //EBS<--
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  if (StandardHansa==false) then begin
    if (HasSerialNumbers) then begin
      RowMenuItem(0,"Atvērt partijas specifikāciju",' ',' ',0,"OpenBatchPUDsm");
    end;
    RowMenuItem(0,"Sadalītājrinda",' ',' ',0,"SplitRowPUDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
//  v = 18;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  EditField(110,-41,70,"Daudz.",ViewOnly,SumQuant,true,0);
//  EditField(110,-21,70,"Price Subtotal",Normal,SubTotal,true,0); //Shows the same as SumCostPrice?
  EditField(260,-41,70,"Piegāde",Normal,ShipCost,true,0);
  if (IsEnterprise) then begin
  EditField(260,-21,70,"Muita",Normal,CustomsCost,true,0);
  end;
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  EditField(410,-41,70,"PVN",Normal,VATVal,true,0);
  if (HasExtTax) then begin
  EditField(410,-21,70,"Atsk. nod.",ViewOnly,TAX1Sum,true,0);
    end;
  end else begin
    EditField(410,-41,70,"Nod.",Normal,VATVal,true,0);
  end;
  EditField(-169,-41,118,"Summa",ViewOnly,SumCostPrice,true,0);
  EditField(-169,-21,118,"KOPĀ",ViewOnly,PayVal,true,0);
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
  vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
  EditField(h1,v=6,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
    if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
    end else begin
        EditField(h1,v+vs,50,"Bāzes valūta",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Kurss",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Bāzes valūta 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,120,false,tilenr,Cost1); tilenr = tilenr + 1;
  vs = 20;
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Papildizm. 1";end;
  EditField(h=110,v=6,70,label,Normal,Cost1,false,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Papildizm. 2";end;
  EditField(h2=295,v,70,label,Normal,Cost2,false,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Papildizm. 3";end;
  EditField(h,v+=vs,70,label,Normal,Cost3,false,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Papildizm. 4";end;
  EditField(h2,v,70,label,Normal,Cost4,false,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Papildizm. 5";end;
  EditField(h,v+=vs,70,label,Normal,Cost5,false,0);
    if (HasApprovals) then begin
      SoftEditField(h2,v,123,"Apstipr. statuss",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
    end;
  ButtonFrame(h3=400,v=16,130,2,"Papildus izmaksu aprēķins");
  RadioButton(h3,v,0,0,"Cenā",ExtraCostsCalculation);
  RadioButton(h3,v+=16,1,0,"Svarā",ExtraCostsCalculation);
/*
//oldapprovals
  ButtonFrame(h3=-163,v=16,123,6,"Apstiprinājuma statuss");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nav nepieciešams",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nav sākts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nav prasīts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Procesā",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Apstiprināts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Noraidīts",AcceptanceStatus);
*/
    Tile(tilenr,130,false,tilenr,FreightCode); tilenr = tilenr + 1;
  EditField(h1,v=6,80,"Transporta komp.",Normal,FreightCode,false,FreightCompanySClass);
  EditField(h1,v+=vs,-20,"Nosaukums",Normal,FreightCompany,false,0);
  EditField(h1,v+=vs,-20,"Reģ. Nr.",Normal,FreightCompanyRegNr,false,0);
  EditField(h1,v+=vs,-20,"A/M informācija",Normal,TruckInfo,false,0);
  EditField(h1,v+=vs,-20,"Vadītājs",Normal,Driver,false,0);
  EditField(h1,v+=vs,-20,"CMR",Normal,CMRText,false,0); // International transporting number
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1,v=6,-20,"Komentārs",Normal,Comment,false,0);
  end;
  if (StandardHansa==true) then begin
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1,v=6,-20,"Komentārs",Normal,Comment,false,0);
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Saņemtās preces statuss",'r',4,"PUStatusDsm");
    SpecialMenu("Veidot sēr. Nr.",' ',2,"GenSerialNosPUDsm");
    if (HasIntegratedNL) then begin
      SpecialMenu("Atvērt grāmatojumu",'t',4,"OpenTRFromPU");
    end;
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
    if (HasModPL) then begin
      SpecialMenu("Ienākošo rēķinu",'F',3,"VIFromPUDsm");
    end;
    if (HasRetGoodsToSupp and HasModIN) then begin
      SpecialMenu("Atgriezt preci",'B',7,"RetPUFromPUDsm");
    end;
  end else begin
  if (IsEnterprise) then begin
  SpecialMenu("Meklēt artikulu",'f',1,"ItemSearchDsm");
  SpecialMenu("Saņemtās preces statuss",'r',4,"PUStatusDsm");
  end;
  if (HasSerialNumbers) then begin
  SpecialMenu("Veidot sēr. Nr.",' ',2,"GenSerialNosPUDsm");
  end;
    if (HasIntegratedNL) then begin
  SpecialMenu("Atvērt grāmatojumu",'t',4,"OpenTRFromPU");
  end;
  if (HasTaxMatrix) then begin
  SpecialMenu("Atvērt nod. matricu",' ',25,"OpenVatMatrixPUDsm");
  end;
  SpecialMenu("Drukāt uzlīmes",'e',0,"PrintPULabPUDsm");
  SpecialMenu("Drukāt paletes uzlīmes",'w',0,"BLT_PrintPUPalletLabPUDsm"); //EBS
  SpecialMenu("Pārcelt importēto daudzumu",' ',0,"BLT_TransImpQuantPUDsm"); //EBS
  SpecialMenu("Atjaunot cenas",' ',1,"UpdatePricesPUDsm");

  if (HasModWHM) then begin
    SpecialMenu("Apstiprināt noliktavas kustību",' ',9,"OKStockMovPUrDsm");
  end;
  if (HasLocalization("HRV")) then begin
    SpecialMenu("Pārdošanas cenas aprēķins",' ',8,"SPCHRVPUDsm");
  end;
  if (HasApprovals) then begin
    SpecialMenu("Nosūtīt apstiprināšanai",' ',6,"PUSendforAcceptancePUDsm");
    SpecialMenu("Atcelt apstiprināšanas pieprasījumu",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModPL) then begin
  SpecialMenu("Ienākošo rēķinu",'F',3,"VIFromPUDsm");
  end;
  if (HasQualityControl) then begin
  SpecialMenu("Kvalitātes kontrole",'u',10,"QualConFromPUDsm");
//  SpecialMenu("Update Mark",' ',6,"UpdateMarkPUDsm");
  end;
    if (HasAdvancedStock or (HasRetGoodsToSupp and HasModIN)) then begin
  SpecialMenu("Atgriezt preci",'B',7,"RetPUFromPUDsm");
  end;
  if (HasModRent) then begin
//  SpecialMenu("Create Stock Movement",' ',5,"StockMovFromPUSpec");
//  SpecialMenu("Scan",' ',8,"ScanBarCodePUDsm");
  SpecialMenu("Noliktavas pārvietošanas",' ',8,"INTransFromPUsm");
  end;
    SpecialMenu("Piegādātāju",' ',0,"AddSupplierPUDsm");
    SpecialMenu("Artikulu",' ',0,"AddItemPUDsm");
  end;
  EndWindow;
end;

window SHDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs;
  Integer tilenr,f,flipnr,rn;

  WindowBegin("Nosūtītās preces",SHDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(SHVc);
  vs = 20;
 Tile(0,74,false,"",SerNr);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Klients",ViewOnly,CustCode,false,0);
  EditField(h=255,v=vm,-40,"Nosaukums",Normal,Addr0,false,0);
  v = v + vs;
  if (HasOfficialSerNr and (HasLocalization("AGO")==false)) then begin
    EditField(h,vm=v,135,"Pavadz. Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  end;
  if (HasTREO) then begin
  EditField(h+230,vm,95,"TREO Nr.",Normal,TREONr,false,0);
  end;
  CheckBox(h4=-100,v,0,"Grāmatot",OKFlag);
  tilenr = 1;
  if (IsEnterprise) then begin
    TileButton(tilenr,"Nosacījumi"); tilenr = tilenr + 1;
    TileButton(tilenr,"Artikuli"); tilenr = tilenr + 1;
    TileButton(tilenr,"Piegādes nosac."); tilenr = tilenr + 1;
    TileButton(tilenr,"Iepakošana"); tilenr = tilenr + 1;
    TileButton(tilenr,"Piegādes adrese"); tilenr = tilenr + 1;
    TileButton(tilenr,"Komentārs"); tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
    TileButton(tilenr,"Piegāde"); tilenr = tilenr + 1;
    end;
  end else begin
    TileButton(tilenr,"Komentārs"); tilenr = tilenr + 1;
    TileButton(tilenr,"Artikuli"); tilenr = tilenr + 1;
    TileButton(tilenr,"Adreses"); tilenr = tilenr + 1;
    if (HasLocalization("PRT")) then begin
      if (HasModIN and HasModSL) then begin
        TileButton(tilenr,"Iepakojums"); tilenr = tilenr + 1;
      end;
      TileButton(tilenr,"Piegāde"); tilenr = tilenr + 1;
    end;
  end;
  tilenr = 1;
  Tile(tilenr,70,false,tilenr,ShipDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Datums",Normal,ShipDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    v = v + vs;
    EditField(h1,v,82,"Noliktava",Normal,Location,false,LocationSClass);
  end;
  if (HasRoute) then begin
    v = v + vs;
    EditField(h1,v,82,"Maršruts",Normal,Sorting,false,DelRouteSClass);
  end;
  if (IsEnterprise) then begin
    v = v + vs;
    SoftEditField(h1,v,82,"Svītrkods",Normal,"scanbarcode",false,0,M4Str,60);
  end;
  if (HasObjects) then begin
  EditField(h2,v=vm,135,"Objekti",Normal,Objects,false,ObjSClass);
  end;
  if (HasBranch) then begin
    v = v + vs;
    EditField(h2,v,135,"Filiāle",ViewOnly,BranchID,false,0);
  end;
  if (HasMultiLocations or HasModTS) then begin
    v = v + vs;
  end;
  if (HasModTS) then begin
    EditField(h2,v,135,"Projekts",ViewOnly,PRCode,false,0);
  end;
  if (HasObjects) then begin
    EditField(h3,v=vm,80,"Pasūt. Nr.",ViewOnly,OrderNr,false,0);
  end else begin
    if (IsEnterprise==false) then begin
      if (HasModTS) then begin
        EditField(h3,v=vm,135,"Pasūt. Nr.",ViewOnly,OrderNr,false,0);
      end else begin
        EditField(h2,v=vm,135,"Pasūt. Nr.",ViewOnly,OrderNr,false,0);
      end;
    end;
  end;
  if (IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Pasūtījuma veids",Normal,SHClass,false,OrderClassSClass);
  CheckBox(h4,v=6,0,"Tel. ziņojums",Check1);
  end;
  if (IsEnterprise==false) then begin
    if (HasMultiLocations) then begin
      EditField(h1,v+=2*vs,-40,"Komentārs",Normal,Comment,false,0);
    end else begin
      EditField(h1,v+=vs,-40,"Komentārs",Normal,Comment,false,0);
    end;
    if (HasLanguages) then begin
      EditField(h1,v+=vs,82,"Valoda",Normal,LangCode,false,LangSClass);
    end;
  end;
  CheckBox(h3-190,50,0,"EDI Imported",BLT_EDIImportf);  //EBS
  CheckBox(h3-80,50,0,"Importēts",BLT_Importf);  //EBS
  CheckBox(h3+30,50,0,"Eksportēts",BLT_Exportf); //EBS
  HalPushButton(h3,80,-20,100,"SHVc_ReadWeightBtn","Nolasīt svaru"); //EBS
  Tile(tilenr,190,true,tilenr,Math); tilenr = tilenr + 1;
  v = 20;
  MatrixBegin(4,v,-50,-35,-,200);
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,32,"Artikuls",0,ArtCode,false,ForSaleINSClass);
//  MatCol(1,94,"Veids",0,VARList,false,VARSClass);
//  MatCol(1,144,"Nosaukums",0,Spec,false,0);
  MatCol(1,94,"Nosaukums",0,Spec,false,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Artikuls",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,false,VARSClass);
//  MatCol(t,144,"Description",0,Spec,false,0);
  MatCol(t,94,"Apraksts",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeHidden,32,"Printējot, šī rinda un visas rindas zem tās būs paslēptas",false);
  t = kInvoiceRowTypePerceptionTax;
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasCustItem) then begin
    MatCol(1,-350,"Kl.artik.Nr.",0,CustArtCode,false,CUINSClass);
  end;
  MatColTL(1,-280,"Kl. apst.",0,M45Val,ViewOnly,0,QuantConfByCust,true,0); //EBS
  MatCol(1,-200,"Import.",0,ImportQuant,true,0);
  MatCol(1,-150,"Pasūtīts",0,Ordered,true,0);
  MatCol(1,-98,"Pieej.",0,InStock,true,0);
  MatCol(1,-50,"Nosūt.",0,Ship,true,0);
  if (HasCustItem) then begin
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-230,"Klienta artik. Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-150,"Pasūtīts",0,Ordered,true,0);
  end else begin
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-147,"Pasūtīts",0,Ordered,true,0);
  end;
  MatCol(t,-98,"Pieej.",0,InStock,true,0);
  MatCol(t,-50,"Nosūt.",0,Ship,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  if (IsEnterprise==false) then begin
    if (HasSerialNumbers) then begin
      MatCol(1,-350,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
    end;
    if (HasObjects) then begin
      MatCol(1,-250,"Objects",0,Objects,false,ObjSClass);
    end;
    MatCol(1,-98,"FIFO",0,FIFORowVal,false,0);
    if (HasLocalization("RUS")) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,-230,"Unit",0,UnitCode,false,UnitSClass);
      MatCol(1,-180,"Unit Name",0,UnitComment,false,0);
    end;
  end else begin
  MatCol(1,-350,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-250,"Derīgs līdz",0,BestBefore,false,0);
  MatCol(1,-150,"Noliktava",0,Location,false,LocationSClass);
    if (HasPositions) then begin
  MatCol(1,-50,"Pozīcija",0,PosCode,false,UsedPosSClass);
    end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,-350,"Sēr. Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-250,"Derīgs līdz",0,BestBefore,false,0);
  MatCol(t,-150,"Noliktava",0,Location,false,LocationSClass);
    if (HasPositions) then begin
  MatCol(t,-50,"Pozīcija",0,PosCode,false,UsedPosSClass);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-400,"Atpirkš. cena",0,BBCostPrice,false,0);
  MatCol(1,-320,"Rindas FIFO",0,FIFORowVal,false,0);
    if (StandardHansa==false) then begin
  MatCol(1,-220,"Vid. sv. bāzes 2",0,WAB2,false,0);
    end;
  MatCol(1,-120,"Cena",0,BasePrice,false,0);
  MatCol(1,-40,"Koef.",0,Coefficient,false,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"Atpirkš. cena",0,BBCostPrice,false,0);
  MatCol(t,-320,"Rindas FIFO",0,FIFORowVal,false,0);
    if (StandardHansa==false) then begin
  MatCol(t,-220,"Vid. sv. Bāzes 2",0,WAB2,false,0);
    end;
  MatCol(t,-120,"Cena",0,BasePrice,false,0);
  MatCol(t,-40,"Koef.",0,Coefficient,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-400,"Specifikācija",0,Recepy,false,0);
  MatCol(1,-320,"Vieta",0,Source,false,SourceSClass);
  MatCol(1,-240,"Izrakst. rēķ.",0,Invd,false,0);
    if (StandardHansa==false) then begin
  MatCol(1,-160,"Izkrauš. dat.",0,DespatchRowDate,false,PasteCurDate);
  MatCol(1,-80,"Izkrauš. laiks",0,DespatchRowTime,false,PasteCurTime);
    end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"Specifikācija",0,Recepy,false,0);
  MatCol(t,-300,"Vieta",0,Source,false,SourceSClass);
  MatCol(t,-240,"Izr. rēķins",0,Invd,false,0);
    if (StandardHansa==false) then begin
  MatCol(t,-160,"Izkr. datums",0,DespatchRowDate,false,PasteCurDate);
  MatCol(t,-80,"Izkr. laiks",0,DespatchRowTime,false,PasteCurTime);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-400,"Realiz. konts",0,SalesAcc,false,AccSClass);
  MatCol(1,-330,"Izmaksu konts",0,CostAcc,false,AccSClass);
  MatCol(1,-250,"Objekti",0,Objects,false,ObjSClass);
  MatCol(1,-135,"Plat.",0,UnitXval,true,0);
  MatCol(1,-90,"Augst.",0,UnitYval,true,0);
  MatCol(1,-45,"Biez.",0,UnitZval,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"Realiz. konts",0,SalesAcc,false,AccSClass);
  MatCol(t,-330,"Izmaksu konts",0,CostAcc,false,AccSClass);
  MatCol(t,-250,"Objekti",0,Objects,false,ObjSClass);
  MatCol(t,-135,"Plat.",0,UnitXval,true,0);
  MatCol(t,-90,"Augst.",0,UnitYval,true,0);
  MatCol(t,-45,"Biez.",0,UnitZval,true,0);
    if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-300,"Iepakojumi",0,RowPackages,false,0);
  MatCol(1,-220,"Iep. tips",0,PackageType,false,PackTypeSClass);
  MatCol(1,-170,"Iep. nosaukums",0,PackageDesc,false,0);
  MatCol(1,-70,"Akcīze",0,ExciseNr,false,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,-300,"Iepakojumi",0,RowPackages,false,0);
  MatCol(t,-220,"Iep. tips",0,PackageType,false,PackTypeSClass);
  MatCol(t,-170,"Iep. nosaukums",0,PackageDesc,false,0);
  MatCol(t,-70,"Akcīze",0,ExciseNr,false,0);
    end;
  end;
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Artikula statuss",'I','I',0,"ItemStatusSHDsm");
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      RowMenuItem(0,"Sadalītājrinda",' ',' ',0,"SplitRowSHDsm");
    end;
  end;
  EndRowMenu;
  EndMatrix;
  vs = 22;
//  v = 21;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;

//  CheckBox(20,-20,0,"OK",OKFlag);
  if (HasLocalization("PRT")) then begin
    EditField(120,-20,150,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
//    SoftEditField(120,-20,150,"Tax Auth. Approval",Normal,"TaxAdminServSeal",false,0,M4Str,200);
  end;
  EditField(-131,-20,80,"Kopējais daudz.",ViewOnly,TotQty,true,0);
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,ShipMode); tilenr = tilenr + 1;
  vs = 20;
  EditField(h1,v=vm,82,"Nosūt. veids",Normal,ShipMode,false,DMSClass);
  EditField(h1,v+=vs,80,"Nodokļu summa",ViewOnly,TAX1Sum,true,0);
    if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Deklarētā vērtība",Normal,DeclaredVal,true,0);
  EditField(h1,v+=vs,-20,"E-sūtījuma statuss",ViewOnly,EShipStatus,false,0);
      if (HasLocalization("BRA,BOL,PRT")) then begin
        EditField(h1,v+=vs,80,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
      end;
    end;
  EditField(h2,v=vm,80,"Kopējais daudz.",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Kopējais svars",Normal,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Kopējais tilpums",Normal,TotVolume,true,0);
  CheckBox(473,v=vm,0,"Izmantot rēķina adresi",Check2);
    if (StandardHansa==false) then begin
  CheckBox(473,v+=16,0,"Elektroniskais sūtījums izveidots",EShipmentCreated);
  CheckBox(473,v+=16,0,"Elektroniskais sūtījums saņemts",EShipCollected);
    end;
    Tile(tilenr,110,false,tilenr,Packages); tilenr = tilenr + 1;
    h2 = 310;
  EditField(h1,v=6,82,"Transporta Nr.",Normal,TransportNumber,false,0);
  EditField(h1,v+=vs,82,"Iepakojumi",Normal,Packages,true,0);
    if (HasLanguages) then begin
  EditField(h1,v+=vs,82,"Valoda",Normal,LangCode,false,LangSClass);
    end;
  EditField(h1,v+=vs,82,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (StandardHansa==false) then begin
  EditField(h1,v+=vs,-20,"Transporta norādes",Normal,TransportDirect,false,0);
      EditField(h1,v+=vs,80,"Plān. nosūt. dat.",Normal,PlanSendDate,false,PasteCurDate);
      EditField(h1,v+=vs,80,"Plān. nosūt. laiks",Normal,PlanSendTime,false,PasteCurTime);
    end;

  EditField(h2,v=6,135,"No pilsētas",Normal,FromCity,false,0);
  EditField(h2,v+=vs,135,"Uz pilsētu",Normal,ToCity,false,0);
  EditField(h2,v+=vs,135,"No doka",Normal,FromDock,false,0);
  EditField(h2,v+=vs,135,"Uz doku",Normal,ToDock,false,0);
    if (StandardHansa==false) then begin
      EditField(h2,v+=2*vs,80,"Plān. pieg. dat.",Normal,PlanArrDate,false,PasteCurDate);
      EditField(h2,v+=vs,80,"Plān. pieg. laiks",Normal,PlanArrTime,false,PasteCurTime);
    end;
  end;
  Tile(tilenr,150,false,tilenr,Addr1); tilenr = tilenr + 1;
  vs = 20;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
  EditField(h1,v=6,80,"Adreses kods",Normal,DelAddrCode,false,DelAddr3SClass);
  EditField(h1,v+=vs,-20,"Piegāde",Normal,Addr1,false,0);
    end else begin
      EditField(h1,v=6,-20,"Piegāde",Normal,Addr1,false,0);
    end;
  EditField(h1,v+=vs,-20,"Adrese",Normal,Addr2,false,0);
  end else begin
    EditField(h1,v=6,-20,"Adrese",Normal,Addr1,false,0);
    EditField(h1,v+=vs,-20,"",Normal,Addr2,false,0);
  end;
  EditField(h1,v+=vs,-20,"",Normal,Addr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (HasCountryPerCustomer) then begin
  EditField(h1,v+=vs,80,"Valsts",Normal,DelCountry,false,CountrySClass);
    if (HasLocalization("BRA")) then begin
      EditField(h2-109,v,232,"",ViewOnly,DelCountryName,false,0);
    end;
  end;
  if (IsEnterprise) then begin
  EditField(h3,v,-20,"Reģions",Normal,Region,false,RegionSClass);
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1+10,v=6,-20,"Komentārs",Normal,Comment,false,0);
    EditField(h1+10,v+=20,-20,"Realiz. līguma tips",Normal,ORCOType,false,0);
    if (HasNumberSeries and HasLocalization("PRT")) then begin
      if (HasOfficialSerNr) then begin
        EditField(h1+10,v+=vs,100,"Pavadz. Nr. 2",Normal,OfficialSerNr2,false,0);
        EditField(h2,v,135,"Statuss",Normal,Status,false,SetSClass);
      end;
    end;
  end else begin
    if (HasLocalization("RUS")) then begin
      EditField(h1,v+=vs,80,"Kopējais svars",Normal,TotWeight,true,0);
    end;
  end;
  if (IsStandardProduct and HasLocalization("PRT,LTU") and HasModIN and HasModSL) then begin
    Tile(tilenr,110,false,tilenr,PlanSendDate); tilenr = tilenr + 1;
    h2 = 310;
    EditField(h1,v=6,80,"Plān. nosūt. dat.",Normal,PlanSendDate,false,PasteCurDate);
    EditField(h1,v+=vs,80,"Plān. nosūt. laiks",Normal,PlanSendTime,false,PasteCurTime);
    if (HasLocalization("PRT")) then begin
      EditField(h2,v=6,80,"Plān. pieg. dat.",Normal,PlanArrDate,false,PasteCurDate);
      EditField(h2,v+=vs,80,"Plān. pieg. laiks",Normal,PlanArrTime,false,PasteCurTime);
    end;
  end;
  if (IsEnterprise or HasLocalization("PRT,LTU")) and (StandardHansa==false) then begin
    Tile(tilenr,130,false,tilenr,FreightCode); tilenr = tilenr + 1;
    if (IsEnterprise) then begin
      HalPushButton(473,2,600,22,"UpdateSHPackages","Definēt pakas");
    end;
    EditField(h1,v=6,80,"Transporta komp.",Normal,FreightCode,false,FreightCompanySClass);
    EditField(h1,v+=vs,-20,"Nosaukums",Normal,FreightCompany,false,0);
    EditField(h1,v+=vs,-20,"Reģ. Nr.",Normal,FreightCompanyRegNr,false,0);
    EditField(h1,v+=vs,-20,"A/M informācija",Normal,TruckInfo,false,0);
    if (IsEnterprise or HasLocalization("PRT")) then begin
      EditField(h1,v+=vs,-20,"Vadītājs",Normal,Driver,false,0);
      EditField(h1,v+=vs,-20,"CMR",Normal,CMRText,false,0); // International transporting number
    end;
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Artikula statuss",'I',2,"ItemStatusSHDsm");
    if (HasIntegratedNL) then begin
      SpecialMenu("Atvērt grāmatojumu",'t',3,"OpenTRFromSH");
    end;
    SpecialMenu("Drukāt piegādes uzlīmes",'l',0,"PrintSHLabSHDsm");
    if (HasReturnedGoods and HasModIN) then begin
      SpecialMenu("Veidot atgriezto preci",'B',5,"RetFromSHSpec");
    end;
  end else begin
  SpecialMenu("Drukāt kravas uzlīmes",'l',0,"PrintSHLabSHDsm");
  SpecialMenu("Pārcelt importēto daudzumu",' ',0,"BLT_TransImpQuantSHDsm"); //EBS
  if (IsEnterprise) then begin
  SpecialMenu("Rēķināt svaru",'w',1,"SHCalcWeightDsm");
  end;
  if (HasIntegratedNL) then begin
  SpecialMenu("Atvērt grāmatojumu",'t',3,"OpenTRFromSH");
  end;
  if (HasLocalization("SWE")) then begin
  SpecialMenu("ASG eksports",' ',4,"ASGEnSHDsm"); /* Specific for Sweden */
  end;
  if (HasLocalization("NOR")) then begin
  SpecialMenu("Winedi eksports",' ',4,"WinEDIEnSHDsm"); /* Specific for Norway */
  end;
  if (HasLocalization("PRT")) then begin
    if (HasETaxDocuments) then begin
    SpecialMenu("Sūtīt uz nodokļu iestādēm",'',10,"EShipPRTDsm");  //tax authorities server is down
    end;
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Aizpildīt artikulu sērijas Nr.",' ',6,"INBatchSHSpec");
  end;
  if (HasModWHM) then begin
  SpecialMenu("Apstiprināt noliktavas kustības",' ',8,"OKStockMovSHrDsm");
  SpecialMenu("Drukāt noliktavas preču sarakstu",' ',9,"PickingListDsm");
  end;
//  SpecialMenu("Calculate Manually",' ',10,"CalcSHMan"); /* Specific for one customer in Portugal, you may comment it out */
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        SpecialMenu("Reģistrēt elektronisko sūtījumu",' ',9,"EShipRegisterDsm");
      end;
      if (GuiType==kGuiiPhone) then begin
        SpecialMenu("Paraksts",' ',10,"SignSHDsm");
      end;
    end;
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
    if (HasModSL) then begin
      SpecialMenu("Rēķinu",'F',1,"IVFromSHDsm");
    end;
    if (IsEnterprise or HasReturnedGoods) then begin
      SpecialMenu("Atgriezto preci",'B',2,"RetFromSHDsm");
    end;
  end;
  EndWindow;

  return;
end;

window ProdDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vm,vs;
  Integer rn,flipnr,f;

  WindowBegin("Ražojums",ProdDClass,CGview,-);
  SetWRect(20,80,620,333);
  Sizeable(-1,-1,0,0);
  UseView(ProdVc);
  FormName(ProdOrderForm);
  ActiveFieldOnNew("Recepy");
  Tile(0,195,false,"",SerNr);
  vs = 20; h = 70; h2 = 390; v = 10; h3 = 500; h4 = 220;
  EditField(h,v,80,"Nr.",St_i,SerNr,false,TSerSClass);
  EditField(h4,v,250,"Nosauk.",Normal,RecName,false,0);
  EditField(h,v+=vs,80,"Spec.",Normal,Recepy,false,RecSClass);
  EditField(h4,v,80,"Sāk. dat.",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,80,"Beigu datums",Normal,ProdDate,false,PasteCurDate);
  EditField(h,vm=(v+=vs),80,"Daudz.",Normal,Qty,true,0);
  if (IsEnterprise) then begin
  EditField(h4,v,80,"Sāk. laiks",Normal,StartTime,false,PasteCurTime);
  EditField(h2,v,80,"Beigu laiks",Normal,EndTime,false,PasteCurTime);
  end;
  if (HasMultiLocations) then begin
  EditField(h,v+=vs,80,"Noliktava",Normal,Location,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h4,v,80,"Klase",Normal,ProdClass,false,ProdClassSClass);
  EditField(h2,v,80,"Iekārta",Normal,FixAssCode,false,AT2UnitSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h,v+=vs,80,"Pārbaudīja",Normal,Inspector,false,UserSClass);
  end;
  if (HasPersons) then begin
  EditField(h2,v,80,"Persona",Normal,Person,false,UserSClass);
  end;
//  EditField(h2,v,80,"In Item Scale",Normal,Scale,false,0);
  if (IsEnterprise) then begin
  EditField(h,v+=vs,80,"Raž. pasūt.",ViewOnly,ProdOrder,false,0);
  EditField(h2,v,80,"Brāķa iemesls",Normal,StandProblem,false,StandProblemsSClass);
  end else begin
    EditField(h2,v+=vs,80,"Brāķa iemesls",Normal,StandProblem,false,StandProblemsSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h,v+=vs,80,"Fakt. daudz.",ViewOnly,ActualQty,true,0);
  EditField(h2,v,80,"Maršrutēšana",Normal,Routing,false,RoutingSClass);
  end;
  EditField(h,v+=vs,80,"Kastes artikuls",Normal,DefBoxItem,false,BLT_BoxItemsSClass); //EBS
  EditField(h2,v,80,"Daudz. kastē",Normal,QtyInBox,true,0); //EBS
//  ButtonFrame(h3,v+=36,80,3,"Inspection");
//  RadioButton(h3,v,0,0,"Not done",InspectStatus);
//  RadioButton(h3,v+=16,1,0,"OK",InspectStatus);
//  RadioButton(h3,v+=16,2,0,"Faulty",InspectStatus);
  TileButton(1,"Artikuli");
  TileButton(2,"Komentārs");
//  CheckBox(370,v,0,"Reserved",Reserved);
  ButtonFrame(h3,v=20,150,5,"Statuss");
  RadioButton(h3,v,0,0,"Izveidots",PRStatusFlag);
  RadioButton(h3,v+=16,4,0,"Atcelts",PRStatusFlag);
  RadioButton(h3,v+=16,2,0,"Iesākts",PRStatusFlag);
  RadioButton(h3,v+=16,3,0,"Pabeigts",PRStatusFlag);
  RadioButton(h3,v+=16,5,0,"Neveiksmīgi pabeigts",PRStatusFlag);
  HalPushButton(h3,v+=20,-20,V+20,"ProdVc_ReadWeightBtn","Nolasīt svaru"); //EBS
  HalPushButton(h3,v+20,-20,v+20,"ProdVc_PrintLabelsBtn","Drukāt uzlīmes"); //EBS
  Tile(1,120,true,"1",Math);
  v=20;
  MatrixBegin(4,v,-50,-30,-,300);
  Flip(0);
  MatCol(1,34,"Artikuls",0,Item,false,INSClass);
  MatCol(1,110,"Apraksts",0,Comment,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasSerialNumbers) then begin
  MatCol(1,-375,"Sēr. Nr.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-310,"Ieej.",0,InQty,true,MATVARINSClass);
  MatCol(1,-260,"Izej.",0,OutQty,true,MATVARINSClass);
  if (IsEnterprise) then begin
  MatCol(1,-210,"Rel.",0,RelVal,true,0);
  end;
  MatCol(1,-160,"Mat.izm.",0,ItemCost,true,0);
  if (IsEnterprise) then begin
  MatCol(1,-100,"Darb.izm.",0,ExtraCost,true,0);
  end;
  MatCol(1,-40,"Koef.",0,Coefficient,false,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-375,"Objekti",0,Objects,false,ObjSClass);
  MatCol(1,-310,"Ieej.",0,InQty,true,0);
  MatCol(1,-260,"Izej.",0,OutQty,true,0);
  MatCol(1,-210,"Fakt.",0,ActualQty,true,0);
  MatCol(1,-160,"Materiāls",0,Material,false,MaterialSClass);
  end;
  if (HasSerialNumbers) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-270,"Ieej.",0,InQty,true,0);
  MatCol(1,-220,"Izej.",0,OutQty,true,0);
  MatCol(1,-170,"Sēr. Nr.",0,SerialNr,false,SerialNrSClass);
    if (IsEnterprise) then begin
  MatCol(1,-80,"Der. term.",0,BestBefore,false,PasteCurDate);
    end;
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-270,"Ieej.",0,InQty,true,0);
  MatCol(1,-220,"Izej.",0,OutQty,true,0);
  MatCol(1,-170,"Svars",0,Weight,true,0);
  MatCol(1,-120,"Plat.",0,UnitXval,true,0);
  MatCol(1,-80,"Augst.",0,UnitYval,true,0);
  MatCol(1,-40,"Gar.",0,UnitZval,true,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-100,"Izj. rinda FIFO",0,OrgProdFIFORowVal,true,0);
  end;
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Artikula statuss",'I','I',0,"ItemStatusProdDsm");
  if (IsEnterprise) then begin
  RowMenuItem(0,"Atvērt partijas specifikāciju",' ',' ',0,"OpenBatchProdDsm");
    RowMenuItem(0,"Kvalitātes kontrole",' ',' ',0,"QualConFromProdDsm");
  end;
  EndRowMenu;
  EndMatrix;
  v=v+1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (IsEnterprise) then begin
  EditField(h,-22,60,"Ien. svars",Normal,TotWeight,false,0);
  EditField(h4,-22,60,"Kastes",Normal,BoxCnt,false,0); //EBS
  EditField(h4+200,-22,60,"Bruto svars",Normal,TotOutWeight,false,0); //EBS edit
  EditField(h4+380,-22,60,"Neto svars",Normal,NetoWeight,false,0); //EBS
  Tile(2,120,false,"2",Comment);
  EditField(h,v=15,-20,"Komentārs",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment3,false,0);
  EditField(h,v+=vs,-20,"Objekti",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,60,"Sāk.laiks",Normal,StartTime,false,PasteCurTime);
  EditField(210,v,60,"Beigu laiks",Normal,EndTime,false,PasteCurTime);
  EditField(h2,v,60,"Pārtraukums",Normal,BreakTime,false,0);
  EditField(h2+200,v,70,"Valoda",Normal,LangCode,true,LangSCLass);
//  EditField(h2+200,v,80,"AcumCostPrice",ViewOnly,AcumCostPrice,false,0);
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Aprēķināt izmaksas",' ',0,"ProdFillFIFODsm");
  end;
  if (HasSerialNumbers) then begin
  SpecialMenu("Veidot izejošo artikulu sērijas numurus",' ',1,"GenSerialNosProdDsm");
  end;
  SpecialMenu("Artikulu meklēšana",'f',1,"ItemSearchDsm");
  SpecialMenu("Ražojuma statuss",'r',4,"ProdStatusFromProdDsm");
  if (HasIntegratedNL) then begin
  SpecialMenu("Atvērt grāmatojumu",'t',5,"OpenTRFromProd");
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Apstiprināt ražošanas darbības",' ',6,"ProdBackflushFromProdDsm");
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Ražojuma dekomplektācija",' ',2,"CreateDisProdFromProd");
  if (HasModCRM) then begin
//    SpecialMenu("Activity",'c',7,"CreateActFromProd");
  end;
  if (HasMultiLocations) then begin
  SpecialMenu("Noliktavas kustība",' ',8,"StockMovFromPRDsm");
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Ražošanas darbības",' ',9,"ProdOperFromPRDsm");
  end;
  EndWindow;

  return;
end;

window DelRouteDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Piegādes maršruts",DelRouteDClass,CGview,-);
  SetWRect(20,100,530,200);
  UseView(DelRouteVc);
  Sizeable(-1,-1,0,0); //EBS
  h = 120; v = 6; vs = 20;
  EditField(h,v,160,"Kods",St_i,Code,false,0);
  EditField(h,v+=vs,-40,"Komentārs",Normal,Comment,false,0);
  CheckBox(h,v+=30,0,"Pirmdienas",MonFlag);
  CheckBox(h,v+=16,0,"Otrdienas",TueFlag);
  CheckBox(h,v+=16,0,"Trešdienas",WedFlag);
  CheckBox(h,v+=16,0,"Ceturtdienas",ThuFlag);
  CheckBox(h,v+=16,0,"Piektdienas",FriFlag);
  CheckBox(h,v+=16,0,"Sestdienas",SatFlag);
  CheckBox(h,v+=16,0,"Svētdienas",SunFlag);
  //EBS-->
  MatrixBegin(4,v+=40,-32,-40,-,200);
  MatCol(1,24,"Del. order",0,DelOrder,false,0);
  MatCol(1,94,"Customer",0,CustCode,false,CUSClass);
  MatCol(1,164,"Name",0,Comment,false,0);
  EndMatrix;
  //EBS <--
  EndWindow;
end;

window StockMovDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,v,vm,vs;
  Integer tilenr,f,flipnr;

  WindowBegin("Noliktavas kustība",StockMovDClass,CGview,-);
  if (HasJewelleryInterface) then begin
    SetWRect(20,80,850,400);
  end else begin
  SetWRect(20,80,700,400);
  end;
  Sizeable(-1,-1,0,0);
  UseView(StockMovVc);
  ActiveFieldOnNew("SentTransDate");
  Tile(0,90,false,"",TransDate);
  v = 6; vs = 20; h = 110; h2 = 300; h3 = 500; h4 = 620;
  EditField(h,v,80, "Nr.",Normal,SerNr,false,TSerSClass);
  CheckBox(h2,v,0,"Rezervēts",Reserved);
  EditField(h3,v,80,"Iemesls",Normal,Reason,false,StandProblemsSClass);
  EditField(h,v+=vs,80,"Pas. datums",Normal,OrdTransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    if (IsEnterprise) then begin
  EditField(h2,v,80,"Nosūtīšanas dat.",Normal,SentTransDate,false,PasteCurDate);
    end;
  end;
  EditField(h3,v,80,"Saņemšanas dat.",Normal,TransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
  EditField(h,v+=vs,80, "No noliktavas",Normal,FrLocation,false,LocationSClass);
    if (IsEnterprise) then begin
  EditField(h2,v,80,"Caur noliktavu",Normal,ThrouLocation,false,LocationSClass);
    end;
  EditField(h3,v,80,"Uz noliktavu",Normal,ToLocation,false,LocationSClass);
  end;
  if (HasLocalization("PRT") and HasConsStockMoveInvoices) then begin
    EditField(h,v+=vs,80, "Rēķina Nr.",ViewOnly,InvoiceNr,false,0);
    EditField(h2,v,80,"Rēķina datums",ViewOnly,InvDate,false,0);
    EditField(h3,v,80,"Rēķina oficiālais Nr.",ViewOnly,InvoiceOfficialSerNr,false,0);
  end;
  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    TileButton(tilenr,"Vietas"); tilenr = tilenr + 1;
  end;
  if (HasObjects) then begin
    TileButton(tilenr,"Objekti"); tilenr = tilenr + 1;
  end else begin
    TileButton(tilenr,"Komentārs"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Artikuli"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Valūta"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Ilgums"); tilenr = tilenr + 1;
  TileButton(tilenr,"Nosūt."); tilenr = tilenr + 1;
  TileButton(tilenr,"Adrese"); tilenr = tilenr + 1;
  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    Tile(tilenr,60,false,tilenr,FrPos); tilenr = tilenr + 1;
    v = 6;
    if (HasPositions) then begin
      EditField(h,v,80, "No pozīcijas",Normal,FrPos,false,UsedPosSClass);
      EditField(h2,v,80,"Uz pozīciju",Normal,ToPos,false,FreePosSClass);
      EditField(h2,v+20,80,"Forklifter",Normal,ForkliftUser,false,UserSClass); //EBS
    end;
    if (HasModProd) then begin
      EditField(h3,v,80,"Ražojumam",Normal,ProdSerNr,false,ProdSClass); v = v + vs;
      EditField(h3,v,150,"Maršruts",Normal,Sorting,false,DelRouteSClass); v = v + vs;
    end;
    if ((HasLocalization("PRT") and HasModIN and HasMultiLocations) or IsStandardProduct==false) then begin
      EditField(h3,v,150,"Tips",Normal,StockMovType,false,SetSClass); v = v + vs;
    end;
    if (HasModWHM) then begin
      v = 6 + vs;
      CheckBox(h,v,0,"Manuāla izdošana",ManualPick);
  CheckBox(h,v+=16,0,"Aizsūtīt uz pacēlāja rindu",ToForkLiftQue);
    end;
  end;
  Tile(tilenr,70,false,tilenr,Comment); tilenr = tilenr + 1;
  v = 6;
  if (HasObjects) then begin
    EditField(h,v,-20,"Objekti",Normal,Objects,false,ObjSClass);
    v = v + vs;
  end;
  EditField(h,v,-20,"Komentārs",Normal,Comment,false,0);
  EditField(h,v+=vs,135,"Pavadz. Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  EnterSkip(Math);
  Tile(tilenr,79,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-50,-50,-,199);
  Flip(0);
  flipnr = 1;
  if (HasJewelleryInterface) then begin
    MatCol(1,32,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
    EnterSkip(Quant);
    MatCol(1,130,"Artikuls",0,ArtCode,false,INSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    if (HasVarieties) then begin
    MatCol(1,200,"Pieprasīts",0,OrdQuant,true,MATVARINSClass);
    end else begin
      if (HasThrouLocation) then begin
      MatCol(1,200,"Pieprasīts",0,OrdQuant,true,0);
    end;
    end;
    if (HasThrouLocation) then begin
    MatCol(1,250,"Nosūtīts",0,SentQuant,true,0);
    end;
    MatCol(1,300,"Saņemts",0,Quant,true,0);
    MatCol(1,350,"Apraksts",0,Spec,false,0);
  end else begin
    MatCol(1,32,"Artikuls",0,ArtCode,false,INSClass);
    Flip(flipnr);  flipnr = flipnr + 1;
    if (HasVarieties) then begin
  MatCol(1,86,"Pieprasīts",0,OrdQuant,true,MATVARINSClass);
    end else begin
      if (HasThrouLocation) then begin
      MatCol(1,86,"Pieprasīts",0,OrdQuant,true,0);
    end;
    end;
    if (HasThrouLocation) then begin
  MatCol(1,148,"Nosūtīts",0,SentQuant,true,0);
    end;
  MatCol(1,210,"Saņemts",0,Quant,true,0);
  MatCol(1,272,"Nosaukums",0,Spec,false,0);
  end;
  MatCol(1,-260,"Saņ. vecā art. cena",0,OldPrice,true,0);
  MatCol(1,-160,"Saņ. papildizm.",0,ExtraSCost,true,0);
  MatCol(1,-80,"Saņ. jaunā art. cena.",0,NewPrice,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasVarieties) then begin
  MatCol(1,86,"Pieprasīts",0,OrdQuant,true,MATVARINSClass);
  end else begin
    if (HasThrouLocation) then begin
    MatCol(1,86,"Pieprasīts",0,OrdQuant,true,0);
  end;
  end;
  if (HasThrouLocation) then begin
  MatCol(1,148,"Nosūtīts",0,SentQuant,true,0);
  end;
  MatCol(1,210,"Saņemts",0,Quant,true,0);
  MatCol(1,272,"Nosaukums",0,Spec,false,0);
  MatCol(1,-260,"Nos. vecā art. cena",0,SentOldPrice,true,0);
  MatCol(1,-160,"Nos. papildizm.",0,SentExtraSCost,true,0);
  MatCol(1,-80,"Nos. jaunā art. cena",0,SentNewPrice,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Nosaukums",0,Spec,false,0);
  if (HasObjects) then begin
  MatCol(1,-380,"Objekti",0,Objects,false,ObjSClass);
  end;
  if (HasSerialNumbers) then begin
  MatCol(1,-280,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-140,"Cena",0,BasePrice,true,0);
  MatCol(1,-40,"Koef.",0,Coefficient,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Nosaukums",0,Spec,false,0);
  if (HasSerialNumbers) then begin
  MatCol(1,-280,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-180,"Platums",0,UnitXval,true,0);
  MatCol(1,-135,"Augst.",0,UnitYval,true,0);
  MatCol(1,-90,"Biezums",0,UnitZval,true,0);
  MatCol(1,-45,"Kl.pas. rinda",0,OrderRowNr,false,0);
  if (HasPositions) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Nosaukums",0,Spec,false,0);
  MatCol(1,-180,"No pozīcijas",0,FrPosCode,false,UsedPosSClass);
  MatCol(1,-90,"Uz pozīciju",0,ToPosCode,false,FreePosSClass);
  end;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Artikula statuss",'I','I',0,"ItemStatusStockMovDsm");
  if (HasQualityControl) then begin
    RowMenuItem(0,"Kvalitātes kontrole",'u','u',0,"QualConFromStockMovDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (HasThrouLocation) then begin
  CheckBox(20,-52,0,"Apstiprināts",OrdFlag);
  CheckBox(20,-36,0,"Nosūtīts",SentOKFlag);
  end;
  CheckBox(20,-20,0,"Saņemts",OKFlag);
  if (HasThrouLocation) then begin
  EditField(170,-20,62,"Nos. daudz.",Normal,TotSentQty,true,0);
  end;
  EditField(310,-20,62,"Saņ. kopā",Normal,TotQty,true,0);
  if (HasLocalization("HRV,PRT")) then begin
    EditField(550,-40,150,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
//    SoftEditField(550,-40,150,"Tax Auth. Approval",Normal,"TaxAdminServSeal",false,0,M4Str,200);
  end;
  EditField(550,-20,100,"Neuzkrātās papildizm.",Normal,OtherExtraCosts,false,0);
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    h1 = 110; vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Bāzes valūta",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Kurss",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Bāzes valūta 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
    end;
  end;
  Tile(tilenr,110,false,tilenr,PlanSendDate); tilenr = tilenr + 1;
  vs = 20; h1 = 130; h2 = 330; h3 = 560;
  EditField(h,v=6,80,"Plān. nos. dat.",Normal,PlanSendDate,false,PasteCurDate);
  EnterSkip(PlanSendTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  EditField(h2,v,40,"Plān. pieg. dienas",ViewOnly,PlanDurationDays,false,0);
  end;
  EditField(h,v+=vs,80,"Plān. nos. laiks",Normal,PlanSendTime,false,PasteCurTime);
  EnterSkip(PlanArrDate);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  EditField(h2,v,80,"Plān. pieg. stundas",ViewOnly,PlanDurationTime,false,0);
  end;
  EditField(h3,v=6,80,"Plānotais piegādes datums",Normal,PlanArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Plānotais piegādes laiks",Normal,PlanArrTime,false,PasteCurTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  EditField(h,vm=(v+=32),80,"Faktiskais nos. dat.",Normal,ActSendDate,false,PasteCurDate);
  EnterSkip(ActSendTime);
  EditField(h2,v,40,"Faktiskais d.sk.",ViewOnly,ActDurationDays,false,0);
  EditField(h,v+=vs,80,"Faktiskais nos. laiks",Normal,ActSendTime,false,PasteCurTime);
  EnterSkip(ActArrDate);
  EditField(h2,v,80,"Faktiskais st.sk.",ViewOnly,ActDurationTime,false,0);
  EditField(h3,v=vm,80,"Faktiskais piegādes datums",Normal,ActArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Faktiskais piegādes laiks",Normal,ActArrTime,false,PasteCurTime);
  end;
  Tile(tilenr,110,false,tilenr,FreightCode); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,60,"Transporta komp.",Normal,FreightCode,false,FreightCompanySClass);
  EditField(h2,v,-40,"Reģ. Nr.",Normal,FreightCompanyRegNr,false,0);
  EditField(h,v+=vs,-40,"Nosaukums",Normal,FreightCompany,false,0);
  EditField(h,v+=vs,-40,"A/M informācija",Normal,TruckInfo,false,0);
  EditField(h,v+=vs,-40,"Vadītājs",Normal,Driver,false,0);
  EditField(h,v+=vs,-40,"CMR",Normal,CMRText,false,0);
  if (HasNumberSeries and HasLocalization("PRT")) then begin
    if (HasOfficialSerNr) then begin
      EditField(h,v+=vs,100,"Pavadz. Nr. 2",Normal,OfficialSerNr2,false,0);
      EditField(h2+100,v,135,"Statuss",Normal,Status,false,SetSClass);
    end;
  end;
  Tile(tilenr,200,false,tilenr,FrAddr0); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,-40,"No adreses",Normal,FrAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr4,false,0);
  if (HasThrouLocation) then begin
  EditField(h,v+=vs,-40,"Caur adresi",Normal,ThrouAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr4,false,0);
  end;
  EditField(h,v+=vs,-40,"Uz adresi",Normal,ToAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr4,false,0);
  SpecialMenu("Pašizmaksa pēc vecās cenas",'=',0,"StockMovFillFIFODsm");
  SpecialMenu("Artikulu meklēšana",'f',1,"ItemSearchDsm");
  if (HasIntegratedNL) then begin
  SpecialMenu("Atvērt grāmatojumu nosūtīts",' ',2,"OpenTRFromStockMovSent");
  SpecialMenu("Atvērt grāmatojumu saņemts",'t',3,"OpenTRFromStockMov");
  end;
  if (HasLocalization("PRT")) then begin
    if (HasETaxDocuments) then begin
      SpecialMenu("Sūtīt uz nodokļu iestādēm",'',10,"EShipPRTDsm");
    end;
  end;
  if (HasConsStockMoveInvoices) then begin
     SpecialMenu("Drukāt Noliktavas kustības Rēķinus",'p',3,"PrintStockMovInvoices");
   end;
  EndWindow;
end;

window StockMovJRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Noliktavas kustību pārskats",StockMovJRClass,CGRcW,RcType);
  SetWRect(20,80,460,380);
  vs = 20; h = 160; v = 6;
  EditFieldTL(h,v,150,"Nr.",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"Periods");
  EditFieldTL(h,v+=vs,80,"No noliktavas",   M4UStr,Normal,30,f2,false,LocationSClass);
  EditFieldTL(h,v+=vs,80,"Uz noliktavu",   M4UStr,Normal,30,f3,false,LocationSClass);
  if (StandardHansa==false) then begin
  EditFieldTL(h,v+=vs,80,"Caur noliktavu",   M4UStr,Normal,10,FirstAcc,false,LocationSClass);
  end;
  EditFieldTL(h,v+=vs,150,"Artikuls",   M4UStr,Normal,41,f4,false,INSClass);
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=vs,150,"Artikula grupa",M4UStr,Normal,50,f5,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs,150,"Artikula klasifikācija",M4UStr,Normal,100,f6,false,DISClass);
  end;
  EditFieldTL(h,v+=vs,80,"Pacēlāja op.",   M4Code,Normal,10,f10,false,UserSClass);
  EditFieldTL(h,v+=vs,80,"Ražojumam", M4Long,Normal,0,long1,false,ProdSClass);
  vm = v+40;
  ButtonFrame(h=20,v = vm,123,2,"Rādīt");
  RadioButton(h,v,0,0,"Pārskatu",ArtMode);
  RadioButton(h,v+=16,1,0,"Detalizēti",ArtMode);
  RadioButton(h,v+=16,2,0,"Detalizēti (uzdevumi)",ArtMode);
  ButtonFrame(h+=138,v = vm,123,3,"Summas");
  RadioButton(h,v,0,0,"Jaunā cena",flags[4]);
  RadioButton(h,v+=16,1,0,"Vecā cena",flags[4]);
  RadioButton(h,v+=16,2,0,"Pamatcena",flags[4]);
  vm = v + 48;
  ButtonFrame(h=20,v=vm,123,3,"Apstiprinājuma statuss");
  RadioButton(h,v,1,0,"Tikai neapstiprinātos",flags[1]);
  RadioButton(h,v+=16,2,0,"Tikai apstiprinātos",flags[1]);
  RadioButton(h,v+=16,0,0,"Visus",flags[1]);
  if (StandardHansa==false) then begin
  ButtonFrame(h+=138,v=vm,123,3,"Nosūtīšanas statuss");
  RadioButton(h,v,1,0,"Tikai nenosūtītos",flags[2]);
  RadioButton(h,v+=16,2,0,"Tikai nosūtītos",flags[2]);
  RadioButton(h,v+=16,0,0,"Visus",flags[2]);
  ButtonFrame(h+=138,v=vm,123,3,"Saņemšanas statuss");
  RadioButton(h,v,1,0,"Tikai nesaņemtos",flags[5]);
  RadioButton(h,v+=16,2,0,"Tikai saņemtos",flags[5]);
  RadioButton(h,v+=16,0,0,"Visus",flags[5]);
  CheckBox(h=20,v+=32,0,"Visus starp noliktavām",flags[3]);//?
    CheckBox(h=250,v,0,"Saņemtais nesakrīt ar nosūtīto",flags[6]);
  end;
  EndWindow;
end;

window BLT_CreateSHsFSOsVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;
  WindowBegin("Veidot preču nosūtīšanu no pasūtījumiem",BLT_CreateSHsFSOsVClass,CGMnt,RcType);
  SetWRect(20,80,450,390);
  v = 6; h = 150; h2 = 270;
  PeriodField(h,v,"Periods");
  EditFieldTL(h,v+=20,150,"Klientu pasūt. sēr. Nr.",M4UStr,Normal,41,f1,false,0);
  EditFieldTL(h,v+=20,150,"Nr. sēr. komentārs",M4Str,Normal,20,AccStr,false,0);
  EditFieldTL(h,v+=20,150,"Artikuls",M4UStr,Normal,40,f3,false,ForSaleINSClass);
  EditFieldTL(h,v+=20,100,"Plānots nosūtīt",M4Str,Normal,10,Stext,false,PasteCurDate);
  CheckBox(h2,v+5,0,"Datums līdz",flags[5]);
  EditFieldTL(h,v+=20,100,"Nosūtīšanas datums",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=20,100,"Maršruts",M4Str,Normal,60,f2,false,DelRouteSClass);
  EditFieldTL(h,v+=20,100,"Pasūtījuma veids",M4UStr,Normal,5,FirstAcc,false,OrderClassSClass);
  EditFieldTL(h,v+=20,100,"Noliktava",M4UStr,Normal,10,f6,false,LocationSClass);
  EditFieldTL(h,v+=20,100,"Freight Company",M4Code,Normal,20,f10,false,FreightCompanySClass); //EBS
  EditFieldTL(h,v+=20,100,"Pallet volume",M4UVal,Normal,0,vals0,false,0); //EBS
  ButtonFrame(h=30,vm=(v+=41),140,2,"Klientu pasūtījumi");
  RadioButton(h,v,0,0,"Tikai pilnīgi nosūtāmie",ArtMode);
  RadioButton(h,v+=16,1,0,"Visi nosūtāmie",ArtMode);
  // CheckBox(h=200,v=(vm-10),0,"Rezervētiem priekšroka",flags[1]);
  CheckBox(h=200,v=(vm-10),0,"Grāmatot nosūtīšanas",flags[10]);
  CheckBox(h,v+=16,0,"Pa noliktavām",flags[2]);
  CheckBox(h,v+=16,0,"Izlaist klientus ar brīdinājumiem",flags[3]);
  CheckBox(h,v+=16,0,"Nekontrolēt kredīta limitu",flags[4]);
  CheckBox(h,v+=16,0,"Izlaist nenosūtāmu artikulu rindas",flags[6]);
  EndWindow;
end;

window LocationDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,l,v,vm,vs;
  Integer tilenr;

  WindowBegin("Noliktava",LocationDClass,CGview,-);
  SetWRect(64,80,570,520);
  UseView(LocationVc);
  v = 10; vs = 20; h = 120; h2 = 340; l = -60;
  if (IsEnterprise) then begin
  Tile(0,50+24,false,"",Code);
  end;
  EditField(h,v,120,"Kods",Normal,Code,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
  EditField(h2,v,l,"Grupa",Normal,Group,false,LocGrSClass);
  end;
  EditField(h,v+=vs,l,"Nosaukums",Normal,Name,false,0);
  if (IsEnterprise) then begin
    tilenr = 1;
    TileButton(tilenr,"Adrese"); tilenr = tilenr + 1;
    TileButton(tilenr,"Loģistika"); tilenr = tilenr + 1; //EBS
    if (StandardHansa==false) then begin
    TileButton(tilenr,"Noliktava"); tilenr = tilenr + 1;
    end;
    tilenr = 1;
    Tile(tilenr,350,false,tilenr,Addr0); tilenr = tilenr + 1;
    EditField(h,v=6,l,"Adrese",Normal,Addr0,false,0);
  end else begin
    EditField(h,v+=vs,l,"Adrese",Normal,Addr0,false,0);
  end;
  EditField(h,v+=vs,l,"",Normal,Addr1,false,0);
  EditField(h,v+=vs,l,"",Normal,Addr2,false,0);
  EditField(h,v+=vs,l,"",Normal,Addr3,false,0);
  EditField(h,v+=vs,l,"",Normal,Addr4,false,0);
  EditField(h,v+=vs,l,"Kontaktpersona",Normal,Contact,false,0);
  EditField(h,v+=vs,l,"Tālrunis",Normal,Phone,false,0);
  EditField(h,v+=vs,l,"Fakss",Normal,Fax,false,0);
  EditField(h,v+=vs,l,"E-pasts",Normal,Email,false,0);
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
  EditField(h,v+=vs,l,"Klasifikācija",Normal,Classification,false,LocClSClass);
    end;
  EditField(h,v+=vs,100,"Atbildīgais",Normal,RespPerson,false,UserSClass);
  EditField(h2,v,l,"Rezerv. piekļuve",Normal,ReservLocAccess,false,ReservLocAccessSClass);
  end;
  if (HasModNL) then begin
  EditField(h,v+=vs,100,"Noliktavas konts",Normal,StockAcc,false,AccSClass);
  end;
  if (HasObjects) then begin
  EditField(h2,v,l,"Objekts",Normal,Objects,false,ObjSClass);
  end;
  if (IsEnterprise) then begin
//  EditField(h,v+=vs,100,"Price List",Normal,PriceList,false,PLDefSClass);//No Code
  EditField(h,v+=vs,100,"Iegādes noliktava",Normal,PurLoc,false,LocationSClass);
    if (StandardHansa==false) then begin
  EditField(h2,v,l,"Saņēmēja konts",Normal,ShipToAccount,false,0);
  EditField(h,v+=vs,100,"Caur noliktavu",Normal,ThrouLocation,false,LocationSClass);
    end;
  CheckBox(h,vm=(v+=30),0,"Ignorēt hronoloģiju",IgnoreChronology);
    if (StandardHansa==false) then begin
  CheckBox(h,v+=vs,0,"Pieprasīt vietu",RequirePos);
    end;
  ButtonFrame(h2,v=vm+10,100,2,"Tips");
  RadioButton(h2,v,0,0,"Cits",Type);
  RadioButton(h2,v+=16,1,0,"Ražošana ",Type);
  end;
  //EBS -->
  Tile(tilenr,160,false,tilenr,ILNCode); tilenr = tilenr + 1;
  EditField(h=160,v=6,150,"ILN Code",Normal,ILNCode,false,0);
  EditField(h,v+=vs,150,"Noliktavas kods",Normal,LocationCode,false,0);
  EditField(h,v+=vs,-20,"Nosūtīšanu importa mape",Normal,SHImpFolder,false,0);
  EditField(h,v+=vs,-20,"Saņemšanu importa mape",Normal,PUImpFolder,false,0);
  EditField(h,v+=vs,-20,"Kl. pasūtījumu eksporta mape",Normal,ORExportFolder,false,0);
  EditField(h,v+=vs,-20,"Pasūtījumu eksporta mape",Normal,POExportFolder,false,0);
  CheckBox(h,v+=20,0,"Automātiski eksportēt klientu pasūtījumus",AutoExpOR);
  CheckBox(h,v+=16,0,"Automātiksi eksportēt pasūtījumus",AutoExpPO);
  //EBS <--
  if (HasModWHM) then begin
    Tile(tilenr,310,false,tilenr,WHMPalletArea); tilenr = tilenr + 1;
  EditField(h=200,v=6,l=100,"Tukšo palešu zona",Normal,WHMPalletArea,false,LocAreaSClass);
  EditField(h,v+=vs,l,"Preču atlases zona",Normal,WHMPickArea,false,LocAreaSClass);
  EditField(h,v+=vs,l,"Vieta preču saņemšanai",Normal,WHMDefPUPosCode,false,PosSClass);
  EditField(h,v+=vs,l,"Vieta ražošanai",Normal,WHMDefProdPosCode,false,PosSClass);
  EditField(h,v+=vs,l,"Saiņojamās iekārtas vieta",Normal,WHMWraperPosCode,false,PosSClass);
  EditField(h,v+=vs,l,"Nosūt. vieta preču atlasei",Normal,WHMDeliveryPosCode,false,PosSClass);//the same as WraperPosCode at ethe moment
  EditField(h,v+=vs,l,"Nosūtīšanas zona",Normal,WHMDeliveryArea,false,LocAreaSClass);
  EditField(h,v+=vs,l,"Steidzams pasūtījums",Normal,WHMExpressOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,l,"Noklusējuma piegādātājs",Normal,WHMDefPUVECode,false,VESClass);
  EditField(h,v+=vs,l,"Nokl. paletes artikuls",Normal,DefaultPalItem,false,INSClass); //EBS
  CheckBox(h,v+=24,0,"Pieprasīt vietu",RequirePos);
  CheckBox(h,v+=16,0,"Sākt no augstākās vietas",WHMHighestPosCodeFirst);
  ButtonFrame(h,v+=40,140,3,"Pacēlāja sistēma");
  RadioButton(h,v,0,0,"Izslēgta",WHMForkLiftSystem);
  RadioButton(h,v+=16,1,0,"Ieslēgta",WHMForkLiftSystem);
  RadioButton(h,v+=16,2,0,"Iesl., bez atlases rež.",WHMForkLiftSystem);
  end;
  EndWindow;
end;

window ItemSettingTClass:3
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Artikulu parametri",ItemSettingTClass,CGSbl,ItemSettingType);
  SetWRect(64,80,580,500);
  SetBlid(ItemSettingBlock);
  v = 6; vs = 20; h = 200;
  EditField(h,v,60,"Artikulu grupa pēc nokl.",Normal,DefIGroup,false,ITSClass);
  if (HasModSVO) then begin
    if (StandardHansa==false) then begin
  EditField(h,v+=vs,60,"Noklusētā garantija",Normal,WarrantyLength,false,0);
    end;
  EditField(h,v+=vs,60,"Nokl. mērv.",Normal,Unittext,false,UnitSCLass);
  end;
  EditField(h,v+=vs,60,"Svītru koda garums bez čeksum.",Normal,BarCodeLength,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
  EditField(h,v+=vs,120,"Piešķ. svītru koda Nr.",Normal,YourBarCodeDef,false,0);
  EditField(h,vm=(v+=vs),120,"Sākt svītru kodu ar",Normal,BarCodeStartFrom,false,0);
  end else begin
    v = v+vs;
    vm = v;
  end;
  CheckBox(h=35,vm=(v=vm+25),0,"Unikāls svītru kods",UniqueBarCode);
  if (IsEnterprise) then begin
  CheckBox(h,v+=16,0,"Rādīt derīguma termiņus",BestBefore);
  CheckBox(h,v+=16,0,"Rādīt partijas statusu",BatchStatus);
  CheckBox(h,v+=16,0,"Rādīt artikula statusu",ShowItemStatus);
  end;
  if (HasExtTax) then begin
  CheckBox(h,v+=16,0,"Aprēķināt ienākuma nodokli",Perceptions);
  end;
  if (HasWithholdingTax) then begin
  CheckBox(h,v+=16,0,"Aprēķināt ieturētos nodokļus",Withholdings);
  end;
  CheckBox(h,v+=16,0,"Pieprasīt derīguma termiņu",EBS_ReqBestBefore); //EBS
  if (IsEnterprise) then begin
  CheckBox(h,v+=16,0,"Mainot datumu, atjaunot valūtas ierakstiem cenu",UpdCurPrWithDate);
  CheckBox(h=250,v=vm,0,"Neļaut mainīt cenu",NoBasePriceChange);
    if (StandardHansa==false) then begin
  CheckBox(h,v+=16,0,"Artikula formula, cena ar PVN",ItemFormulaeInclVAT);
    end;
  CheckBox(h,v+=16,0,"Aprēķināt daudzumu",EnCalcDimQty);
  CheckBox(h,v+=16,0,"Pieprasīt artikulu grupu",DemandItemGroup);
    if (StandardHansa==false) then begin
      if (HasWithholdingTax) then begin
  CheckBox(h,v+=16,0,"Lietot aizstājējartikulus",UseSupersessionIN);
      end else begin
        CheckBox(h,v+=2*16,0,"Lietot aizstājējartikulus",UseSupersessionIN);
      end;
    end;
  //CheckBox(h,v+=16,0,"Lietot izpārdošanas atlaidi",MultiBuyDiscount);
    if (StandardHansa==false) then begin
  ButtonFrame(h=35,vm=(v+=76),173,4,"Noklusējuma artikula tips");
    end else begin
      ButtonFrame(h=35,vm=(v+=76),173,3,"Noklusējuma artikula tips");
    end;
  RadioButton(h,v,0,0,"Vienkāršs",DefItemType);
  RadioButton(h,v+=16,1,0,"Noliktavas",DefItemType);
  RadioButton(h,v+=16,2,0,"Strukturētais",DefItemType);
    if (StandardHansa==false) then begin
  RadioButton(h,v+=16,3,0,"Servisa",DefItemType);
  ButtonFrame(h,v+=40,173,3,"Sērijas Nr. izsekošana");
    end else begin
      ButtonFrame(h,v+=57,173,3,"Sērijas Nr. izsekošana");
    end;
  RadioButton(h,v,0,0,"Nekāda",SerNrf);
  RadioButton(h,v+=16,1,0,"Vienības Nr.",SerNrf);
  RadioButton(h,v+=16,2,0,"Partijas Nr.",SerNrf);
  ButtonFrame(h=250,v=vm,200,4,"Noklus. pašizm.(pēc preču saņemš.)");
  RadioButton(h,v,0,0,"Nekāda",UpdateCost);
  RadioButton(h,v+=16,1,0,"Pēd. pirk.pašizm.(ar papildu izm.)",UpdateCost);
  RadioButton(h,v+=16,2,0,"Vidējā svērtā",UpdateCost);
  RadioButton(h,v+=16,3,0,"Pēd.pirk.pašizm.(bez papildu izm.)",UpdateCost);
  ButtonFrame(h,v+=40,200,3,"Atj. pašizmaksu pie noliktavas pārv.");
  RadioButton(h,v,0,0,"Nē",SRUpdateCost);
  RadioButton(h,v+=16,1,0,"Pēdējā pārvērt. cena",SRUpdateCost);
  RadioButton(h,v+=16,2,0,"Vidējā svērtā",SRUpdateCost);
  end else begin
    CheckBox(h,v+=16,0,"Neļaut bāzes cenas izmaiņas",NoBasePriceChange);
    CheckBox(h,v+=16,0,"Artikula formula",ItemFormulaeInclVAT);
    CheckBox(h,v+=16,0,"Pieprasīt artikula grupu",DemandItemGroup);
  end;
  EndWindow;
end;

window PODClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,v,vm,vs;
  record CYBlock CYb;
  string 255 label;
  Integer tilenr,flipnr,f,rn;

  vs = 20;
  BlockLoad(CYb);
  WindowBegin("Pasūtījums",PODClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(POVc);
  CommunicateButton;
  ActiveFieldOnNew("VECode");
  Tile(0,74,false,"",VECode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Piegādātājs",Normal,VECode,false,VESClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Nosaukums",Normal,Addr0,false,0);
  if (IsEnterprise) then begin
  EditField(h,vm=(v+=20),95,"Paraksts",Normal,OKPersons,false,UserSClass);
  CheckBox(h4=-100,v,0,"Apstiprināts",OKFlag);
  end else begin
    CheckBox(h4=-100,v+=vs,0,"Apstiprināts",OKFlag);
  end;
  tilenr = 1;
  TileButton(tilenr,"Nosac."); tilenr = tilenr + 1;
  TileButton(tilenr,"Artikuli"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Valūta"); tilenr = tilenr + 1;
  end;
  if (HasModIN) then begin
    TileButton(tilenr,"Nosūt. nosac."); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Komentārs"); tilenr = tilenr + 1;
  TileButton(tilenr,"Pas. adrese"); tilenr = tilenr + 1;
  TileButton(tilenr,"Nosūt. adrese"); tilenr = tilenr + 1;
  if (IsEnterprise and StandardHansa==false) then begin
    TileButton(tilenr,"Papildizm."); tilenr = tilenr + 1;
  end;
  tilenr = 1;
  Tile(tilenr,90,false,tilenr,TransDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Datums",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Sam. termiņš",Normal,PayDeal,false,PDSClass);
  if (IsEnterprise) then begin
  EditField(h1,v+=vs,82,"Derīgs līdz",Normal,ValidUntil,false,PasteCurDate);
  end;
  if (HasModIN) then begin
  EditField(h1,v+=vs,82,"Plānotā nosūt.",Normal,PlanShip,false,PasteCurDate);
  end;
  EditField(h2,v=vm,135,"Mūsu kontaktp.",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Pieg. kontaktp.",Normal,VEContact,false,ContactSClass);
  if (HasObjects) then begin
  EditField(h2,v+=vs,135,"Objekti",Normal,Objects,false,ObjSClass);
  end;
  EditField(h2,v+=vs,135,"Atsauksme",Normal,Reference,false,0);
  if (HasSalesman or HasSalesmanBonus) then begin
  EditField(h3,v=vm,80,"Aģents",Normal,SalesMan,false,UserSClass);
  end;
  if (HasModTS or IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Projekts",Normal,PRCode,false,PRSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Pasūt. klase",Normal,POClass,false,POrderClassSClass);
  EditField(h3,v+=vs,80,"Pasūt. tips",ViewOnly,OrderType,false,0);
  end;
  CheckBox(h4,v=6,0,"Slēgts",Closed);
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  CheckBox(h4,v+=16,0,"Cena ar PVN",InclVAT);
  end else begin
    CheckBox(h4,v+=16,0,"Cena ar PVN",InclVAT);
  end;
  CheckBox(h4,v+=16,0,"Sent to log.",BLT_SentToLogistics); //EBS
  EnterSkip(Math);
  Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
  EditField(110,-41,70,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (IsEnterprise and StandardHansa==false) then begin
  EditField(110,-21,70,"Paletes",ViewOnly,TotPalletNr,true,0);
  EditField(260,-41,70,"Piegāde",Normal,ShipCost,true,0);
  EditField(260,-21,70,"Muita",Normal,CustomsCost,true,0);
  end;
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
  EditField(410,-41,70,"PVN",ViewOnly,Sum3,true,0);
  if (HasExtTax) then begin
  EditField(410,-21,70,"Atsk. nod.",ViewOnly,TAX1Sum,false,0);
    end;
  end else begin
    EditField(410,-41,70,"Nod.",ViewOnly,Sum3,true,0);
  end;
  EditField(-169,-41,118,"Starps.",ViewOnly,Sum1,true,0);
  EditField(-169,-21,118,"KOPĀ",ViewOnly,Sum4,true,0);
//  CheckBox(20,-21,0,"OK",OKFlag);
  v = 24;
  if (HasModIN or HasModPL or HasObjects) then begin
  MatrixBegin(3,v,-50,-44,-,199);
  end else begin
    MatrixBegin(3,v,-25,-44,-,199);
  end;
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,28,"Artikuls",0,ArtCode,false,BLT_INSClass); //EBS edit
//  MatCol(1,144,"Qty",0,Quant,true,0);
//  MatCol(1,144,"Qty",0,Quant,true,0);
  //EBS -->
  // if (HasVarieties) then begin
  // MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
  // end else begin
  //   MatCol(1,94,"Daudz.",0,Quant,true,0);
  // end;
  // EnterSkip(ArtCode);
  //EBS <--
//  MatCol(1,194,"Description",0,Spec,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  //EBS -->
  if (HasVarieties) then begin
  MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Daudz.",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  //EBS <--
  MatColTL(1,154,"Vien.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  MatCol(1,194,"Daudz. 2",0,Quant2,true,0); //EBS
  MatColTL(1,244,"Vien. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass); //EBS
  MatCol(1,284,"Apraksts",0,Spec,false,0);
  if (HasJewelleryInterface) then begin
    MatCol(1,-337,"Noliktavas tips",0,StockType,false,SetSClass);
  end;
  MatCol(1,-237,"Vienības cena",0,Price,true,0);
  MatCol(1,-151,"%",0,vRebate,true,0);
  MatCol(1,-116,"Summa",0,Sum,true,0);
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
  MatCol(1,-30,"Nod.veidnes kods",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(1,-30,"PVN",0,VATCode,false,VATCodeSClass);
  end;
  if (HasObjects) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.2",0,Quant2,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.2",0,Quant2,true,0);
    end;
    EnterSkip(ArtCode);
    MatColTL(1,164,"Vien. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass);
    MatCol(1,204,"Apraksts",0,Spec,false,0);
  // MatCol(1,164,"Apraksts",0,Spec,false,0);
  //EBS <--
    if (IsEnterprise) then begin
  MatCol(1,-310,"Pieg.konts",0,CostAcc,false,AccSClass);
    end;
  MatCol(1,-240,"Objekti",0,Objects,false,ObjSClass);
    if (IsEnterprise) then begin
  MatCol(1,-170,"Pas.art.",0,VEArtCode,false,PISClass);
  MatColTL(1,-100,"Pieg.vien.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);//MatCol(1,-100,"S. Unit",0,VEUnit,false,UnitSCLass);
  MatCol(1,-50,"Pieg.daudz.",0,VEQuant,true,0);
    end;
  end;
  if (HasModIN) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(ArtCode);
    //EBS <--
  MatCol(1,164,"Apraksts",0,Spec,false,0);
  MatCol(1,-330,"Saņ. 1",0,Shipd1,true,0);
  MatCol(1,-270,"Saņ. 2",0,Shipd2,true,0);
    if (HasModPL) then begin
  MatCol(1,-210,"Rēķins",0,Invd,true,0);
    end;
    if (HasModWHM) then begin
  MatCol(1,-150,"Paletes Nr.",0,PalletNr,true,0);
    end;
    if (HasModTS) then begin
  MatCol(1,-90,"Projekts",0,PRCode,true,PRSClass);
    end;
    if (HasModSVO) then begin
  MatCol(1,-40,"DT Nr.",0,WSNr,true,0);
    end;
  end;
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(ArtCode);
    //EBS <--
    if (StandardHansa==false) then begin
      MatCol(1,164,"Pasūt. tips",0,OrderType,false,0);
  MatCol(1,-400,"Noliktavas tips",0,StockType,false,SetSClass);
    end else begin
      MatCol(1,164,"Apraksts",0,Spec,false,0);
    end;
    if (HasTREO) then begin
  MatCol(1,-300,"TREO",0,TREO,false,SetSClass);
    end;
  MatCol(1,-200,"Plān.nosūtīt",0,PlanShipRow,true,PasteCurDate);
  MatCol(1,-100,"Komentārs",0,Comment,true,0);
    if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Daudz.",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Daudz.",0,Quant,true,0);
    end;
    EnterSkip(ArtCode);
    //EBS <--
  MatCol(1,164,"Apraksts",0,Spec,false,0);
  MatCol(1,-420,"Pieg. izm.",0,ShipCost,true,0);
  MatCol(1,-360,"Muita",0,CustomsCost,true,0);
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Izm. 1";end;
  MatCol(1,-300,label,0,RowCost1,true,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Izm. 2";end;
  MatCol(1,-240,label,0,RowCost2,true,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Izm. 3";end;
  MatCol(1,-180,label,0,RowCost3,true,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Izm. 4";end;
  MatCol(1,-120,label,0,RowCost4,true,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Izm. 5";end;
  MatCol(1,-60,label,0,RowCost5,true,0);
    end;
  end;
  DeleteRowTest;
  InsertRowTest;
  RowMenuBegin("");
  if (HasModIN and GuiType!=kGuiAndroid) then begin
    RowMenuItem(0,"Artikula statuss",'I','I',0,"ItemStatusPODsm");
  end;
  if (IsEnterprise) then begin
    RowMenuItem(0,"Iepriekšējā pirkuma cena",' ',' ',0,"POLastPPrsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
//  v = 18;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20; h = 110; h2 = 295;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Bāzes valūta",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Kurss",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Bāzes valūta 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (HasModIN) then begin
    Tile(tilenr,90,false,tilenr,ShipDeal); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Nosūt. nosac.",Normal,ShipDeal,false,ShipDealSClass);
    if (IsEnterprise) then begin
  EditField(h1,v+=vs,80,"Nosūt. veids",Normal,ShipMode,false,DMSClass);
    end;
    if (HasMultiLocations) then begin
  EditField(h1,v+=vs,80,"Noliktava",Normal,Location,false,LocationSClass);
    end;
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        EditField(h1,v+=vs,80,"Filiāle",ViewOnly,BranchID,false,0);
//  EditField(h2,v=vm,80,"Total Quantity",ViewOnly,TotQty,true,0);
//  EditField(h2,v+=vs,80,"Total Weight",ViewOnly,TotWeight,true,0);
//  EditField(h2,v+=vs,80,"Total Volume",ViewOnly,TotVolume,true,0);
  EditField(h2,v=vm,80,"Pak. pas. Nr.",Normal,SVONr,false,0);
  EditField(h2,v+=vs,80,"Darba pas. Nr.",Normal,WONr,false,0);
  EditField(h2,v+=vs,80,"Pas. procesa Nr.",Normal,POCQStatNr,true,POCQStatSClass);
  EditField(h2,v+=vs,80,"Pas līguma Nr.",ViewOnly,POCOSerNr,true,0);
      end;
  CheckBox(473,v=vm,0,"Rēķins pirms preču saņemšanas",InvBeforePU);
      CheckBox(473,v+=vs,0,"Uzstādīt saņemtās preces daudzumu uz nulli",SetZeroPUQuant);
      EditField(h3,v+=vs,80,"Intrastat grām. kods",Normal,IntrastatTransCode,false,IntrastatTransCodeSClass);
    end;
  end;
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,LangCode); tilenr = tilenr + 1;
    EditField(h1,v=6,80,"Atlaižu matrica",Normal,RebCode,false,RebSClass);
    if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Faktorings",Normal,VEFactoring,false,VESClass);
    end;
  EditField(h1,v+=vs,80,"Pas. Nr.",Normal,OrdNr,false,0);
  EditField(h1,v+=vs,-20,"Komentārs",Normal,Comment,false,0);
    if (HasSalesGroup) then begin
  EditField(h2,v=vm,80,"Aģentu grupa",Normal,SalesGroup,false,SalesGroupSClass);
  EditField(h2,v+=vs,80,"Maksātājs",Normal,InvoiceToCode,false,VESClass);
    end;
  EditField(h2,v+=vs,80,"Izmaksas",Normal,CostPerUnit,true,0);
    if (HasLanguages) then begin
  EditField(h3,v=vm,80,"Valoda",Normal,LangCode,false,LangSClass);
    end;
  end else begin
    Tile(tilenr,20,false,tilenr,Comment); tilenr = tilenr + 1;
    if (HasAdvancedPricing) then begin
      EditField(h1,v=6,80,"Atlaižu matrica",Normal,RebCode,false,RebSClass);
    end else begin
    EditField(h1,v=6,-20,"Komentārs",Normal,Comment,false,0);
    end;
    if (HasLanguages) then begin
      EditField(h1,v+=vs,80,"Valoda",Normal,LangCode,false,LangSClass);
    end;
  end;
  Tile(tilenr,230,false,tilenr,Addr1); tilenr = tilenr + 1;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Pasūtīšanas"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "adrese"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,vm=(v+=vs), -20,label,Normal,InvAddr4,false,0);
  vm = vm + 40;

  if (HasApprovals) then begin
    SoftEditField(h3=h+4,v=vm,123,"Apstipr. statuss",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
  end;
/*
//oldapprovals
  if (HasApprovals) then begin
    ButtonFrame(h3=h+4,v=vm,123,6,"Apstiprinājuma statuss");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nav nepieciešams",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nav sākts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nav prasīts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Procesā",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Apstiprināts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Noraidīts",AcceptanceStatus);
  end;
*/
  if (HasVATZone) then begin
    v = VATZoneButtonsLabelslat(h3=290,v=vm,170,16);
  end;
  if (IsEnterprise) then begin
  EditField(h2=-170,v=vm,150,"Reģions",Normal,Region,false,RegionSClass);
//  EditField(h2,v+=vs,150,"VAT Reg. No.",Normal,VATNr,false,0);
//  EditField(h2,v+=vs,150,"Telephone",Normal,Phone,false,0);
//  EditField(h2,v+=vs,150,"Fax",Normal,Fax,false,0);
  end;
  Tile(tilenr,130,false,tilenr,ShipAddr0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Piegādes",Normal,ShipAddr0,false,0);
  EditField(h,v+=vs,-20,"adrese",Normal,ShipAddr1,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,70,false,tilenr,ShipCost); tilenr = tilenr + 1;
  vs = 20; h2 = 290; h3 = 530;
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Papildizm. 1";end;
  EditField(h1,v=6,70,label,Normal,Cost1,true,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Papildizm. 2";end;
  EditField(h2,v,70,label,Normal,Cost2,true,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Papildizm. 3";end;
  EditField(h1,v+=vs,70,label,Normal,Cost3,true,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Papildizm. 4";end;
  EditField(h2,v,70,label,Normal,Cost4,true,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Papildizm. 5";end;
  EditField(h1,v+=vs,70,label,Normal,Cost5,true,0);
  EnterSkip(TransDate);
  ButtonFrame(h3,v=16,130,2,"Papildus izmaksu aprēķins");
  RadioButton(h3,v,0,0,"Cenā",ExtraCostsCalculation);
  RadioButton(h3,v+=16,1,0,"Svarā",ExtraCostsCalculation);
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
/*
    if (IsEnterprise) then begin
      SpecialMenu("Pievienot plānoto maksājumu",' ',9,"PlannedPaymentPODsm");
    end;
*/
    if (HasModIN) then begin
      SpecialMenu("Artikula statuss",'I',2,"ItemStatusPODsm");
    end;
    SpecialMenu("Pasūtījuma statuss",'r',5,"POStatRnPODsm");
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
    if (HasModIN) then begin
      SpecialMenu("Preču saņemšanu",'L',0,"PUFromPODsm");
    end;
    if (HasModPL) then begin
      SpecialMenu("Rēķinu",'F',1,"VIFromPODsm");
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Atgrieztās preces",'B',6,"RetPUFromPODsm");
    end;
/*
  if (HaseMail) then begin
    SpecialMenu("Create e-mail",'m',3,"CreateMailFromPODsm");
  end;
*/
  end else begin
  SpecialMenu("Artikulu meklēšana",'f',1,"ItemSearchDsm");
  if (HasTaxMatrix) then begin
    SpecialMenu("Atvērt nod. matricu",' ',25,"OpenVatMatrixPODsm");
  end;
  SpecialMenu("Pasūtījuma statuss",'r',5,"POStatRnPODsm");
  if (IsEnterprise) then begin
    SpecialMenu("Rezervācijas",' ',6,"POReservPODsm");
  end;
  if (HasApprovals) then begin
    SpecialMenu("Nosūtīt apstiprināšanai",' ',6,"POSendforAcceptancePODsm");
    SpecialMenu("Atcelt apstiprināšanas pieprasījumu",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModCRM) then begin
//    SpecialMenu("Activity",'c',9,"CreateActFromPODsm");
  end;
  if (HasDownpayments) then begin
    SpecialMenu("Priekšapmaksas rēķinu",' ',3,"DownPayFromPODsm");
  end;
  if (HaseMail) then begin
    SpecialMenu("E-pastu",'m',3,"CreateMailFromPODsm");
  end;
  if (HasModIN) then begin
  SpecialMenu("Preču saņemšanu",'L',0,"PUFromPODsm");
  end;
  if (IsEnterprise and StandardHansa==false) then begin
  SpecialMenu("Nosūtīšanas paziņojumu",'l',0,"DropSHFromPODsm");
  end;
  if (HasModPL) then begin
  SpecialMenu("Rēķinu",'F',1,"VIFromPODsm");
  end;
  if (HasRetGoodsToSupp and HasModIN) then begin
  SpecialMenu("Atgrieztās preces",'B',6,"RetPUFromPODsm");
  end;
    SpecialMenu("Piegādātāju",' ',0,"AddSupplierPODsm");
    SpecialMenu("Artikulu",' ',0,"AddItemPODsm");
  end;
  EndWindow;
end;

window TmpPODClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Veidot preču saņemšanu",TmpPODClass,CGOther,-);
  Modality(1);
  UseView(TmpPOVc);
  SetWRect(20,80,750,340);
  Sizeable(-1,-1,0,0);
  EditField(h=80,v=10,80,"Nr.",ViewOnly,SerNr,false,0);
  HalPushButton(h+150,10,-50,40,"TmpPODClass_CreatePUVc","Veidot preču saņemšanu");
  MatrixBegin(20,v+=60,-50,-5,-,599);
  MatColTL(1,30,"Artikuls",0,M4Code,ViewOnly,20,ArtCode,false,INSCLass);
  MatColTL(1,150,"Nosaukums",0,M4Str,ViewOnly,200,ArtName,false,0);
  MatCol(1,-300,"Daudz.",0,Quant,false,0);
  MatCol(1,-220,"Sērijas nr.",0,SerialNr,false,0);
  MatCol(1,-100,"Derīgs līdz",0,BestBeforeDate,false,PasteCurDate);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Sadalīt rindu",' ',' ',0,"SplitRowTmpPODsm");
  EndRowMenu;
  EndMatrix;
  SpecialMenu("Veidot sēr. Nr.",' ',2,"GenSerialNoTmpPODsm");
  EndWindow;
end;

window ITDClass:2
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs,tilenr;
  boolean taxtempf;
  WindowBegin("Artikulu grupa",ITDClass,CGview,-);
  if (IsEnterprise) then begin
  SetWRect(64,80,680,470);
//  Sizeable(-1,-1,0,0);
  UseView(ITVc);
  Tile(0,90,false,"",Code);
  v = 6; vs = 20; h = 120;
  EditField(h=120,v, 70,"Kods",St_i,Code,false,0);
  EditField(h,v+=20 ,200,"Nosaukums",Normal,Comment,false,0);
  CheckBox(h+220,v,0,"Packaging material",PackMaterial); //EBS
  EditField(h,v+=vs ,200,"Klasifikācijas tipi",Normal,ClassType,false,CTypeSClass);
    tilenr = 1;
    TileButton(tilenr,"Konts");  tilenr = tilenr + 1;
    TileButton(tilenr,"Kred. konts");  tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
      TileButton(tilenr,"Servisa konts");  tilenr = tilenr + 1;
    end;
    TileButton(tilenr,"Pašizmaksas metode");  tilenr = tilenr + 1;
    TileButton(tilenr,"Piegāde");  tilenr = tilenr + 1;
    TileButton(tilenr,"Teksts");  tilenr = tilenr + 1;
    if (HasCharts) then begin
      TileButton(tilenr,"BI");  tilenr = tilenr + 1;
    end;
    tilenr = 1;
    Tile(tilenr,260,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  EditField(h=120,vm=(v=6),55,"Realizācijas konts",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLAT & "realizāc. konts",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Eksporta real. konts",Normal,ExpSalesAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Izmaksu konts",Normal,CostAcc,false,AccSClass);
  EditField(h,v+=vs ,55,VATZoneNameLAT & "izmaksu konts",Normal,EUCostAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Eksporta izm. konts",Normal,ExpCostAcc,false,AccSClass);
    if (StandardHansa==false) then begin
  EditField(h,v+=vs ,55,"WIP konts",Normal,WIPAcc,false,AccSClass);
    end;
  EditField(h,v+=vs,55,"Komponentes",Normal,CompUsage,false,AccSClass);
    if (StandardHansa==false) then begin
  EditField(h,v+=vs,55,"Ražošanas kontrole",Normal,ProdControl,false,AccSClass);
  EditField(h,v+=vs,55,"Ražoš.svērtā pašizm.",Normal,ProdWCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Viesn.nepab.raž.k.",Normal,HotelWIPAcc,false,AccSClass);
    end;
  EditField(h=350,v=vm,20,"Viet. PVN kods",Normal,VATCodeDom,false,VATCodeSClass);
    EditField(h,v+=vs,20,VATZoneEditFieldLabelLAT(1) & "PVN kods",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h,v+=vs,20,"Eksporta PVN kods",Normal,VATCodeExp,false,VATCodeSClass);
  EditField(h,v+=vs ,55,"Piegādātāju starpkonts",Normal,PurchAcc,false,AccSClass);
  EditField(h,v+=vs ,55,VATZoneNameLAT & "pieg. starpkonts",Normal,EUPurchAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Eksporta pieg. starpkonts",Normal,ExpPurchAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Noliktavas konts",Normal,InvAcc,false,AccSClass);
    if (StandardHansa==false) then begin
  EditField(h,v+=vs ,55,"Iep. cenas variāc. konts",Normal,PriceVarianceAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Liet. variāc. konts",Normal,UsageVarianceAcc,false,AccSClass);
    end;
  EditField(h,v+=vs ,55,"Atlaides konts",Normal,DiscountAcc,false,AccSClass);
    EditField(h,v+=vs,55,"Projekta mater. izm. konts",Normal,ProjMaterialsUsageAcc,false,AccSClass);
    if (StandardHansa==false) then begin
      EditField(h=120,v+=vs,405-120,"Objekti",Normal,Objects,false,ObjSClass);
      EditField(h2=530,v=vm,50,"Viet. nod. veidne",Normal,TaxTemplateCode,false,TaxTemplateSClass);
      EditField(h2,v+=vs,50,VATZoneEditFieldLabelLAT(1) & "Nod. veidne",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,"Ārpus ES n.veidne",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
    end;
    Tile(tilenr,100,false,tilenr,CredSalesAcc); tilenr = tilenr + 1;
    StaticText(h=120,v=7,"#Kredītrēķini#",false);
    EditField(h,vm=(v+=20),55,"Vietējais real. konts",Normal,CredSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLAT & "real. konts",Normal,CredEUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Eksporta real. konts",Normal,CredExpSalesAcc,false,AccSClass);
  EditField(h=350,v=vm,20,"Vietējais PVN kods",Normal,CredVATCodeDom,false,VATCodeSClass);
    EditField(h,v+=vs,20,VATZoneEditFieldLabelLAT(1) & "PVN kods",Normal,CredVATCodeEU,false,VATCodeSClass);
  EditField(h,v+=vs,20,"Eksporta PVN kods",Normal,CredVATCodeExp,false,VATCodeSClass);
    if (StandardHansa==false) then begin
      Tile(tilenr,100,false,tilenr,SVOInvbleSalesAcc); tilenr = tilenr + 1;
  EditField(h=170,v=6,55,"Serv. realiz.konts",Normal,SVOInvbleSalesAcc,false,AccSClass);
//       EditField(h,v+=vs,55,"Serv. Warranty Sales A/C",Normal,SVOWarrantySalesAcc,false,AccSClass); // Not being used in code atm
//       EditField(h,v+=vs,55,"Serv. Contract Sales A/C",Normal,SVOContractSalesAcc,false,AccSClass); // Not being used in code atm
//       EditField(h,v+=vs,55,"Serv. Goodwill Sales A/C",Normal,SVOGoodwillSalesAcc,false,AccSClass); // Not being used in code atm
  EditField(h=400,v=6,55,"Serv. izm.konts",Normal,SVOInvbleCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Serv. garantijas izm.konts",Normal,SVOWarrantyCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Serv. līguma izm.konts",Normal,SVOContractCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Serv. nemat.vērt. izm.konts",Normal,SVOGoodwillCostAcc,false,AccSClass);
    end;
    Tile(tilenr,250,false,tilenr,CostPerc); tilenr = tilenr + 1;
  ButtonFrame(h=30,vm=(v=20),230,6,"Primārais izmaksu modelis");
  RadioButton(h,v,0,0,"Noklusējuma",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"Pašizmaksa",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"% _no cenas",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"Vidējā svērtā",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"Rindas",PrimaryCostModel);
  RadioButton(h,v+=16,9,0,"Nekāds",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"Rindas izmaksu modelis");
  RadioButton(h,v,0,0,"Noklusējuma",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"F_IFO cena",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"LIFO cena",QueuedCostModel);

  ButtonFrame(h2=280,v=vm,200,3,"Pašizmaksa pa sēriju numuriem");
  RadioButton(h2,v,0,0,"Noklusējuma",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"Pašizmaksa neatkarīgi no sēr. Nr.",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"Pašizmaksa pa sēriju numuriem",FIFOPerSerialNr);
  ButtonFrame(h2,v+=40,200,3,"Rindas izmaksu modelis pa nolikt.");
  RadioButton(h2,v,0,0,"Noklusējuma",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"Sekundārā pašizm. neatk. no nol.",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"Sekundārā pašizm. pa noliktavām",FIFOPerLocation);
  ButtonFrame(h2,v+=40,200,3,"Vid. svērtā pa noliktavām");
  RadioButton(h2,v,0,0,"Noklusējuma",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"Vid. svērtā neatkarīgi no nol.",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"Vid. svērtā pa noliktavām",WAPerLocation);
/* 5.3
  ButtonFrame(h2,v+=40,200,3,"Pašizmaksa pa noliktavām");
  RadioButton(h2,v,0,0,"Noklusējuma",CostPricePerLocation);
  RadioButton(h2,v+=16,1,0,"Pašizmaksa neatkarīgi no nol.",CostPricePerLocation);
  RadioButton(h2,v+=16,2,0,"Pašizmaksa pa noliktavām",CostPricePerLocation);
*/
    Tile(tilenr,80,false,tilenr,EUCodex); tilenr = tilenr + 1;
  //  CheckBox(h=90,v+=30,0,"Internal (Not Showing in WebShop)",Internal);
    if (StandardHansa==false) then begin
    CheckBox(h=90,vm=(v=16),0,"Nedrukāt kravas uzlīmes šai grupai",ExclFrLabPr);
  CheckBox(h,v+=16,0,"Iekļaut artikulu papildizmaksas",InclItemFreight);
  EditField(h+195,v+2 ,55,"",Normal,FixedFreight,true,0);
    EditField(h=140,v+=22,200,"EAN kods",Normal,EUCodex,false,CommoditySClass);
    end else begin
      EditField(h=120,vm=(v=16),200,"EAN kods",Normal,EUCodex,false,CommoditySClass);
    end;
    EditField(h=220,v+=vs,120,"Preču un pakalpojumu klasifikācija",Normal,CPSCode,false,0);
    ButtonFrame(h=400,v=vm,80,3,"Tips");
  RadioButton(h,v,0,0,"Noklus.",Type);
  RadioButton(h,v+=16,1,0,"Transporta",Type);
  RadioButton(h,v+=16,2,0,"Iepakojuma",Type);
    Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-20,INTextRowType,99);
  MatCol(1,24,"Valoda",0,LangCode,false,LangSClass);
  MatCol(1,84,"Teksts",0,Text,false,0);
  EndMatrix;
    if (HasCharts) then begin
      Tile(tilenr,400,false,tilenr,-);  tilenr = tilenr + 1;
      ChartArea(10,6,-10,390,"$ITDCLass_BIChart");
    end;
  end else begin
  SetWRect(64,80,470,230);
  UseView(ITVc);
    v = 6; vs = 20; h = 120; h2 = 300;
  EditField(h,v,70,"Kods",Normal,Code,false,0);
    EditField(h,v+=vs,-20,"Nosaukums",Normal,Comment,false,0);
    if (HasVATZone) then begin
      EditField(h,vm=(v+=vs),20,"Vietējais PVN kods",Normal,VATCodeDom,false,VATCodeSClass);
      EditField(h,v+=vs,20,VATZoneEditFieldLabelLAT(1) & "PVN kods",Normal,VATCodeEU,false,VATCodeSClass);
      EditField(h,v+=vs,20,"Eksporta PVN kods",Normal,VATCodeExp,false,VATCodeSClass);
    end else begin
      if (HasTaxMatrix) then begin
        EditField(h,v+=vs,55,"Tax Temp.",Normal,TaxTemplateCode,false,TaxTemplateSClass); taxtempf = true; //!!tulk
      end else begin
      EditField(h,v+=vs,20,"PVN kods",Normal,VATCodeDom,false,VATCodeSClass);
      end;
    end;
  if (HasModNL) then begin
      if (HasVATZone) then begin
        EditField(h2,v=vm,55,"Viet. real. PVN kods",Normal,SalesAcc,false,AccSClass);
        EditField(h2,v+=vs,55,VATZoneNamelat & "Realiz.konts",Normal,EUSalesAcc,false,AccSClass);
        EditField(h2,v+=vs,55,"Eksporta realiz. konts",Normal,ExpSalesAcc,false,AccSClass);
      if (HasModIN) then begin
          EditField(h2,v+=vs,55,"Noliktavas konts",Normal,InvAcc,false,AccSClass);
          EditField(h2,v+=vs ,55,"Viet.pieg.uzkr.konts",Normal,PurchAcc,false,AccSClass);
          EditField(h2,v+=vs ,55,VATZoneNameLAT & "Pieg.uzkr.konts",Normal,EUPurchAcc,false,AccSClass);
          EditField(h2,v+=vs ,55,"Imp.pieg.uzkr.konts",Normal,ExpPurchAcc,false,AccSClass);
        end else begin
//          EditField(h,v+=vs,55,"#Stock# A/C",Normal,InvAcc,false,AccSClass);
        end;
      end else begin
        EditField(h,v+=vs,70,"Realiz.konts",Normal,SalesAcc,false,AccSClass);
        if (HasModIN) then begin
  EditField(h,v+=vs,70,"Nolikt.konts",Normal,InvAcc,false,AccSClass);
  EditField(h,v+=vs,70,"Pieg.uzkr.konts",Normal,PurchAcc,false,AccSClass);
        end;
      end;
      if (HasLocalization("PRT")) then begin
        StaticText(h,v+=40,"Kredītrēķini",false);
        EditField(h,v+=vs,55,"Realiz.konts",Normal,CredSalesAcc,false,AccSClass);
        EditField(h,v+=vs,vs,"PVN kods",Normal,CredVATCodeDom,false,VATCodeSClass);
      end;
      if (HasLocalization("BRA,HRV") or HasTaxMatrix) then begin
        if (HasVATZone) then begin
          if (taxtempf==false) then begin
          EditField(h,v+=vs,55,"Vietējā nod. veidne",Normal,TaxTemplateCode,false,TaxTemplateSClass);
          end;
          EditField(h,v+=vs,55,VATZoneEditFieldLabelLAT(1) & "Nod. veidne",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
          EditField(h,v+=vs,55,"Eksporta nod. veidne",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
        end else begin
          if (taxtempf==false) then begin
          EditField(h,v+=vs,55,"Nod. veidne",Normal,TaxTemplateCode,false,TaxTemplateSClass);
          end;
      end;
    end;
    end;
    if (HasLocalization("BRA,KEN,POL")) then begin
      EditField(h+100,v+=vs,120,"Preču un pakalpojumu klasifikācija",Normal,CPSCode,false,0);
    end;
    if (HasLanguages) then begin
      v = v+54;
      MatrixBegin(4,v,-32,-20,-,99);
      MatCol(1,24,"Valoda",0,LangCode,false,LangSClass);
      MatCol(1,84,"Teksts",0,Text,false,0);
      EndMatrix;
  end;
end;
  EndWindow;
end;

window BLT_PUPalletLabRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,l,v,vm;
  WindowBegin("Saņemšanas uzlīmes",PULabRClass,CGRcW,RcType);
  SetWRect(20,80,400,320);
  EditFieldTL(h=150,v=6,153,"Preču saņemšana Nr.",   M4Str,Normal,30,f1,false,0);
  if (HasModProd) then begin
  EditFieldTL(h,v+=20,153,"Ražojumi",   M4Str,Normal,30,f7,false,0);
  end;
  EditFieldTL(h,v+=20,100,"Artikuls",M4UStr,Normal,41,f3,false,INSClass);
  if (HasItemGroups) then begin
  EditFieldTL(h,v+=20,100,"Artikulu grupa",M4UStr,Normal,5,f5,false,ITSClass);
  end;
  if (HasItemClassification) then begin
  EditFieldTL(h,v+=20,100,"Klasifikācija",M4UStr,Normal,100,f4,false,DISClass);
  end;
  if (HasMultiLocations) then begin
  EditFieldTL(h,v+=20,100,"Noliktava",M4UStr,Normal,10,f6,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=20,100,"Piegādātājs",M4UStr,Normal,10,LastAcc,false,VESClass);
  end;
  if (HasSerialNumbers) then begin
    EditFieldTL(h,v+=20,100,"Sērijas numurs",M4UStr,Normal,60,FirstAcc,false,SerialNrSClass);
  end;
  EditFieldTL(h,v+=20,50,"Vertikālā robeža",M4Int,Normal,0,flags[29],false,0);
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=20,100,"Uzlīmju Nr.",M4Str,Normal,30,f2,false,0);
  end;
  ButtonFrame(h=100,vm=(v+=40) /*v=vm*/,l=60,5,"Izmērs");
  RadioButton(h,v    ,0,0,"1*1",ArtMode);
  RadioButton(h,v+=16,2,0,"2*8",ArtMode);
  RadioButton(h,v+=16,1,0,"3*8",ArtMode);
  RadioButton(h,v+=16,4,0,"2*_4",ArtMode);
  RadioButton(h,v+=16,5,0,"2*_7",ArtMode); v = vm; h = 200;
  if (IsEnterprise) then begin
    CheckBox(h,v,0,"Tikai ar atlikumiem",flags[0]); v = v + 16;
  end;
  EndWindow;
end;

window ShipableRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Veidot nosūtāmo artikulu pārskatu",ShipableRClass,CGRcW,RcType);
  SetWRect(20,80,510,390);
  v= 6; vs = 20;h =110;
  EditFieldTL(h,v, 150,"Pasūtījums",   M4Str,Normal,30,f1,false,0);
  EditFieldTL(h,v+=vs ,150,"Artikuls",M4UStr,Normal,41,LastAcc,false,INSClass);
  EditFieldTL(h,v+=vs ,150,"Klients",M4UStr,Normal,41,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,150,"Maršruts",M4Code,Normal,20,f12,false,DelRouteSClass); //EBS
  if (HasSalesman or HasSalesmanBonus) then begin
  EditFieldTL(h,v+=vs ,50,"Aģents",M4UStr,Normal,10,AccStr,false,UserSClass);
  end;
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=vs ,50,"Klase",M4UStr,Normal,5,FirstAcc,false,OrderClassSClass);
  end;
  if (HasObjects) then begin
  EditFieldTL(h,v+=vs ,150,"Objekts",M4UStr,Normal,60,ObjStr,false,ObjSClass);
  end;
  if (HasMultiLocations) then begin
  EditFieldTL(h,v+=vs, 150,"Noliktava",M4UStr,Normal,10,f4,false,LocationSClass);
  end;
  if (HasItemGroups) then begin
  EditFieldTL(h,v+=vs ,50,"Artikulu grupa",M4UStr,Normal,5,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs, 150,"Artikulu klasif.", M4UStr,Normal,100,f8,false,DISClass);
  end;
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=vs ,150,"Plānotā nosūt.",M4UStr,Normal,21,Stext,false,PasteCurDate);
  EditFieldTL(h,vm=(v+=vs) ,150,"Pas. tips",M4Str,Normal,433,f7,false,SetSClass);
  end;
  CheckBox(h-5,v+=25,0,"Atļaut daļēju nosūtīšanu",OnlyUnprntd);
  if (HasItemGroups) then begin
  CheckBox(h-5,v+=16,0,"Rādīt tikai norādītās grupas artikulus",Comparison);
  end;
  ButtonFrame(h-5,vm=(v+=40),123,2,"Statuss");
  CheckBox(h-5,v,0,"Neiegrāmatotie",flags[7]);
  CheckBox(h-5,v+=16,0,"Grāmatotie",flags[8]);
  if (IsEnterprise) then begin
  ButtonFrame(h+=150,v=vm,170,3,"Rādīt");
  RadioButton(h,v,0,0,"Visus klientus",flags[9]);
  RadioButton(h,v+=16,1,0,"Neiekļaut kl. ar apturēt.darīj.",flags[9]);
  RadioButton(h,v+=16,2,0,"Tikai kl. ar apturēt. darīj.",flags[9]);
  end;
  ButtonFrame(h=300,v=24,160,4,"Rādīt");
  RadioButton(h,v,0,0,"Pārskatu",ArtMode);
  if (HasSalesman or HasSalesmanBonus) then begin
  RadioButton(h,v+=16,3,0,"Pārskatu pa aģentiem",ArtMode);
  end;
  RadioButton(h,v+=16,1,0,"Detalizēti",ArtMode);
  RadioButton(h,v+=16,2,0,"Pasūtījumu rindas",ArtMode);
  RadioButton(h,v+=16,4,0,"Pa maršrutiem",ArtMode); //EBS
  EndFrame;
  ButtonFrame(h,v+=40,150,3,"Veids");
  RadioButton(h,v,0,0,"Summas",flags[10]);
  RadioButton(h,v+=16,1,0,"Daudzums",flags[10]);
  CheckBox(h+10,v+=16,0,"Iekļaut nol. atlikumu",flags[11]);
  EndWindow;
end;

window IVRClass:2
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,v,vs;

  WindowBegin("Drukāt rēķinu",IVRClass,CGRcW,RcType);

  SetWRect(20,80,440,300);
  PeriodField(h=100,v=6,"Periods");
  EditFieldTL(h,v+=20, 150,"Nr.",   M4Str,Normal,30,f1,false,0);
  EditFieldTL(h,v+=20, 150,"Pavadz. Nr.",   M4Str,Normal,60,f3,false,0);
  EditFieldTL(100,v+=20,150,"Klients",M4UStr,Normal,41,f2,false,CUSClass);
  EditFieldTL(100,v+=20,150,"Maršruts",M4Code,Normal,20,f10,false,DelRouteSClass); //EBS
  EditFieldTL(100,v+=20,50,"Valoda",   M4Str,Normal,5,Language,false,LangSClass);
  ButtonFrame(h=30,v=147,175,3,"Statuss"); //EBS edit
  RadioButton(h,v,0,0,"Tikai nedrukātos",OnlyUnprntd);
  RadioButton(h,v+=16,1,0,"Visus",OnlyUnprntd);
  RadioButton(h,v+=16,2,0,"Oriģinālus",OnlyUnprntd);
  ButtonFrame(h,v=230,175,5,"Rindu izvietojums");
  RadioButton(h,v,0,0,"Nekāds",flags[15]);
  RadioButton(h,v+=16,1,0,"Pēc artikulu grupas",flags[15]);
  RadioButton(h,v+=16,2,0,"Katru artik. grupu savā rindā",flags[15]);
  RadioButton(h,v+=16,3,0,"Pēc istabiņas piedāvājuma",flags[15]);
  RadioButton(h,v+=16,4,0,"Atsevišķa rinda",flags[15]);
  CheckBox(h1=225,v=140,0,"Tikai neapmaksātos rēķinus",flags[10]);
  CheckBox(h1,v+=16,0,"Izlaist svītrotos rēķinus",flags[11]);
  CheckBox(h1,v+=16,0,"Iekļaut _EDI rēķinus",flags[28]);
  CheckBox(h1,v+=16,0,"Iekļaut e-rēķinus",flags[5]);
  ButtonFrame(h1,v=230,165,4,"Rēķina tips");
  CheckBox(h1,v,0,"Rēķins",flags[1]);
  CheckBox(h1,v+=16,0,"Skaidras naudas rēķins",flags[2]);
  CheckBox(h1,v+=16,0,"K_redītrēķins",flags[3]);
  CheckBox(h1,v+=16,0,"S_oda naudas rēķins",flags[4]);
  EndWindow;
end;

window BLT_PUToScannerVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Saņemšanu eksports",BLT_PUToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periods");
    EditFieldTL(h,v+=20,100,"Saņemšanas nr.",M4Long,Normal,10,long1,false,PUSClass);
    ButtonFrame(h,v+=40,140,2,"Iekļaut");
    CheckBox(h,v,0,"Eksportētos",flags[0]);
    CheckBox(h,v+=16,0,"Neeksportētos",flags[1]);
  EndWindow;

  return;
end;

window BLT_SHToScannerVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Nosūtīšanas eksports",BLT_SHToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periods");
    EditFieldTL(h,v+=20,100,"Nosūtīšanas nr.",M4Long,Normal,10,long1,false,SHSClass);
    ButtonFrame(h,v+=40,140,2,"Iekļaut");
    CheckBox(h,v,0,"Eksportētos",flags[0]);
    CheckBox(h,v+=16,0,"Neeksportētos",flags[1]);
  EndWindow;

  return;
end;

window BLT_ORToScannerVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Klientu pasūtījumu eksports",BLT_ORToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periods");
    EditFieldTL(h,v+=20,100,"Kl. pasūtījuma nr.",M4Long,Normal,10,long1,false,ORSClass);
    ButtonFrame(h,v+=40,140,2,"Iekļaut");
    CheckBox(h,v,0,"Eksportētos",flags[0]);
    CheckBox(h,v+=16,0,"Neeksportētos",flags[1]);
  EndWindow;

  return;
end;

window BLT_ScannerSetTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 150;

  WindowBegin("Svītru koda skannera mapes",BLT_ScannerSetTClass,CGSbl,ItemSettingType);
  Sizeable(-1,-1,-1,0);
  SetWRect(20,80,480,320);
  SetBlid(BLT_ScannerSetBlock);
  EditField(h,v=10,-20,"Goods rec. file name",Normal,PUFileName,false,0);
  EditField(h,v+=vs,-20,"Goods rec. export folder",Normal,PUExpFolder,false,0);
  EditField(h,v+=vs,-20,"Goods rec. import folder",Normal,PUImpFolder,false,0);
  EditField(h,v+=vs,-20,"Delivery file name",Normal,SHFileName,false,0);
  EditField(h,v+=vs,-20,"Delivery export folder",Normal,SHExpFolder,false,0);
  EditField(h,v+=vs,-20,"Delivery import folder",Normal,SHImpFolder,false,0);
  EditField(h,v+=vs,-20,"Item file name",Normal,ItemFileName,false,0);
  EditField(h,v+=vs,-20,"Item exprot folder",Normal,ItemExpFolder,false,0);
  EndWindow;
end;

window SHSClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Nosūtītās preces",SHSClass,CGslist,-);
  SpawnClass(SHDClass);
  SetWRect(20,80,880,298);
  Sizeable(-1,-1,0,0);
  UseView(SHVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(79,79,"Apst.",OKFlag,false,OKFlag);
  RlColKey(111,111,"Datums",ShipDate,false,ShipDate);
  if (HasMultiLocations) then begin
  RlCol(191,191,"Noliktava",Location,false);
  RlColKey(251,251,"Pasūt. Nr.",OrderNr,false,OrderKey);
  end else begin
    RlColKey(191,191,"Pasūt. Nr.",OrderNr,false,OrderKey);
  end;
  if (HasOfficialSerNr) then begin
    RlColKey(321,321,"Pavadz. Nr.",OfficialSerNr,false,OfficialSerNr);
  end;
  RlColKey(411,411,"Klients",CustCode,false,CustCode);
  RlColKey(471,471,"Nosaukums",Addr0,false,CustName);
  if (IsEnterprise) then begin
    RlColKey(-180,-180,"Transporta Nr.",TransportNumber,false,TransportNumber);
    RlColKey(-80,-80,"Nosūt. veids",ShipMode,false,ShipMode);
  end else begin
    RlColKey(-180,-180,"Komentārs",Comment,false,Comment);
  end;
  SearchField("Meklēt");
  EndWindow;
end;

window BLT_PUFromScannerVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Saņemšanu imports",BLT_PUFromScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    EditFieldTL(h=100,v=10,-20,"Faila nosaukums",M4Str,Normal,255,f1,false,BLT_FileSClass);
  EndWindow;

  return;
end;

window BLT_SHFromScannerVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Nosūtīšanu imports",BLT_SHFromScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    EditFieldTL(h=100,v=10,-20,"Faila nosaukums",M4Str,Normal,255,f1,false,BLT_FileSClass);
  EndWindow;

  return;
end;

window BLT_FileSClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Ievietot",BLT_FileSClass,CGother,HBlRecType);
    SetWRect(240,80,500,299);
    Sizeable(-1,-1,0,0);
    StringList(9,9,-40,-10);
  EndWindow;

  return;
end;

window BLT_INToScannerVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Artikulu eksports",BLT_INToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
  EndWindow;

  return;
end;

window ProdSettingsTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Ražošanas parametri",ProdSettingsTClass,CGSbl,-);
  SetBlid(ProdSettingsBlock);
  SetWRect(20,80,470,420);
  Sizeable(-1,-1,0,0);
  Tile(0,30,false,"",-);
  TileButton(1,"Opcijas");
  TileButton(2,"Izm. art.");
  Tile(1,120,true,"1",DayBuffer);
  h = 120; v = 6; vs = 20; h2 = 350;
  EditField(h,v,100,"Bufera dienas",Normal,DayBuffer,false,0);
  CheckBox(h,v+=30,0,"Ražojuma ierakstā faktiskais daudz.",ProdRowsHoldActualQty);
  CheckBox(h,v+=17,0,"Vienmēr veidot parastu ražoš. daudz. no plānotās raž.",SetNormalPlanned);
  CheckBox(h,v+=17,0,"Veidot norakstīšanu no brāķu ražojumiem",MakeSDFromDiscard);
  CheckBox(h,v+=17,0,"Noapaļot stundas uz dienām",RoundUpToOneDay);
  if (StandardHansa==false) then begin
  CheckBox(h,v+=17,0,"Pārveidot pasūtījuma klasi par ražošanas klasi",OrdClassToProd);
  end;
//  CheckBox(h,v+=17,0,"Atjaunot ražošanas skaitu no noliktavas kustības",UpdProdInQtyFromStockMov);
//we will finish it in 6.2
  h=h-100;
  if (HasAdvancedProduction) then begin
  ButtonFrame(h,v+=41,380,2,"Ražošanas darbību secība");
  RadioButton(h,v,0,0,"Atļaut strādāt ar nākamo secību, kamēr pašreizējā nav pabeigta",CompleteSequence);
  RadioButton(h,v+=16,1,0,"Pabeigt pašreizējo secību pirms sākt nākamo",CompleteSequence);
  end;
  ButtonFrame(h,v+=41,123,2,"Veidot plānotos");
  RadioButton(h,v,0,0,"Ražojumus",AutoGenProd);
  RadioButton(h,v+=16,1,0,"Ražojumu pasūt.",AutoGenProd);
  Tile(2,140,true,"2",MachineCostItem);
  h = 120; v = 3; vs = 20; h2 = 350;
  EditField(h,v,100,"Iekārtu izm. art.",Normal,MachineCostItem,false,INSClass);
  EditField(h,v+=vs,100,"Darba izm. art.",Normal,LabourCostItem,false,INSClass);
  EditField(h2,v,60,"Darba laika akt. tips",Normal,ActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Uzstād. izm. art.",Normal,SetupCostItem,false,INSClass);
  EditField(h2,v,60,"Uzstād. akt. tips",Normal,SetupActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Kust. izm. art.",Normal,MoveCostItem,false,INSClass);
  EditField(h2,v,60,"Kust. akt. tips",Normal,MoveActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Rindas izm. art.",Normal,QueueCostItem,false,INSClass);
  EditField(h2,v,60,"Rindas akt. tips",Normal,QueueActType,false,ActTypeSClass);
  EditField(h,v+=vs,60,"Box item class",Normal,BoxItemClass,false,DISClass); //EBS
  h=h-100;
  ButtonFrame(h,v+=40,123,2,"Laiks");
  RadioButton(h,v,0,0,"Faktiskais laiks",FixedTime);
  RadioButton(h,v+=16,1,0,"Fiksētais laiks",FixedTime);
  CheckBox(h,v+=30,0,"Automātiski rēķināt saražoto artikulu izmaksas",AutoCalcCostf);
  CheckBox(h,v+=17,0,"Pievienot darba izmaksas",AddWorkCost);
  EditField(350,v,60,"Darba izmaksas stundā",Normal,WorkCostPerHour,true,0);
  CheckBox(h,v+=17,0,"Pievienot brāķu izmaksas",AddDiscardedCost);
/*
  EditField(h,v,100,"Iekārtu izmaksu artikuls",Normal,MachineCostItem,false,INSClass);
  EditField(h2,v,60,"Raž. akt. tips",Normal,ActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Darba izm. artikuls",Normal,LabourCostItem,false,INSClass);
  EditField(h2,v,60,"Uzstād. akt. tips",Normal,SetupActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Dienu buferis",Normal,DayBuffer,false,0);
  CheckBox(h=h-100,v+=30,0,"Automātiski rēķināt ražoto artikulu izmaksas",AutoCalcCostf);
  CheckBox(h,v+=17,0,"Noapaļot stundas uz dienu",RoundUpToOneDay);
  CheckBox(h,v+=17,0,"Pievienot darba izmaksas",AddWorkCost);
  EditField(350,v,60,"Darba izm./h",Normal,WorkCostPerHour,true,0);
  CheckBox(h,v+=17,0,"Pievienot brāķu izmaksas",AddDiscardedCost);

  CheckBox(h,v+=17,0,"Veidot norakstīšanu no ražojumu brāķiem",MakeSDFromDiscard);
  CheckBox(h,v+=17,0,"Vienmēr veidot parasto ražoš. daudz. no plānotā",SetNormalPlanned);
  CheckBox(h,v+=17,0,"Ražojumā rindas ar faktisko daudz.",ProdRowsHoldActualQty);
  ButtonFrame(h,v+=41,123,2,"Veidot plānotos");
  RadioButton(h,v,0,0,"Ražojumus",AutoGenProd);
  RadioButton(h,v+=16,1,0,"Ražošanas pasūtījumus",AutoGenProd);
  ButtonFrame(h,v+=41,380,0,"Ražošanas darbības");
  ButtonFrame(h,v+=20,380,2,"Secība");
  RadioButton(h,v,0,0,"Atļaut nākamās secības apstrādi, ja iesāktā nav pabeigta",CompleteSequence);
  RadioButton(h,v+=16,1,0,"Neļaut sākt jaunu secību, ja nav pabeigta iesāktā",CompleteSequence);
  */
  EndWindow;
end;

window BLT_BoxItemsSClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Ievietot",BLT_BoxItemsSClass,CGother,HBlRecType);
    SetWRect(240,80,500,299);
    Sizeable(-1,-1,0,0);
    StringList(9,9,-40,-10);
  EndWindow;

  return;
end;

window RecDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vm,vs;
  WindowBegin("Specifikācija",RecDClass,CGview,-);
  SetWRect(20,80,600,340);
  Sizeable(-1,-1,0,0);
  UseView(RecVc);
  FormName(RecForm);
  vs = 20;
  h = 130; h2 = 350; h3 = 570;
  EditField(h,v=10,50,"Kods",St_i,Code,false,0);
  EditField(h2,v,-40,"Apraksts",Normal,Comment,false,0);
  if (HasAdvancedProduction) then begin
  EditField(h,v+=vs,85,"Parastais raž. daudz.",Normal,NormProdQty,true,0);
  EditField(h2,v,85,"Laiks sagatavošanai",Normal,SetUpTime,true,0);
  EditField(h3,v,85,"Valoda",Normal,LangCode,true,LangSCLass);
  EditField(h,v+=vs,85,"Min. raž. daudz.",Normal,MinProdQty,true,0);
  EditField(h2,v,85,"Dienas ražošanai",Normal,QtyAssemblyDays,true,0);
  end;
  if (IsStandardProduct) then begin
    CheckBox(h3,v+=vs,0,"Slēgts",Closed);
  end else begin
  CheckBox(h3,v,0,"Slēgts",Closed);
  end;
  if (HasAdvancedProduction) then begin
  EditField(h,v+=vs,85,"Vienas vien. izgat.",Normal,FixedAssembDays,true,0);
//  EditField(h,v+=vs,85,"In Item Scale",Normal,Scale,false,0);
  EditField(h2,v,85,"Stundas ražošanai",Normal,HrsToProd,true,0);
  EditField(h2+160,v,50,"Minūtes",Normal,MinsToProd,true,0);
  EditField(h2+280,v,50,"Sekundes",Normal,SecsToProd,true,0);
  EditField(h,v+=vs,85,"Resursa krāsa",Normal,ResMgrColNr,false,SetSClass);
  EditField(h2,v,85,"Ražojumiem",Normal,NumProd,true,0);
  EditField(h,v+=vs,85,"Standarta partija",Normal,StdBatch,true,0);
  EditField(h2,v,85,"Papildu daudzums",Normal,ExtraProdQty,false,0);
  EditField(h2+220,v,85,"Laika klase",Normal,TimeClass,false,TimeClassSClass); //EBS
  EditField(h,v+=vs,85,"Noklus. maršrutēšana",Normal,DefaultRouting,false,RoutingSClass);
  EditField(h2,v,85,"Kastes artikuls",Normal,DefBoxItem,false,BLT_BoxItemsSClass); //EBS
  EditField(h2+220,v,85,"Daudz. kastē",Normal,QtyInBox,true,0); //EBS
  EditField(h,v+=vs,-40,"Instrukcija",Normal,Instr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,Instr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,Instr2,false,0);
  end;
  CheckBox(30,-21,0,"Apstiprināts ",OKFlag);
  EnterSkip(Math);
  h=4; v=v+(vs+17);
  MatrixBegin(4,v,-50,-49,-,300);
  InsertRowTest;
  DeleteRowTest;
  vm = v;
  Flip(0);
  MatCol(1,30,"Artikuls",0,Item,false,INSClass);
  MatCol(1,114,"Nosaukums",0,Comment,false,0);
  Flip(1);
  MatCol(1,-350,"Ieej.",0,InQty,true,MATVARINSClass);
  MatCol(1,-290,"Izej.",0,OutQty,true,MATVARINSClass);
  MatCol(1,-230,"Vien.",0,Unittext,false,UnitSClass);
  if (HasAdvancedProduction) then begin
  MatCol(1,-180,"Rel.",0,RelVal,true,0);
  end;
  MatCol(1,-120,"Mat. izm.",0,ItemCost,true,0);
  if (HasAdvancedProduction) then begin
  MatCol(1,-60,"Darb. izm.",0,ExtraCost,true,0);
  end;
  if (HasAdvancedProduction) then begin
  Flip(2);
  MatCol(1,-400,"Apraksts",0,Desc,false,0);
  MatCol(1,-240,"Materiāls",0,Material,false,MaterialSClass);
  MatCol(1,-100,"Specifikācija",0,Recipe,false,SetSClass); // Bad name for field, will be confused with the Recepy of the item
  end;
  EndMatrix;
  vs = 20;
  if (HasAdvancedProduction) then begin
  VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  end;
  EditField(-370,  -21,85,"Ieej. art. izmaksas",ViewOnly,InSum,true,0);
  EditField(-150,  -21,85,"Izej. art. vērtība",ViewOnly,OutSum,true,0);
  if (HasAdvancedProduction) then begin
  SpecialMenu("Atvērt ražošanas artikula alternatīvu",' ',0,"RecShowMachineDsm");
  end;
  SpecialMenu("Artikulu meklēšana",'f',1,"ItemSearchDsm");
  EndWindow;
end;

window PLDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Cena",PLDClass,CGview,-);
  SetWRect(64,80,709,330);
  UseView(PLVc);
  v = 10; vs = 20; h = 120;
  EditField(h,v, 100,"Artikuls",Normal,ArtCode,false,INSClass);
  EditField(h,v+=vs,50,"Cenu lapa",Normal,PLCode,false,PLDefSClass);
  EditField(h,v+=vs,-40,"Komentārs",Normal,Comment,false,0);
  EditField(h,v+=vs,70,"Cena",Normal,ExVatPrice,true,0);
  if (HasModNL) then begin
  EditField(h,vm=(v+=vs),70,"Real.konts",Normal,SalesAcc,false,AccSClass);
  end;

  if (HasStandardCRM) then begin
    EditField(h,v+=vs,70,"Klients",Normal,CustCode,false,CUSClass);
  end;
  if (HasBuyBack) then begin
    EditField(h,v+=vs ,70,"Pašizmaksa",Normal,CostPrice,true,0);
    EditField(h,v+=20,70,"Pieg.izp.uzkr.konts",Normal,BBVarAcc,false,AccSClass);
  end;
  //EBS -->
  EditField(h,v+=vs,70,"Akc. sāk. datums",Normal,CampStartDate,false,PasteCurDate);
  EditField(h,v+=vs,70,"Akc. beigu datums",Normal,CampEndDate,false,PasteCurDate);
  EditField(h,v+=vs,70,"Akc. cena",Normal,CampPrice,true,0);
  //EBS <--
  if (IsEnterprise) then begin
    CheckBox(80,v+=30,0,"Lietot šo cenu, nelietot nevienu citu cenu aprēķinu",NoOtherPricing);
    CheckBox(80,v+=16,0,"Nepārrēķināt",DonotRecalculate);
  end;
  if (HasBuyBack) then begin
    CheckBox(80,v+=16,0,"Veidot atpirkuma grāmatojumu",BBGenTrans);
  end;
  EndWindow;
end;

window InvoiceBalticXMLExpVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer h,v,vs,vs2;

  WindowBegin("Real. rēķinu (Edisoft XML) eksports (BMC)",InvoiceBalticXMLExpVClass,CGMnt,RcType);
  SetWRect(20,80,450,240);
  v = 20; vs = 20; vs2 = 40; h = 145;
  PeriodField(h,v,"Periods");
  EditFieldTL(h,v+=vs,150,"Klients",M4Code,Normal,10,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,150,"Rēķins",M4Long,Normal,0,long1,false,IVSClass);
  h = h-10;
  ColourPushButton(h,v+=vs+10,h+170,v+vs2,"StartInvoiceBalticXMLExpSm","Eksportēt",2);
  StaticText(h,v+60,"",false);
  EndWindow;

  return;
end;

window InvBalXMLExpFolTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer h,v,vs,vs2;

  WindowBegin("Real. rēķ. (Edisoft XML) eksp. iest. (BMC)",InvBalXMLExpFolTClass,CGSbl,-);
  SetBlid(InvBalXMLExpFolBlock);
  SetWRect(64,80,570,260);
  h=160;v=10; vs =20;
  EditField(h,v,130,"Sūtītāja ILN kods",Normal,DefSendILN,false,0);
  EditField(h,v+=vs,130,"Sūtītāja klienta kods",Normal,DefSendCustCode,false,CUSClass);
  EditField(h,v+=vs,130,"Saņēmēja ILN kods",Normal,DefRecvILN,false,0);
  EditField(h,v+=vs,130,"Saņēmēja klienta kods",Normal,DefRecvCustCode,false,CUSClass);
  EditField(h,v+=vs,130,"Logistics company ILN code",Normal,LogistCompILN,false,0);
  EditField(h,v+=vs,130,"Senders veterinary cert. No",Normal,VetCertNo,false,0);
  EditField(h,v+=vs,130,"Cust. code in logistics company",Normal,LogisticCustCode,false,0);
  //h=70;
  EditField(h,v+=vs*2,340,"Edisoft eksp. mape",Normal,Folder,false,0);
  EndWindow;

  return;
end;

window ORXMLImpErrorDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Kl.pas.imp. - kļūda (BMC)",ORXMLImpErrorDClass,CGview,-);
  SetWRect(20,80,500,200);
  UseView(ORXMLImpErrorVc);
  vs=20; h=75;
  EditField(h,v=15,80,"Nr.",Normal,SerNr,false,0);
  EditField(h+150,v,80,"Kl.pas.",Normal,ORSerNr,false,0);
  EditField(h,v+=vs,80,"Datums",Normal,TransDate,false,0);
  EditField(h+150,v,80,"Laiks",Normal,TransTime,false,0);
  EditField(h,v+=vs*2,-40,"Kļūda",Normal,Comment,false,0);
  SpecialMenu("",'',0,"");
  EndWindow;

  return;
end;

window ORXMLImpErrorLClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Klientu pas. imp. - kļūdas (BMC)",ORXMLImpErrorLClass,CGmlist,-);
  SpawnClass(ORXMLImpErrorDClass);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,550,300);
  UseView(ORXMLImpErrorVc);
  RecordList(4,17,-20,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(80,80,"Kl.pas.",ORSerNr,false,ORSerNr);
  RlColKey(160,160,"Datums",TransDate,false,TransDate);
  RlCol(225,225,"Laiks",TransTime,false);
  RlColKey(280,280,"Kļūda",Comment,false,Comment);
  SearchField("Meklēt");
  EndWindow;

  return;
end;

window ORXMLImpCUTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Klientu pas. imp. - klienta kodi (BMC)",ORXMLImpCUTClass,CGHbl,HBlRecType);
  SetBlid(ORXMLImpCUBlock);
  SetWRect(20,80,500,400);
  Sizeable(-1,-1,0,0);
  h = 8; v = 25;
  MatrixBegin(h,v,-31,-10,-,1000);
  MatCol(1,h=30,"Imp. klienta ILN kods",0,ImpCustCode,false,0);
  MatCol(1,h=210,"Hansas klienta kods",0,CustCode,false,VESClass);
  EndMatrix;
  EndWindow;

  return;
end;

window ORXMLImpArtGTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Klientu pas. imp. - artikulu grupas (BMC)",ORXMLImpArtGTClass,CGHbl,HBlRecType);
  SetBlid(ORXMLImpArtGBlock);
  SetWRect(20,80,500,400);
  Sizeable(-1,-1,0,0);
  h = 8; v = 25;
  MatrixBegin(h,v,-31,-10,-,100);
  MatCol(1,h=30,"Artikulu grupa",0,ArtGroup,false,ITSClass);
  EndMatrix;
  EndWindow;

  return;
end;

window DelAddrDClass:2
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vm,vs;
  string 255 label;
  WindowBegin("Piegādes adrese",DelAddrDClass,CGview,DelAddrView);
  DynamicWindow;
  SetWRect(64,80,650,420);
  UseView(DelAddrVc);
  v = 10; vs = 20; h = 100; h2 = 350; h3 = 360;
  // if (HasModRent) then begin //EBS
  Tile(0,90,false,"",DelCode);
  TileButton(1,"Adrese");
  if (HasModRent) then begin //EBS
  TileButton(2,"Īre");
  end;
  EditField(h,v, 80,"Klients",Normal,CustCode,false,AllCUSClass);
  EditField(h2,v,-40,"Nosauk.",Normal,Name,false,0);
  EditField(h,v+=vs, 80,"Nos. kods",Normal,DelCode,false,0);
  EditField(h2,v,-40,"Komentārs",Normal,Comment,false,0);
  EditField(h,v+=vs, 80,"Piegādes komp.",Normal,BLT_FreightComp,false,FreightCompanySClass);
  EditField(h2,v,-40,"Pieg. adreses kods",Normal,BLT_FreightCompAddr,false,0);
  EditField(h,v+=vs, 80,"Nokl. noliktava",Normal,DefaultLocation,false,LocationSClass);
  // if (HasModRent) then begin //EBS
  Tile(1,250,false,"1",DelAddr0);
  // end; //EBS
  label = UserDefined("CUVc","InvAddr0");
  EditField(h,v=6,-40,label,Normal,DelAddr0,false,0);
  label = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,-40,label,Normal,DelAddr1,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,-40,label,Normal,DelAddr2,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs,-40,label,Normal,DelAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs,-40,label,Normal,DelAddr4,false,0);
  EditField(h,vm = (v+=vs),150,"Kontakts",Normal,Contact,false,0);
  EditField(h3,v,-40,"E-pasts",Normal,Email,false,0);
  EditField(h,v+=vs,150,"Tālrunis",Normal,Phone,false,0);
  EditField(h3,v,-40,"Fakss",Normal,Fax,false,0);
  EditField(h,v+=vs,50,"Valsts",Normal,DelCountry,false,CountrySClass);
  EditField(h3,v,-40,"Reģions",Normal,Region,false,RegionSClass);

  EditField(h,v+=vs,150,"GLN",Normal,RecipientGLN,false,0);
  EditField(h,v+=vs, 150,"Objects",Normal,Objects,false,ObjSClass); //EBS
  EditField(h3,v,-40,"Departaments",Normal,RecipientDepartment,false,0);
  v = v + vs;
  if (HasFreightAdvanced) then begin
    EditField(h,v,50,"Piegādes kods",Normal,FreightCode,false,WebFreightSClass);
  end;
  if (HasRoute) then begin
    EditField(h3,v,-40,"Maršruts",Normal,Sorting,false,DelRouteSClass);
  end;
  if (HasTaxMatrix) then begin
    if (UseTaxTemplatesforTaxCalc) then begin
      EditField(h3,v+=vs,50,"Real. nod. veidne",Normal,TaxTemplateCode,false,TaxTemplateSClass);
    end else begin
      EditField(h3,v+=vs,50,"PVN kods",Normal,VATCode,false,VATCodeSClass);
    end;
  end;
  if (HasLocalization("GBR")) then begin
  HalPushButton(-40-100,v+=20,-40,v+20,"UpdAddressDelAddrDsm","Atjaunot adresi");
  end;
  VATZoneButtonsLabelslat(h,v=v+38,170,16);
  if (HasModRent) then begin
  Tile(2,250,false,"2",PriceList);
  v = 6; h = 50; vs = 20; h2 = 350;
  ButtonFrame(h,vm=(v=20),250,3,"Rēķinā");
  RadioButton(h,v,0,0,"Viena rinda par artikulu/rezervāciju",InvoiceBase);
  RadioButton(h,v+=16,1,0,"Viena rinda par rezervāciju",InvoiceBase);
  RadioButton(h,v+=16,2,0,"Viena rinda par līgumu",InvoiceBase);
  ButtonFrame(h2,v=vm,200,3,"Periods");
  RadioButton(h2,v,0,0,"Neiekļaut",IncludePeriod);
  RadioButton(h2,v+=16,1,0,"Viena rinda pirms artikula",IncludePeriod);
  RadioButton(h2,v+=16,2,0,"Tā pati rinda pēc art. nosauk.",IncludePeriod);
  ButtonFrame(h,vm=(v+=40),250,3,"Daudzums (viena rinda par rezervāc.)");
  RadioButton(h,v,0,0,"Dienas",UseAsQty);
  RadioButton(h,v+=16,1,0,"Artikuli",UseAsQty);
  RadioButton(h,v+=16,2,0,"Artikuli * daudzums",UseAsQty);
  ButtonFrame(h2,v=vm,200,3,"Grupas rēķins");
  RadioButton(h2,v,0,0,"Nekāds",GroupInvoice);
  RadioButton(h2,v+=16,1,0,"Atsev. rēķ. katram klientam",GroupInvoice);
  RadioButton(h2,v+=16,2,0,"Atsev. rēķ. klientam/darba obj.",GroupInvoice);
  EditField(h2,v+32,100,"Cenu lapa",Normal,PriceList,false,PLDefSClass);
  CheckBox(h,vm=(v+=32),0,"Iekļaut oriģinālo artikulu",IncludeOriginalItem);
  CheckBox(h,v+=16,0,"Iekļaut līgumu un darba objektu",IncludeSite);
  CheckBox(h,v+=16,0,"Iekļaut kl. pasūtījuma Nr.",InclCustOrdNr);
  CheckBox(h,v+=16,0,"Iekļaut īres rezervāc. Nr.",InclRentResNo);
  CheckBox(h,v+=16,0,"Ievietot tukšu rindu kā atdalītāju",AddEmptyLine);
  end;
  EndWindow;
end;

window IVDClass:2
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,hm,hs,t,v,v2,v3,vm,vs,width,h5;
  string 255 label;
  Integer rn;

  WindowBegin("Rēķins",IVDClass,CGview,-);
  Sizeable(-1,-1,0,0);
  UseView(IVVc);

  ActiveFieldOnNew("CustCode");
  SetWRect(20,80,750,460);
  CommunicateButton;
  Tile(0,74,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Klients",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Nosaukums",Normal,Addr0,false,0);
  if (StandardHansa==false) then begin
    if (HasLocalization("FIN")) then begin
      EditField(h,vm=(v+=20),180,"Payment Ref",ViewOnly,CalcFinRef,false,0);
    end else begin
  EditField(h,vm=(v+=20),135,"Pavadz. Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
    end;
    if (HasLocalization("BRA")) then begin
      EditField(500,vm,135,"Bank Receipt No.",ViewOnly,BankReceiptNr,false,0); //!!TRANSLATE
    end;
  end else begin
    v = v + 20;
    vm = v;
  end;
  CheckBox(h4=-80,v,0,"Grāmatot",OKFlag);
  TileButton(1,"Nosac.");
  TileButton(2,"Artikuli");
  TileButton(3,"Valūtas");
  TileButton(4,"Nos. nosac.");
  TileButton(5,"Identifikatori");
  TileButton(6,"Cenu lapa");
  TileButton(7,"Rēķ. adrese");
  TileButton(8,"Nos. adrese");
  Tile(1,110,false,"1",InvDate);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Rēķina dat.",Normal,InvDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Sam. term.",Normal,PayDeal,false,PDSClass);//PDMSClass);
  EditField(h1,v+=vs,82,"Apmaksas dat.",Normal,PayDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Grāmatojuma dat.",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Pakalp. pieg. dat.",Normal,ServiceDelDate,false,PasteCurDate);
  EditField(h2,v=vm,135,"Mūsu kontaktp.",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Kl. kontaktpers.",Normal,ClientContact,false,ContactSClass);
  EditField(h2,v+=vs,135,"Objekti",Normal,Objects,false,ObjSClass);
  EditField(h2,v+=vs,135,"Atsauksme",Normal,RefStr,false,0);
  EditField(h2,v+=vs,135,"Kl. pas. Nr.",Normal,CustOrdNr,false,0);
  EditField(h3,v=vm,80,"Aģents",Normal,SalesMan,false,UserSClass);
  if (StandardHansa) then begin
    EditField(h3,v+=vs,80,"Nolikava",Normal,Location,false,LocationSClass);
  end else begin
  EditField(h3,v+=vs,80,"Projekts",Normal,PRCode,false,0);
  end;
  EditField(h3,v+=vs,80,"Kredit. iemesls",Normal,Reason,false,StandProblemsSClass);
  if (HasLocalization("MEX")) then begin
    EditField(h3,v+=vs,80,"Payment Mode",Normal,PMCode,false,PMSClass);
  end;
  if (HasLocalization("BRA")) then begin
    EditField(h3,v+=vs,80,"E-rēķinu tips",Normal,BrazilEInvType,false,BrazilEInvTypeSClass);
  end;
  if (HasLocalization("BOL,BRA,HRV,MEX")) then begin
    EditField(h3,v+=vs,130,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
  end;
  if (HasLocalization("MEX")) then begin
    EditField(h3,v+=vs,80,"Maks. konta Nr.",Normal,PayAccNo,false,0);
  end;
  if (HasLocalization("RUS")) then begin
    EditField(h3,v+=vs,-20,"Maks. info.",Normal,ReceiptInfo,false,0);
  end;
  CheckBox(-80,v=6,0,"Apstrīdēts",DisputedFlag);
  CheckBox(-80,v+=16,0,"Nos. uz EDI",SentToEDI); //EBS
  CheckBox(-80,v+=16,0,"Apstiprināts",ConfirmedEDI); //EBS
  if (StandardHansa) then begin
    CheckBox(h4,v+=16,0,"Atjaunināt noliktavu",UpdStockFlag);
  end;
  EnterSkip(Math);
  Tile(2,220,true,"2",Math);
  //  CheckBox(20,-20,0,"OK",OKFlag);
  if (CompileType!=ctiPhone) then begin
    EditField(-150,-61,95,"Kopā svars",ViewOnly ,BLT_TotalWeight,true,0); //EBS
    EditField(410,-61,70,"Kopā neto svars",ViewOnly ,BLT_TotalNetWeight,true,0); //EBS
    EditField(55,-41,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (UseTaxTemplatesforTaxCalc==false) then begin
      if (UserCanAction("ViewCostPrice",true)) then begin
        EditField(160,-41,70,"BP %",Normal,GPProc,true,0);
        EditField(160,-21,70,"Kopā BP",ViewOnly,TotGP,true,0);
      end;
      if (HasLocalization("GBR,LTU,POL")) then begin
        EditField(310,-41,50,"Reversais PVN",ViewOnly,RvrsVAT,true,0);
      end else begin
  EditField(290,-41,70,"Nod.2",ViewOnly,TAX2Sum,true,0);
  EditField(290,-21,70,"Atsk.nod.",ViewOnly,TAX1Sum,true,0);
      end;
  EditField(410,-41,95,"PVN",ViewOnly ,Sum3,true,0);
    end else begin
      if (UserCanAction("ViewCostPrice",true)) then begin
        EditField(290,-41,70,"BP %",Normal,GPProc,true,0);
        EditField(290,-21,70,"Kopā BP",ViewOnly,TotGP,true,0);
      end;
      EditField(410,-41,95,"Nod.",ViewOnly ,Sum3,true,0);
    end;
    EditField(410,-21,95,"Pamats.",ViewOnly,BaseSum4,true,0);
    EditField(-150,-41,95,"Starpsum.",ViewOnly ,Sum1,true,0);
    EditField(-150,-21,95,"KOPĀ",ViewOnly ,Sum4,true,0);
  end else begin
    EditField(55,-41,80,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
    EditField(55,-21,80,"PVN",ViewOnly ,Sum3,true,0);
    EditField(-120,-41,80,"Atsk. nod.",ViewOnly,TAX1Sum,true,0);
    EditField(-120,-21,80,"KOPĀ",ViewOnly ,Sum4,true,0);
  end;
  v = 24;
  MatrixBegin(4,v,-50,-69,-,200);
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(t=kInvoiceRowTypeNormal,32,"Artikuls",0,ArtCode,false,BLT_INSClass); //EBS edit
  //  MatCol(t,94,"Veids",0,VARList,true,VARSClass);
  //  MatCol(t,144,"Daudz.",0,Quant,true,0);
  if (HasVarieties) then begin
  MatCol(t,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Daudz.",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Artikuls",0,ArtCode,false,ForSaleINSClass);
  if (HasVarieties) then begin
  MatCol(t,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Daudz.",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatText(t=kInvoiceRowTypeCredit,32,"Kreditēt rēķinu",true);
  MatCol(t,208,"",0,OrdRow,false,ARSClass);
  MatCol(t,-216,"",0,Spec,false,0);//MatText(t,-216,"",true);
  MatText(t=kInvoiceRowTypeDebit,32,"Rēķina debets",true);
  MatCol(t,208,"",0,OrdRow,false,0);
  MatCol(t,-216,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeInterest,32,"Soda %",true);
  MatCol(t,98,"",0,ArtCode,false,0);
  MatCol(t,153,"",0,Quant,true,0);
  MatCol(t,188,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeDownpayment,32,"Priekšapmaksa",true);
  MatColTL(t,122,"",0,-1,ViewOnly,0,ArtCode,true,0);
  MatColTL(t,188,"",0,-1,ViewOnly,0,Quant,true,0);
  MatCol(t,238,"",0,Spec,false,0);
  MatColTL(t,-240,"",0,-1,ViewOnly,0,Price,true,0);
  MatColTL(t,-180,"",0,-1,ViewOnly,0,vRebate,true,0);
  MatColTL(t,-140,"",0,-1,Normal,0,Sum,true,0); //?? TL?
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-100,"",0,SalesAcc,false,AccSClass);
    MatCol(t,-54,"",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-70,"",0,SalesAcc,false,AccSClass);
    MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  end;
  MatText(t=kInvoiceRowTypePrepayment,32,"Priekšapmaksas Nr.",true);
  MatCol(t,208,"",0,CUPNr,false,ARPay3SClass);
  MatCol(t,-216,"",0,BasePrice,false,0);
  MatCol(t,-170,"",0,Price,true,0);// Price holds the VAT sum, Recipe holds the date of prepaym. BasePrice holds amount in base 1, TAX1Reb holds TAX1Sum
  MatCol(t,-100,"",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeLoan,32,"Aizdevums",true);
  MatCol(t,98,"",0,CuAccCode,true,CuAccSClass);
  MatCol(t,-350,"",0,SalesAcc,true,AccSClass);
  MatCol(t,-230,"",0,Objects,false,0);
  MatCol(t,-110,"",0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeLoanInterest,32,"Aizd. %",true);
  MatCol(t,98,"",0,CuAccCode,true,CuAccSClass);
  MatCol(t,-350,"",0,SalesAcc,true,AccSClass);
  MatCol(t,-230,"",0,Objects,false,0);
  MatCol(t,-110,"",0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeUpdateMark,32,"Paraksts",false);
  MatColTL(t,94,"Zīme",0,-1,ViewOnly,0,VoidedSign,false,0);
  MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeVoid,32,"Tukšs",false);
  MatColTL(t,65,"Zīme",0,-1,ViewOnly,0,VoidedSign,false,0);
  MatCol(t,100,"Artikuls",0,ArtCode,false,ForSaleINSClass);
  if (HasVarieties) then begin
  MatCol(t,150,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,150,"Daudz.",0,Quant,true,0);
  end;
  MatCol(t,190,"Cena",0,Price,true,0);
  MatCol(t,250,"Apraksts",0,Spec,false,0);
  MatCol(t,-195,"Sēr. Nr",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-110,"%",0,vRebate,true,0);
  MatCol(t,-80,"Summa",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeSubtotal,32,"Starpsumma",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-140,"Summa",0,-1,ViewOnly,0,Sum,true,0);
  //  MatCol(t,-70,"Cost",0,Cost,true,0);
  MatText(t=kInvoiceRowTypeHidden,32,"Šī un visas nākamās rindas izdrukā nebūs redzamas",false);
  MatText(t=kInvoiceRowTypeCorrection,32,"K",true);
  MatCol(t,45,"Artikuls",0,ArtCode,false,ForSaleINSClass);
  MatCol(t,91,"Daudz.",0,Quant,true,0);
  MatText(t=kInvoiceRowTypeRetention,32,"Uzkrājums",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-210,"SalesAcc",0,-1,0,0,SalesAcc,false,AccSClass);
  MatColTL(t,-110,"Summa",0,-1,0,0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeGiftVoucherSold,32,"DK",true);
  MatCol(t,58,"",0,GCNr,false,GCSClass);
  MatCol(t,-416,"",0,Spec,false,0);
  MatCol(t,-84,"Summa",0,Sum,true,0);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeGiftVoucherPayment,32,"DKS",true);
  MatCol(t,58,"",0,GCNr,false,GCSSClass);
  MatCol(t,-316,"",0,Spec,false,0);
  MatCol(t,-84,"Summa",0,Sum,true,0);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeCashPayment,32,"S/N",true);
  MatCol(t,94,"Summa",0,Sum,true,0);
  MatCol(t,198,"Sam. veids",0,PayMode,true,PMSClass);
  MatCol(t,250,"Spec.",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeLoyaltyPointsPayment,32,"LOYPA",true);
  MatCol(t,68,"Summa",0,Sum,true,0);
  MatCol(t,108,"Punkti",0,Points,true,0);
  MatCol(t,148,"Valūta",0,CurncyCode,true,CurncyCodeSClass);
  MatCol(t,-280,"Spec.",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeLoyaltyPointsBonus,28,"LOYBO",true);
  MatCol(t,68,"Punkti",0,Points,true,0);
  MatCol(t,141,"Spec.",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeCreditCardPayment,32,"CC",true);
  MatCol(t,94,"Summma",0,Sum,true,0);
  MatCol(t,198,"Sam. veids",0,PayMode,true,PMSClass);
  MatCol(t,250,"Spec.",0,Spec,false,0);
  MatCol(t,-280,"",0,CreditCard,false,CreditCardSClass);
  MatCol(t,-84,"Apstiprināts",0,AuthorizationCode,false,0);
  MatText(t=kInvoiceRowTypeHeader,32,"Virsraksts",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowType18,28,"Rezervēts",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowType19,28,"Rezervēts",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Real. nodoklis",true);
  MatCol(t,132,"",0,CuAccCode,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,AccSClass);
  MatCol(t,452,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeWithholdingTax,32,"Ietur. nodoklis",true);
  MatCol(t,132,"",0,WHTax,false,WHTaxSClass);
  MatCol(t,172,"",0,SalesAcc,false,AccSClass);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,392,"",0,Spec,false,0);
  if (StandardHansa==false) then begin
  MatText(t=kInvoiceRowTypeMultiBuyDiscount,32,"Izpārd. atlaide",true);
  end;
  MatCol(t,152,"",0,MBRCode,false,0);
  MatCol(t,192,"",0,ArtCode,false,ForSaleINSClass);
  MatCol(t,-400,"",0,Spec,false,0);
  MatCol(t,-270,"",0,Quant,true,0);
  MatCol(t,-235,"",0,Price,true,0);
  MatCol(t,-135,"",0,vRebate,true,0);
  MatCol(t,-100,"",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeDebtorsTransfer,32,"DBT TRSF",true);
  MatCol(t,94,"Spec.",0,Spec,false,0);
  MatCol(t,-235,"Deb. konts",0,SalesAcc,false,0);
  MatCol(t,-135,"Sum.",0,Sum,true,0);
  MatCol(t,-30,"PVN-k.",0,VATCode,false,0);
  /*
  MatText(t=kInvoiceRowTypePreviousDownpayment,32,"Prev. Down Payment",true);
  MatColTL(t,152,"",0,-1,ViewOnly,0,CUPNr,true,0);
  MatColTL(t,222,"",0,-1,ViewOnly,0,ServiceDelDate,true,0);
  MatColTL(t,-200,"",0,-1,Normal,0,Price,true,0);
  MatColTL(t,-100,"",0,-1,Normal,0,Sum,true,0);
  */
  //t = 21 kInvoiceRowTypeChequePayment
  MatText(t=kInvoiceRowTypeActivationDate,32,"Aktivizācijas datums",true);
  MatCol(t,130,"",0,ServiceDelDate,false,PasteCurDate);
  Flip(1);
  //  MatCol(t=kInvoiceRowTypeNormal,194,"Apraksts",0,Spec,false,0);
  t=kInvoiceRowTypeNormal;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-235,"Vien.cena",0,Price,true,0);
  //  MatColTL(t,-235,"",0,M45Val,Normal,0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Summa",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-235,"Vien.cena",0,Price,true,0);
  //  MatColTL(t,-235,"",0,M45Val,Normal,0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Summa",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeInterest,-260,"",0,OrdRow,true,0);
  MatCol(t,-235,"",0,BasePrice,true,0);
  MatCol(t,-135,"",0,vRebate,true,0);
  MatCol(t,-100,"",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-235,"Vien.cena",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Summa",0,Sum,true,0);
  Flip(2);
  MatCol(t=kInvoiceRowTypeNormal,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-360,"Realiz.k.",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-310,"Uzkrāj.",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-255,"Noliktava",0,Location,false,LocationSClass);
  MatCol(t,-180,"Vieta",0,PosCode,false,UsedPosSClass);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-144,"Objekti",0,Objects,false,ObjSClass);
    MatCol(t,-70,"PVN kd",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-124,"Objekti",0,Objects,false,ObjSClass);
    if (HasLocalization("GBR,LTU,POL")) then begin
      MatCol(t,-60,"#P-Kd#",0,VATCode,false,VATCodeSClass);
      MatCol(t,-30,"Rvrs",0,RvrsVATCode,false,VATCodeSClass);
    end else begin
    MatCol(t,-30,"PVN kd",0,VATCode,false,VATCodeSClass);
    end;
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-360,"Realiz. konts",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-310,"Uzkrāj.",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-255,"Noliktava",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-180,"Vieta",0,PosCode,false,UsedPosSClass);
  end;
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-144,"Objekti",0,Objects,false,ObjSClass);
    MatCol(t,-70,"PVN kd",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(t,-124,"Objekti",0,Objects,false,ObjSClass);
  MatCol(t,-30,"PVN kd",0,VATCode,false,VATCodeSClass);
  end;
  MatCol(t=kInvoiceRowTypeInterest,-70,"",0,SalesAcc,false,AccSClass);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  //  MatCol(t=kInvoiceRowTypePrepayment,-224,"",0,SalesAcc,false,AccSClass);
  //  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-250,"Konts",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-170,"Uzkr.",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-104,"Objekti",0,Objects,false,ObjSClass);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-35,"Nod.veid.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(t,-30,"PVN kd",0,VATCode,false,VATCodeSClass);
  end;
  Flip(3);
  t=kInvoiceRowTypeNormal;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-380,"Vien.cena",0,Price,true,0);
	MatCol(t,-315,"%",0,vRebate,true,0);
	MatCol(t,-280,"Pašizm. B2",0,BasePriceB2,true,0);
	MatCol(t,-210,"Pašizmaksa",0,BasePrice,true,0);
	MatCol(t,-140,"BP",0,rowGP,true,0);
	MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Vien.cena",0,Price,true,0);
	MatCol(t,-135,"%",0,vRebate,true,0);
	MatCol(t,-100,"Summa",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraksts",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-380,"Vien.cena",0,Price,true,0);
    MatCol(t,-315,"%",0,vRebate,true,0);
    MatCol(t,-280,"Pašizm. B2",0,BasePriceB2,true,0);
    MatCol(t,-210,"Pašizmaksa",0,BasePrice,true,0);
    MatCol(t,-140,"BP",0,rowGP,true,0);
    MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Vien.cena",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Summa",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeCorrection,144,"Apraksts",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-315,"Vien.cena",0,Price,true,0);
    MatCol(t,-245,"%",0,vRebate,true,0);
    MatCol(t,-210,"Pašizmaksa",0,BasePrice,true,0);
    MatCol(t,-140,"BP",0,rowGP,true,0);
    MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Vien.cena",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Summa",0,Sum,true,0);
  end;
  Flip(4);
  t=kInvoiceRowTypeNormal;
  MatCol(t=kInvoiceRowTypeNormal,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-370,"Aģenti",0,Salesmen,false,UserSClass);
  MatCol(t,-300,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
//  MatCol(t,-250,"Main Serial No.",0,MotherNr,true,0);
  MatCol(t,-220,"Cen.fakt.",0,PriceFactor,true,0);
  MatCol(t,-170,"Spec.",0,Recepy,false,RecSClass);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-70,"Rindas FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-310,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-240,"Cen.fakt.",0,PriceFactor,true,0);
  MatCol(t,-180,"Spec.",0,Recepy,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-110,"Rindas FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t,-40,"Koef.",0,Coefficient,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-310,"Sērijas Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-240,"Cen.fakt.",0,PriceFactor,true,0);
  MatCol(t,-180,"Spec.",0,Recepy,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-110,"Rindas FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t,-80,"",0,MotherArtCode,false,0);
  MatCol(t,-40,"",0,RecipeQuant,false,0);
  //  MatCol(t,-40,"Koef.",0,Coefficient,true,0);
  Flip(5);
  t=kInvoiceRowTypeNormal;
  MatCol(t=kInvoiceRowTypeNormal,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-315,"Vien.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"V.daudz.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plat.",0,UnitXval,true,0);
  MatCol(t,-160,"Augst.",0,UnitYval,true,0);
  MatCol(t,-120,"Biez.",0,UnitZval,true,0);
  MatCol(t,-80,"Vien.cena ar koef.",0,UnitFactPrice,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-315,"Vien.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"V.daudz.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plat.",0,UnitXval,true,0);
  MatCol(t,-160,"Augst.",0,UnitYval,true,0);
  MatCol(t,-120,"Biez.",0,UnitZval,true,0);
  MatCol(t,-80,"Vien.cena ar koef.",0,UnitFactPrice,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Apraksts",0,Spec,false,0);//New Row Type..
  MatCol(t,-315,"Vien.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"V.daudz.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plat.",0,UnitXval,true,0);
  MatCol(t,-160,"Augst.",0,UnitYval,true,0);
  MatCol(t,-120,"Biez.",0,UnitZval,true,0);
  MatCol(t,-80,"Vien.cena ar koef.",0,UnitFactPrice,true,0);
  Flip(6);
  t=kInvoiceRowTypeNormal;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-390,"Kl. artikula Nr.",0,CustArtCode,false,CUINSClass);
  MatCol(t,-300,"Koef.",0,Coefficient,true,0);
  MatCol(t,-260,"Cenas fakt.",0,PriceFactor,true,0);
  if (UserCanAction("HWContractAdmin",false) or UserCanAction("HWContractCUServiceHistEdit",false) or UserCanAction("HWContract_LocalAdmin",false)) then begin
  MatCol(t,-210,"Kl.serv.vēst.",0,CUServiceHistNr,false,0);
  end;
  MatCol(t,-130,"Kredit.rinda",0,CreditedRow,false,0);
  MatCol(t,-70,"Vides nod.",0,RepaExVAT,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-390,"Kl. artikula Nr.",0,CustArtCode,false,CUINSClass);
  MatCol(t,-300,"Koef.",0,Coefficient,true,0);
  MatCol(t,-260,"Cenas fakt.",0,PriceFactor,true,0);
  if (UserCanAction("HWContractAdmin",false) or UserCanAction("HWContractCUServiceHistEdit",false) or UserCanAction("HWContract_LocalAdmin",false)) then begin
  MatCol(t,-210,"Kl.serv.vēst.",0,CUServiceHistNr,false,0);
  end;
  MatCol(t,-130,"Kredit.rinda",0,CreditedRow,false,0);
  MatCol(t,-70,"Vides nod.",0,RepaExVAT,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-80,"Vides nod.",0,RepaExVAT,true,0);
  Flip(7);
  t = kInvoiceRowTypeNormal;
  if (GuiType!=kGuiiPhone) then begin
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  end;
  MatCol(t,-240,"Muitas Nr.",0,CustomsNr,false,0);
  MatCol(t,-100,"Izcelsmes valsts",0,CountryOfOrg,false,CountrySClass);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-240,"Muitas Nr.",0,CustomsNr,false,0);
  MatCol(t,-100,"Izcelsmes valsts",0,CountryOfOrg,false,CountrySClass);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-240,"Muitas Nr.",0,CustomsNr,false,0);
  MatCol(t,-100,"Izcelsmes valsts",0,CountryOfOrg,false,CountrySClass);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Artikula statuss",'I','I',0,"ItemStatusIVDsm");
  RowMenuItem(0,"Iepriekšējās pārdošanas cenas",' ',' ',0,"IVLastSPrsm");
  RowMenuItem(0,"Virsraksta rinda",' ',' ',0,"HeaderLineIVDsm");
  RowMenuItem(0,"Slēptā rinda",' ',' ',0,"HiddenLineIVDsm");
  if (HasLocalization("SVN")==false) then begin
    RowMenuItem(0,"Skaidra nauda",' ',' ',0,"CashLineIVDsm");
    RowMenuItem(0,"Kredītkarte",' ',' ',0,"CreditCardLineIVDsm");
  end;
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Pievienot uzkrājumu",' ',' ',0,"RetentionLineIVDsm");
  end;
  RowMenuItem(0,"Starpsumma",' ',' ',0,"SubTotalLineIVDsm");
  RowMenuItem(0,"Pārbaudīt Apple garantijas statusu",'w',' ',0,"WarrantyStatusIVDsm");
  if (FileExists("hob/hmdatadef.hob")) then begin
    RowMenuItem(0,"Pievienot licences sākuma datumu",' ',' ',0,"LicStartIVDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 22;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
  EditField(h,v+(vs*2),50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
  EditField(h2=295,v,50,"Kurss",Normal,FrRate,true,0);
  RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta 1",false);
  RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Bāzes valūta 2",false);
  Tile(4,110,false,"4",ShipDeal);
  vs = 20; h1 = 110; h2 = 310; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Nosūt. nosac.",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Nosūt. veids",Normal,ShipMode,false,DMSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Maršruts",Normal,Sorting,false,DelRouteSClass);
  EditField(h1,v+=vs,80,"Noliktava",Normal,Location,false,LocationSClass);
    EditField(h1,v+=vs,80,"Plān. nosūt. dat.",Normal,PlanSendDate,false,PasteCurDate);
    EditField(h1,v+=vs,80,"Plān. nosūt. laiks",Normal,PlanSendTime,false,PasteCurTime);
  end;
  EditField(h1,v+=vs,80,"Filiāle",Normal,BranchID,false,AllCUSClass);
  EditField(h2,v=vm,80,"Kop. daudzums",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Kop. svars",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Kop. tilpums",ViewOnly,TotVolume,true,0);
  EditField(h2,v+=vs,80,"Krava",Normal,FrPrice,true,0);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Plān. piegādes dat.",Normal,PlanArrDate,false,PasteCurDate);
    EditField(h2,v+=vs,80,"Plān. piegādes laiks",Normal,PlanArrTime,false,PasteCurTime);
  EditField(h2,v+=vs,80,"Transporta komp.",Normal,FreightCode,false,FreightCompanySClass);
  CheckBox(h3,v=vm,0,"Izmainīt nol. atlikumu",UpdStockFlag);
    EditField(h3,v+=2*vs,80,"Piegādes PVN kd",Normal,FrVATCode,true,VATCodeSClass);
    EditField(h3,v+=vs,80,"Intrastat grām. kods",Normal,IntrastatTransCode,true,IntrastatTransCodeSClass);
    EditField(h3,v+=vs,80,"Globāla transp. Nr.",Normal,GlobalTransportNr,false,0);
    EditField(h3,v+=vs,80,"Globāla transp. datums",Normal,GlobalTransportDate,false,PasteCurDate);
  end;
  Tile(5,170,false,"5",OrderNr);
  EditField(h1,v=vm,80,"Pas.Nr.",ViewOnly,OrderNr,false,0);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Pak.pas.Nr.",ViewOnly,SVONr,false,0);
  EditField(h1,v+=vs,80,"Kred.pārvald.Nr.",ViewOnly ,CredManNr,false,0);
  end;
  EditField(h1,v+=vs,135,"Pavadz. Nr. 2",Normal,OfficialSerNr2,false,0);
  if (HasLocalization("FIN")) then begin
    EditField(h1,v+=vs,135,"Nosūtīšanas vietas kods",Normal,DeliverySiteCode,false,0);
    EditField(h1,v+=vs,135,"Darba vietas numurs",Normal,WorkSiteNumber,false,0);
  end;
  if (HasLocalization("BRA")) then begin
    EditField(h1,v+=vs,80,"Federālie pakalpojumi",Normal,FedServCode,false,FederalSerSClass);
  end;
  if (HasLocalization("ARG,BOL")) then begin
    EditField(h1,v+=vs,135,"CAE/CAEA",Normal,CAE,false,0);
    EditField(h1,v+=vs,135,"CAE termiņš",Normal,CAEExpiry,false,0);
    EditField(h1,v+=vs,70,"CAEA sāk.",ViewOnly,CAEAStartDate,false,0);
  end;

  EditField(h2=350,v=vm,80,"Stat. vērtība",Normal,StatVal,true,0);
  EditField(h2,v+=vs,80,"Izveides laiks",Normal,TransTime,false,SetSClass);
  EditField(h2,v+=vs,80,"Drukāšanas datums",ViewOnly,PrintDate,false,0);
  EditField(h2,v+=vs,80,"Iespējas komentārs",ViewOnly,OYDescription,false,0);
  if (FileExists("hob/hmdatadef.hob")) then begin//??? why here and not it ahansamail ?
    EditField(h2,v+=vs,80,"Nākošais Rēķina.Nr",ViewOnly,ToBeIVNr,false,0);
  end;
  //  ColourPushButton(-100,v,-20,v+60,"TestIVDClassCardData","Test" & chr(10) & "CardData",4);
  //  SoftEditField(h3+50,v,100,"Control Code"  ,ViewOnly ,"TaxAuthIDCC",false,0,M4Str,60);
  if (StandardHansa==false) then begin
  if (HasLocalization("ARG,BOL")) then begin
      EditField(h2,v+=vs,135,"VID iest. kods",Normal,TaxAuthID,false,0);
  EditField(h2,v+=vs,135,"Kontroles kods",ViewOnly ,TaxAuthIDCC,false,0);
    end;
    if (HasLocalization("PRT")) then begin
  EditField(h2,v+=vs,135,"Statuss",Normal,Status,false,SetSClass);
    end;
    if (HasLocalization("ARG,PRT")) then begin
    EditField(h2,v+=vs,135,"PVN Tips",Normal,TaxInvType,false,SetSClass);
    end;
    if (HasLocalization("ARG")) then begin
      EditField(h2,v+=vs,70,"CAEA termiņš",ViewOnly,CAEAExpiryDate,false,0);
    end;
    if (HasLocalization("SVN")) then begin
      EditField(h2,v+=vs,180,"E-Rēķ. Apst. Nr.",ViewOnly,TaxAdminReceiptNr,false,0);
      EditField(h2,v+=vs,180,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
    end;
  end;
  //  EditField(h2,v+=vs,135,"E-Inv Exp. Date",ViewOnly,EInvExpDate,false,0);//Tx server
  //  EditField(h2,v+=vs,135,"E-Inv Exp. Qty",ViewOnly,EInvExpQty,false,0);
  CheckBox(h3=450,v=vm,0,"Bez atgādinājuma",NoRemndrFlag);
  CheckBox(h3,v+=16,0,"Bez soda %",NoInterestFlag);
  CheckBox(h3,v+=16,0,"Bez faktoringa",NoColectionFlag);
  CheckBox(h3,v+=16,0,"Fiskālais rēķins",FiscalFlag);
  CheckBox(h3+130,v=vm,0,"Rēķ. Nr. grāmatojumā",ARonTR);
  CheckBox(h3+130,v+=16,0,"Nesūtīt kā e-rēķinu",NoEInvoice);
  CheckBox(h3+130,v+=16,0,"Pašu rēķini",SelfBilling);
  CheckBox(h3+130,v+=16,0,"Grāmatot maksājuma PVN",IPBookVAT);
//    CheckBox(h3,v+=16,0,"Including VAT",InclVAT);
  //  CheckBox(h3,v+=16,0,"E-Invoice Exported",EInvExpFlag);
  Tile(6,150,false,"6",PriceList); vs = 20; h3=550;
  EditField(h1,v=vm,80,"Cenu lapa",Normal,PriceList,false,PLDefSClass);
  EditField(h1,v+=vs,80,"Atlaižu matrica",Normal,RebCode,false,0);
  //  EditField(h1,v+=vs,80,"Disc. %",ViewOnly,DiscPerc,false,0);
  //  EditField(h1,v+=vs,80,"Disc. Amount",ViewOnly,DiscSum,false,0);
  EditField(h1,v+=vs,80,"Sākotn. klients",ViewOnly,OrgCust,false,0);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Kredītkarte",Normal,CreditCard,false,CreditCardSClass);
  EditField(h1,v+=vs,80,"Autorizācija",Normal,AuthorizationCode,false,0);
  end;
  EditField(h1,v+=vs,80,"Debitori",Normal,ARAcc,false,AccSClass);
  EditField(h1,v+=vs,-20,"Komentārs",Normal,InvComment,false,0);
  if (HasSalesGroup) then begin
    EditField(h2=310,v=vm,80,"Aģentu grupa",ViewOnly,SalesGroup,true,0);
  EditField(h2,v+=vs,80,"Valoda",Normal,LangCode,false,LangSClass);
  end else begin
    EditField(h2,v=vm,80,"Valoda",Normal,LangCode,false,LangSClass);
  end;
  EditField(h2,v+=vs,80,"Komisija",Normal,Commision,true,0);
  EditField(h2,v+=vs,80,"Kopā ar komisiju",ViewOnly,SumIncCom,true,0);
  EditField(h2,v+=vs,80,"Procenti",Normal,IntCode,true,IntSClass);
  if (StandardHansa==false) then begin
  EditField(h2,v+=vs,80,"Oriģ. Nr.",Normal,CredInv,false,0);
  EditField(h3,v=vm,80,"Atgādin. līmenis",Normal,LastRemndr,false,0);
  end else begin
    EditField(h3,v=vm,80,"Oriģ. Nr.",Normal,CredInv,false,0);
    EditField(h3,v+=vs,80,"Atgādin. līmenis",Normal,LastRemndr,false,0);
  end;
  EditField(h3,v+=vs,80,"Pēd. atgādin. datums",Normal,LastRemDate,false,PasteCurDate);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Lojalitātes karte",Normal,LoyaltyCardNr,false,LoyaltyCardSClass);
  end;
  EnterSkip(Math);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Lojalitātes līmenis",ViewOnly,LCMLevel,false,LCMemberLevelSClass);
  EditField(h3,v+=vs,80,"Lojalitātes punkti",ViewOnly,Points,true,0);
  end;
  if (HasTREO) then begin
  EditField(h3,v+=vs,80,"TREO Nr.",Normal,TREONr,false,0);
  end;
  Tile(7,250,false,"7",Addr1); vs = 20;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Rēķina"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "adrese"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=vs),80,"Valsts",Normal,InvCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h2-89,v,232,"",ViewOnly,InvCountryName,false,0);
    h5 = -170;
    width = 150;
  end else begin
    h5 = -270;
    width = 135;
  end;
  EditField(h5,v,width,"Banka",Normal,BankCode,false,BankSClass);
  if (StandardHansa==false) then begin
    if (HasApprovals) then begin
      SoftEditField(h3=h+4,v=(vm+=40),123,"Apstipr. statuss",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
    end;
/*
//oldapprovals
  ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Apstiprinājuma statuss");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nav nepieciešams",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nav sākts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nav prasīts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Procesā",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Apstiprināts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Noraidīts",AcceptanceStatus);
*/
    v = VATZoneButtonsLabelslat(h3=290,v=vm,170,16);
  end else begin
    v = VATZoneButtonsLabelslat(h3=290,v=vm+40,170,16);
  end;
  EditField(h2=-170,v=vm,150,"Reģions",Normal,Region,false,RegionSClass);
  EditField(h2,v+=vs,150,"PVN reģ. Nr.",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"Reģ. Nr. 1",Normal,RegNr1,false,0);
  EditField(h2,v+=vs,150,"GLN",ViewOnly,RecipientGLN,false,0);
  EditField(h2,v+=vs,150,"Tālrunis",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Fakss",Normal,Fax,false,0);
  Tile(8,170,false,"8",ShipAddr0); vs = 20;
  if (StandardHansa==false) then begin
  EditField(h1,v=6,80,"Adreses kods",Normal,DelAddrCode,false,DelAddr3SClass);
  EditField(h1,v+=vs,-20,"Nosūtīšanas",Normal,ShipAddr0,false,0);
  end else begin
    EditField(h1,v=6,-20,"Nosūtīšanas",Normal,ShipAddr0,false,0);
  end;
  EditField(h1,v+=vs,-20,"adrese",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Valsts",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0);
  end;
  EditField(h2,v,150,"Piegādes GLN",ViewOnly,DelRecipientGLN,false,0);
  EnterSkip(InvDate);
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Rēķina statuss",'r',2,"IVInfoIVDsm");
    SpecialMenu("Artikula statuss",'I',0,"ItemStatusIVDsm");
    SpecialMenu("Atvērt grāmatojumu",'t',8,"OpenTRFromIV");
    SpecialMenu("Veidot kredītrēķinu",' ',20,"CreateCreditNoteIVDsm");
    SpecialMenu("Starpsumma",' ',12,"SubTotalLineIVDsm");
    SpecialMenu("Piesaistīt priekšapmaksu",' ',4,"ConnectToPrepayIVDsm");
/*not working yet
    SpecialMenu("Veidot e-pastu",'m',23,"CreateMailFromIVDsm");
*/
  end else begin
//    SpecialMenu("Item Status",'I',0,"ItemStatusIVDsm");
    if (HasCustomerStatusReport) then begin
  SpecialMenu("Klienta statuss",'e',0,"CUStatusIVDsm");
    end;
  SpecialMenu("Artikulu meklēšana",'f',1,"ItemSearchDsm");
  SpecialMenu("Rēķina statuss",'r',2,"IVInfoIVDsm");
  SpecialMenu("Pievienot vides nodokli",' ',19,"RepaIVsm");
  if (GuiType==kGuiiPhone) then begin
//      SpecialMenu("",' ',10,"SignIVDsm");//what is that ?
  end;
  SpecialMenu("Pārrēķināt Bāzes valūtā 1",' ',14,"SwitchToBase1IVDsm");
  SpecialMenu("Piesaistīt priekšapmaksu",' ',4,"ConnectToPrepayIVDsm");
  SpecialMenu("Pārrēķināt atlaidi",' ',11,"RecalcDiscountIVDsm");
  SpecialMenu("Pārrēķināt svaru un tilpumu",' ',10,"RecalcWeightIVDsm");
  SpecialMenu("Atjaunot valūtas cenu lapas artikulus",' ',5,"UpdatePricesIVDsm");
  SpecialMenu("Izdrukāt kases ieņ./izd.",' ',7,"PrintCashInOutIVDsm");
    if (HasLocalization("PRT")==false) then begin
  SpecialMenu("Drukāt faktūrrēķinu",' ',3,"PrintProformaIVDsm");
    end;
  if (StandardHansa==false) then begin
  SpecialMenu("Sūtīt uz fiskālo ierīci",' ',19,"PrintToFiscPrntIVDsm");
  SpecialMenu("Maksāt ar kredītkarti",' ',22,"CCPayIVDsm");
  SpecialMenu("Labot iemaksas",' ',24,"EditInstalmentIVDsm");
  end;
    if (HasLocalization("EST")) then begin
      SpecialMenu("Pārsūtīt e-rēķinu",' ',21,"ResendEstEIVDsm");
    end else begin
  SpecialMenu("Pārsūtīt e-rēķinu",' ',21,"ResendEIVDsm");
    end;
  if (HasLocalization("ARG")) then begin
      SpecialMenu("Sūtīt/pārsūtīt Argentīnas e-rēķinu",'n',17,"SendArgEInvIVDsm");
    SpecialMenu("Atjaunot CAE/CAEA",'',17,"ConsultarArgEInvIVDsm");
  end;
  if (HasLocalization("MEX")) then begin
      SpecialMenu("Send Mexican E-Invoice",'e',17,"SendMexEInvIVDsm");
    end;
    if (HasLocalization("BRA")) then begin
    SpecialMenu("Sūtīt/pārsūtīt Brazīlijas e-rēķinu",' ',27,"SendBraEInvIVDsm");
      SpecialMenu("Get Bank Receipt",' ',28,"GetBankReceiptDsm"); //!!TRANSLATE
    end;
    if (HasLocalization("FIN")) then begin
      SpecialMenu("Export Finvoice",' ',28,"ExportFinvoiceIVDsm");
  end;
    if (HasLocalization("USA")) then begin
      SpecialMenu("Iegūt nodokļu likmes",' ',0,"IVGetTaxRatesDsm");
    end;

  SpecialMenu("Atvērt grāmatojumu",'t',8,"OpenTRFromIV");
    if (StandardHansa==false) then begin
      SpecialMenu("Vadītāja atlaides autorizācija",' ',24,"MgrsDiscOverrideIVDsm");
      if (HasTaxMatrix) then begin
        SpecialMenu("Atvērt PVN matricu",' ',25,"TestVatMatrixIVDsm");
      end;
    end;
    if (HasApprovals) then begin
      SpecialMenu("Nosūtīt apstiprināšanai",' ',6,"IVSendforAcceptanceIVDsm");
      SpecialMenu("Atcelt apstiprināšanas pieprasījumu",' ',2,"CancelApprovalRequestDsm");
    end;
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModCRM) then begin
//      SpecialMenu("Activity",'c',9,"CreateActFromIVDsm");
  end;
  SpecialMenu("Kases ieņēmumu",' ',1,"DoCLInFromIVD");
  SpecialMenu("Kredītrēķinu",' ',20,"CreateCreditNoteIVDsm");
  if (StandardHansa==false) then begin
  SpecialMenu("Kredīta pārvaldības līgumu",' ',25,"CreateCredManIVsm");
  end;
  SpecialMenu("Līgumu",' ',13,"COFromIVDsm");
  if (StandardHansa==false) then begin
      if (HasLocalization("PRT")==false) then begin
  SpecialMenu("Korekcijas rēķinu",' ',16,"CorrectionIVsm");
      end;
  SpecialMenu("Debeta rēķinu",' ',20,"CreateDebitNoteIVDsm");
  SpecialMenu("EDI rēķinu",' ',9,"DoEDIInvFromIVD");
  end;
  SpecialMenu("E-pastu",'m',23,"CreateMailFromIVDsm");
  if (HasLocalization("UKR")) then begin
    SpecialMenu("Pirmo notikumu",' ',18,"FirstEventIVDsm");
  end;
  if (StandardHansa==false) then begin
    SpecialMenu("Iemaksu maksājumus",' ',6,"CreateInstalmentsIVDsm");
      if (HasLocalization("HRV,POL,RUS,SRB,SVN,UKR")) then begin
      SpecialMenu("Realizācijas PVN korekciju",' ',17,"VATCorrectionIVsm");
    end;

//  SpecialMenu("GSXAutoEnrollmentIVDsm",'w',26,"GSXAutoEnrollmentIVDsm");

//  SpecialMenu("TESTSendArgEInvoiceFECAESolicitar",' ',25,"TESTSendArgEInvoiceFECAESolicitar");
//  SpecialMenu("Test Mex E-Invoices",'1',0,"TestMexEInvoices");
  end;
    SpecialMenu("Klientu",' ',0,"AddCustomerIVDsm");
    SpecialMenu("Artikulu",' ',0,"AddItemIVDsm");
  end;

  EndWindow;
end;

window BLT_EDISetTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs;
  v = 6; vs = 20; h = 150; h2=200;

  WindowBegin("EDI uzstādījumi",BLT_EDISetTClass,CGSbl,ItemSettingType);
  Sizeable(-1,-1,-1,0);
  SetWRect(20,80,480,320);
  SetBlid(BLT_EDISetBlock);
  EditField(h,v=10,-20,"EDI eksporta mape",Normal,ExpFolder,false,0);
  EditField(h,v+=vs,-20,"EDI importa mape",Normal,ImpFolder,false,0);
  EditField(h,v+=vs,-20,"Sērijas komentārs",Normal,SerComment,false,0);
  EditField(h,v+=vs,100,"EDI pasūtījuma klase",Normal,OrderClass,false,OrderClassSClass);
  CheckBox(h,v+=vs,0,"Ignore best before dates with import",DoNotCheckBesfBef);
  StaticText(h=50,v+=39,"Automatic sales order imports",false);
  CheckBox(h,v+=12,0,"Monday",MonFlag);
  EditField(h2,v,70,"Time",Normal,MonTime,false,0);
  CheckBox(h,v+=vs,0,"Tuesday",TueFlag);
  EditField(h2,v,70,"Time",Normal,TueTime,false,0);
  CheckBox(h,v+=vs,0,"Wednesday",WedFlag);
  EditField(h2,v,70,"Time",Normal,WedTime,false,0);
  CheckBox(h,v+=vs,0,"Thursday",ThuFlag);
  EditField(h2,v,70,"Time",Normal,ThuTime,false,0);
  CheckBox(h,v+=vs,0,"Friday",FriFlag);
  EditField(h2,v,70,"Time",Normal,FriTime,false,0);
  CheckBox(h,v+=vs,0,"Saturday",SatFlag);
  EditField(h2,v,70,"Time",Normal,SatTime,false,0);
  CheckBox(h,v+=vs,0,"Sunday",SunFlag);
  EditField(h2,v,70,"Time",Normal,SunTime,false,0);
  EndWindow;

end;

window IVLClass:8
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real pos;
  Boolean acptf;

  WindowBegin("Rēķini",IVLClass,CGmlist,-);
  pos = 920;
  acptf = AcceptanceStatusColumnTest("IVVc");
  if (acptf) then begin
    pos = pos + 40;
  end;
  SetWRect(20,80,pos,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(IVDClass);
  UseView(IVVc);
  FormName(PrintIVL);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(79,79,"Gr.",OKFlag,false,OKFlag);
  RlColKey(111,111,"EDI",SentToEDI,false,SentToEDI);
  RlColKey(141,141,"Rēķ. dat.",InvDate,false,InvDate);
  RlColKey(221,221,"Pieg. dat.",ServiceDelDate,false,ServiceDelDate);
  RlColKey(291,291,"Pava_dz. Nr.",OfficialSerNr,false,OfficialSerNr);
  RlColKey(381,381,"Pasū_t. Nr.",OrderNr,false,OrderNr);
  pos = 451;
  RlColKey(pos,pos,"Piegādes adrese",ShipAddr1,false,ShipAddr1); pos = pos + 150; //EBS
  RlColKey(pos,pos,"Klients",CustCode,false,CustCode); pos = pos + 60;
  RlColKey(pos,pos,"Nosaukums",Addr0,false,Name);
  if (acptf) then begin
    CalculatedColumn(-230,-230,"Apst.","IVLClassAcceptanceStatus",false);
  end;
  CalculatedColumn(-190,-190,"Brutto","IVLClassCalcBruttoWeight",true);
  RlColKey(-130,-130,"Kopā",Sum1,true,Sum1);
  RlCol(-60,-60,"",CredMark,true);
  if (HasMultiCurrency or HasBase2) then begin
    RlCol(-40,-40,"Val.",CurncyCode,true);
  end;
  RlCol(-1,-1,"",Invalid,true);
  SearchField("Meklēt");
  if (HasLimitedAccess) then begin
    BrowseSubsetButton(-40,-15);
  end;
  SpecialMenu("Grāmatot",'G',0,"OKIVLsm");
  SpecialMenu("Drukāt faktūrrēķinus",' ',1,"PrintIVLsm");
  SpecialMenu("Rēķina statuss",'r',2,"IVInfoIVLsm");
  EndWindow;

end;

window BLT_ProdLabelsRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;
  WindowBegin("Ražojumi",ProdOrderRClass,CGRcW,RcType);
  SetWRect(20,80,400,148);
  EditFieldTL(150,v=6,153,"Ražojums",M4Str,Normal,30,f1,false,0);
  EndWindow;
end;

window ORDClass:2
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs,h5,flipnr,width;
  string 255 label;
  Integer rn;

  WindowBegin("Klienta pasūtījums",ORDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(ORVc);
  ActiveFieldOnNew("CustCode");
  CommunicateButton;
  Tile(0,74,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Klients",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Nosaukums",Normal,Addr0,false,0);
  if (StandardHansa==false) then begin
  EditField(h,vm=(v+=20),135,"Pavadz. Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  CheckBox(h4=-100,v,0,"Apst.",OKFlag);
  end else begin
    CheckBox(h4=-100,vm=(v+=20),0,"Apst.",OKFlag);
  end;
//  CheckBox(h+120,vm,0,"Closed",Closed);
//  CheckBox(h+240,vm,0,"Reserved",Reserved);
  TileButton(1,"Nosacījumi");
  TileButton(2,"Artikuli");
  TileButton(3,"Valūta");
  TileButton(4,"Nosūt. nos.");
  TileButton(5,"Cenu lapa");
  TileButton(6,"Rēķ. adrese");
  TileButton(7,"Nos. adrese");
  Tile(1,110,false,"1",OrdDate);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Datums",Normal,OrdDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Samaksas termiņš",Normal,PayDeal,false,PDSClass);
  EditField(h1,v+=vs,82,"Plānots nosūtīt",Normal,PlanShip,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Izsūt. datums",Normal,DespatchDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Izsūt. laiks",Normal,DespatchTime,false,PasteCurTime);
  EditField(h2,v=vm,135,"Mūsu kontaktp.",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Kl. kontaktp.",Normal,CustContact,false,ContactSClass);
  EditField(h2,v+=vs,135,"Objekti",Normal,Objects,false,ObjSClass);
  EditField(h2,v+=vs,135,"Atsauce",Normal,RefStr,false,0);
  EditField(h2,v+=vs,135,"Kl. pas. Nr.",Normal,CustOrdNr,false,0);
  EditField(h3,v=vm,80,"Aģents",Normal,SalesMan,false,UserSClass);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Projekts",Normal,PRCode,false,PRSClass);
  end;
  EditField(h3,v+=vs,80,"Pasūtījuma veids",Normal,OrderClass,false,OrderClassSClass);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Pasūtījuma tips",Normal,OrderType,false,SetSClass);
  EditField(h3,v+=vs,80,"Realiz. līgums",Normal,ORCONr,false,ORCOSClass);
  end;
  CheckBox(h4,v=6,0,"Slēgts",Closed);
  CheckBox(h4,v+=16,0,"Rezervēts",Reserved);
  CheckBox(h4,v+=16,0,"Importēts",BLT_Importf); //EBS
  CheckBox(h4,v+=16,0,"Eksportēts",BLT_Exportf); //EBS
  CheckBox(h4,v+=16,0,"Sent to log.",BLT_SentToLogistics); //EBS
  EnterSkip(Math);
  Tile(2,220,true,"2",Math);
  //  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(55,-41,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
  if (UseTaxTemplatesforTaxCalc==false) then begin
  if (UserCanAction("ViewCostPrice",true)) then begin
    EditField(160,-41,70,"BP %",Normal,GPProc,true,0);
    EditField(160,-21,70,"Kopā BP",ViewOnly,TotGP,true,0);
  end;
    if (HasLocalization("GBR,LTU,POL")) then begin
      EditField(310,-41,50,"Reversais PVN",ViewOnly,RvrsVAT,true,0);
    end else begin
  EditField(290,-41,70,"Nod.2",ViewOnly,TAX2Sum,true,0);
  EditField(290,-21,70,"Atsk.nod.",ViewOnly,TAX1Sum,true,0);
    end;
  EditField(410,-41,100,"PVN",ViewOnly ,Sum3,true,0);
  end else begin
    if (UserCanAction("ViewCostPrice",true)) then begin
      EditField(290,-41,70,"BP %",Normal,GPProc,true,0);
      EditField(290,-21,70,"Kopā BP",ViewOnly,TotGP,true,0);
    end;
    EditField(410,-41,100,"Nod.",ViewOnly ,Sum3,true,0);
  end;
  EditField(410,-21,100,"Pamats.",ViewOnly,BaseSum4,true,0);
  EditField(-150,-41,100,"Summa",ViewOnly ,Sum1,true,0);
  EditField(-150,-21,100,"Kopā",ViewOnly ,Sum4,true,0);
  v = 24;
  MatrixBegin(3,v,-50,-49,-,200);
  MatTypedRow(stp);
  flipnr = 0;
  Flip(flipnr); flipnr = flipnr + 1;
  MatText(t=9,32,"Starpsumma",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-80,"Summa",0,-1,ViewOnly,0,Sum,true,0);
  MatText(t=17,32,"Virsraksts",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatCol(t=1,32,"Artikuls",0,ArtCode,false,BLT_INSClass); //EBS added
//  MatCol(t,94,"Veids",0,VARList,true,VARSClass);
//  MatCol(t,144,"Daudz.",0,Quant,true,0);
  t = 1;
  if (HasVarieties) then begin
  MatCol(t,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Daudz.",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Artikuls",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Qty",0,Quant,true,0);
  if (HasVarieties) then begin
  MatCol(t,94,"Daudz.",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Daudz.",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatText(t=10,32,"Šī un visas nākamās rindas nebūs redzamas izdrukā",false);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Realiz. nodoklis",true);
  MatCol(t,132,"",0,Region,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,0);
  MatCol(t,452,"",0,Spec,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
//  MatCol(t=1,194,"Nosaukums",0,Spec,false,0);
  t = 1;
  MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-345,"Min.der.term.",0,MinBestBefore,false,PasteCurDate);  // EBS
  MatCol(t,-270,"Max.der.term.",0,MaxBestBefore,false,PasteCurDate);  // EBS
  MatCol(t,-195,"Vien. cena",0,Price,true,0);  // use PL2SClass for filtered datalist
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Summa",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Nosaukums",0,Spec,false,0);
  MatCol(t,-235,"Vien. cena",0,Price,true,0);  // use PL2SClass for filtered datalist
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Summa",0,Sum,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Kl. artikula Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-224,"Konts",0,SalesAcc,false,AccSClass);
    MatCol(t,-164,"Objekts",0,Objects,false,ObjSClass);
    MatCol(t,-70,"PVN kd",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Kl. artikula Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-184,"Konts",0,SalesAcc,false,AccSClass);
    MatCol(t,-124,"Objekts",0,Objects,false,ObjSClass);
    if (HasLocalization("GBR,LTU,POL")) then begin
      MatCol(t,-60,"PVN-K",0,VATCode,false,VATCodeSClass);
      MatCol(t,-30,"Rvrs",0,RvrsVATCode,false,VATCodeSClass);
    end else begin
    MatCol(t,-30,"PVN kd",0,VATCode,false,VATCodeSClass);
    end;
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Nosaukums",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Kl. artikula Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-224,"Konts",0,SalesAcc,false,AccSClass);
    MatCol(t,-164,"Objekts",0,Objects,false,ObjSClass);
    MatCol(t,-70,"PVN kd",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Kl. artikula Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-184,"Konts",0,SalesAcc,false,AccSClass);
    MatCol(t,-124,"Objekts",0,Objects,false,ObjSClass);
    if (HasLocalization("GBR,LTU,POL")) then begin
      MatCol(t,-60,"PVN-K",0,VATCode,false,VATCodeSClass);
      MatCol(t,-30,"Rvrs",0,RvrsVATCode,false,VATCodeSClass);
    end else begin
    MatCol(t,-30,"PVN kd",0,VATCode,false,VATCodeSClass);
    end;
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,344,"Pasūt. tips",0,OrderType,false,SetSClass);
   if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-245,"Vien. cena",0,Price,true,0); // use PL2SClass for filtered datalist
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Pašizmaksa",0,BasePrice,true,0);
    MatCol(t,-70,"BP",0,rowGP,true,0);
  end else begin
    MatCol(t,-235,"Vien. cena",0,Price,true,0); // use PL2SClass for filtered datalist
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Summa",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Nosaukums",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-245,"Vien. cena",0,Price,true,0); // use PL2SClass for filtered datalist
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Pašizmaksa",0,BasePrice,true,0);
    MatCol(t,-70,"BP",0,rowGP,true,0);
  end else begin
    MatCol(t,-235,"Vien. cena",0,Price,true,0); // use PL2SClass for filtered datalist
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Summa",0,Sum,true,0);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-300,"Aģenti",0,Salesmen,false,UserSClass);
  MatCol(t,-236,"Nos. 1",0,Shipd1,true,0);
  MatCol(t,-184,"Nos. 2",0,Shipd2,true,0);
  MatCol(t,-132,"Izr. rēķ.",0,Invd,true,0);
  MatCol(t,-80,"Specifikācija",0,Recepy,false,RecSClass);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Nos.",0,Spec,false,0);
  MatCol(t,-290,"Nosūtīts",0,Shipd1,true,0);
  MatCol(t,-220,"Nos.kopā",0,Shipd2,true,0);
  MatCol(t,-150,"Izr. rēķins",0,Invd,true,0);
  MatCol(t,-80,"Specifikācija",0,Recepy,false,RecSClass);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-290,"Sēr. Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Plān. nos.",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Cenas faktors",0,PriceFactor,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Nosaukums",0,Spec,false,0);
  MatCol(t,-290,"Sēr. Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Plān. nos.",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Cenas faktors",0,PriceFactor,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-315,"Nos.pavadzīme",0,ShipNote,false,0);
  MatCol(t,-210,"Noliktava",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-145,"Vieta",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Avots",0,Source,true,SourceSClass);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Nosaukums",0,Spec,false,0);
  MatCol(t,-315,"Nos.pavadzīme",0,ShipNote,false,0);
  MatCol(t,-210,"Noliktava",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-145,"Vieta",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Avots",0,Source,true,SourceSClass);
  if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,144,"Saņ. dat.",0,PickingDate,false,PasteCurDate);
  MatCol(t,-390,"Saņ. laiks",0,PickingTime,false,PasteCurTime);
  MatCol(t,-320,"Iekr. dat.",0,InloadingDate,true,PasteCurDate);
  MatCol(t,-230,"Iekr. laiks",0,InloadingTime,true,PasteCurTime);
  MatCol(t,-160,"Izv. dat.",0,DespatchRowDate,true,PasteCurDate);
  MatCol(t,-70,"Izv. laiks",0,DespatchRowTime,true,PasteCurTime);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Saņ. dat.",0,PickingDate,false,PasteCurDate);
  MatCol(t,-390,"Saņ. laiks",0,PickingTime,false,PasteCurTime);
  MatCol(t,-320,"Iekr. dat.",0,InloadingDate,true,PasteCurDate);
  MatCol(t,-230,"Iekr. laiks",0,InloadingTime,true,PasteCurTime);
  MatCol(t,-160,"Izv. dat.",0,DespatchRowDate,true,PasteCurDate);
  MatCol(t,-70,"Izv. laiks",0,DespatchRowTime,true,PasteCurTime);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
    MatCol(t,144,"Apraksts",0,Spec,false,0);
  MatCol(t,-315,"Vienība",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Vien.daudz.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plat.",0,UnitXval,true,0);
  MatCol(t,-160,"Augst.",0,UnitYval,true,0);
  MatCol(t,-120,"Biez.",0,UnitZval,true,0);
  MatCol(t,-80,"Vien.cena ar koef.",0,UnitFactPrice,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Nosaukums",0,Spec,false,0);
  MatCol(t,-315,"Vienība",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Vien.daudz.",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plat.",0,UnitXval,true,0);
  MatCol(t,-160,"Augst.",0,UnitYval,true,0);
  MatCol(t,-120,"Biez.",0,UnitZval,true,0);
  MatCol(t,-80,"Vien.cena ar koef.",0,UnitFactPrice,true,0);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Artikula statuss",'I','I',0,"ItemStatusORDsm");
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Pēdējās pārdošanas cenas",' ',' ',0,"ORLastSPrsm");
  end;
  RowMenuItem(0,"Virsraksta līnija",' ',' ',0,"ORAddHeaderLine");
  RowMenuItem(0,"Slēptā rinda",' ',' ',0,"ORAddHidLine");
  RowMenuItem(0,"Starpsumma",' ',' ',0,"SubtotalORDsm");
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Vadītāja atlaides autorizācija",' ',' ',0,"MgrsDiscOverrideORDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  if (StandardHansa==false) then begin
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,8,"H");
  end;
  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Valūta",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+vs,50,"Bāzes valūta 1",Normal,BaseRate1,true,0);
  EditField(h,v+(vs*2),50,"Bāzes valūta 2",Normal,BaseRate2,true,0);
  EditField(h2=295,v,50,"Kurss",Normal,FrRate,true,0);
  RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Bāzes valūta 1",false);
  RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Bāzes valūta 2",false);
  Tile(4,110,false,"4",ShipDeal);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Nosūt. nosac.",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Nosūt. veids",Normal,ShipMode,false,DMSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Maršruts",Normal,Sorting,false,DelRouteSClass);
  end;
  EditField(h1,v+=vs,80,"Noliktava",Normal,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Filiāle",Normal,BranchID,false,AllCUSClass);
  end;
  EditField(h2,v=vm,80,"Kopējais daudz.",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Kopējais svars",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Kopējais tilpums",ViewOnly,TotVolume,true,0);
  EditField(h2,v+=vs,80,"Krava",Normal,FrPrice,true,0);
  EditField(h3,v,80,"Plan. del. date",ViewOnly,PlanShipDate,false,0); //EBS
  EditField(h2,v+=vs,80,"Intrastat kods",Normal,IntrastatTransCode,true,IntrastatTransCodeSClass);
  if (StandardHansa==false) then begin
  EditField(h3,v,80,"Piegādes PVN kods",Normal,FrVATCode,true,VATCodeSClass);
  end;
  CheckBox(473,v=vm,0,"Rēķins pirms nosūtīšanas",InvBeforeShip);
  CheckBox(473,v+=16,0,"Uzstādīt nosūtītās preces daudzumu uz nulli",SHShipSetToZero);
  Tile(5,130,false,"5",PriceList);
  h3 = 530;
  EditField(h1,v=vm,80,"Cenu lapa",Normal,PriceList,false,PLDefSClass);
  EditField(h1,v+=vs,80,"Atlaižu matrica",ViewOnly,RebCode,false,0);
//  EditField(h2,v+=vs,80,"Disc %",ViewOnly,DiscPerc,false,0);
//  EditField(h2,v+=vs,80,"Disc Amnt",ViewOnly,DiscSum,false,0);
  EditField(h1,v+=vs,80,"Maksātājs",Normal,InvoiceToCode,false,CUSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Kredītkarte",Normal,CreditCard,false,CreditCardSClass);
  EditField(h1,v+=vs,80,"",Normal,AuthorizationCode,false,0);
  end;
  EditField(h1,v+=vs,-20,"Komentārs",Normal,Comment,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment4,false,0);
  v = vm;
  if (HasSalesGroup) then begin
    EditField(h2,v,80,"Aģentu grupa",Normal,SalesGroup,false,SalesGroupSClass);
    v = v + vs;
  end;
  EditField(h2,v,80,"Valoda",Normal,LangCode,false,LangSClass);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Komisija",Normal,Commision,true,0);
    EditField(h2,v+=vs,80,"Sum. ar komisiju",ViewOnly,SumIncCom,true,0);
  end;
  if (HasTREO) then begin
  EditField(h3,v=vm,80,"TREO Nr.",Normal,TREONr,false,0);
  EditField(h3,v+=vs,80,"TREO derīgs līdz",Normal,TREOExpDate,false,PasteCurDate);
  end;
  Tile(6,250,false,"6",Addr1);
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Rēķina"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "adrese"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=vs),80,"Valsts",Normal,InvCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h2-89,v,232,"",ViewOnly,InvCountryName,false,0);
    h5 = -170;
    width = 150;
  end else begin
    h5 = -270;
    width = 135;
  end;
  EditField(h5,v,width,"Banka",Normal,BankCode,false,BankSClass);
  if (HasApprovals) then begin
    SoftEditField(h3=h+4,v=(vm+=40),123,"Apstipr. statuss",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
/*
  ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Apstiprinājuma statuss");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nav nepieciešams",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nav sākts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nav prasīts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Procesā",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Apstiprināts",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Noraidīts",AcceptanceStatus);
*/
    v = VATZoneButtonsLabelslat(h3=290,v=vm,170,16);
  end else begin
    v = VATZoneButtonsLabelslat(h3=290,v=vm+20,170,16);
  end;
  EditField(h2=-170,v=vm,150,"Reģions",Normal,Region,false,RegionSClass);
  EditField(h2,v+=vs,150,"PVN reģ. Nr.",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"GLN",ViewOnly,RecipientGLN,false,0);
  EditField(h2,v+=vs,150,"Tālrunis",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Fakss",Normal,Fax,false,0);
  // Tile(7,170,false,"7",ShipAddr0);
  if (StandardHansa==false) then begin
    Tile(7,170,false,"7",DelAddrCode);
  EditField(h1,v=6,80,"Adreses kods",Normal,DelAddrCode,false,DelAddr3SClass);
  EditField(h1,v+=vs,-20,"Nosūtīšanas",Normal,ShipAddr0,false,0);
  end else begin
    Tile(7,170,false,"7",ShipAddr0);
    EditField(h1,v=6,-20,"Nosūtīšanas",Normal,ShipAddr0,false,0);
  end;
  EditField(h1,v+=vs,-20,"adrese",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Valsts",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0);
    h5 = -170;
    width = -20;
  end;
  EditField(h2,v,150,"Piegādes GLN",ViewOnly,DelRecipientGLN,false,0);
//  EditField(h1+200,v,80,"PVN kods",Normal,CustVATCode,false,0);
  EnterSkip(OrdDate);
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Pasūtījumu statuss",'r',5,"ORInfoRnORDsm");
    SpecialMenu("Artikula statuss",'I',2,"ItemStatusORDsm");
    SpecialMenu("Veidot nosūtīšanu",'L',0,"SHFromORDsm");
    SpecialMenu("Veidot rēķinu",'F',1,"IVFromORDsm");
    SpecialMenu("Starpsumma",' ',14,"SubtotalORDsm");
/*
email not working yet
    SpecialMenu("Create E-Mail",'m',11,"CreateMailFromORDsm");
*/
  end else begin
  SpecialMenu("Pārrēķināt atlaidi",' ',11,"RecalcDiscountORDsm");
  if (StandardHansa==false) then begin
  SpecialMenu("Pārrēķināt svaru un tilpumu",' ',10,"RecalculateWeightORDsm");
  end;
  if (HasLocalization("USA")) then begin
    SpecialMenu("Iegūt nodokļu likmes",' ',0,"ORGetTaxRatesDsm");
  end;

  SpecialMenu("Atjaunot valūtas cenu lapas artikulus",' ',7,"UpdatePricesORDsm");
  SpecialMenu("Artikulu meklēšana",'f',1,"ItemSearchDsm");
  SpecialMenu("Pasūtījumu statuss",'r',5,"ORInfoRnORDsm");
  if (HasTaxMatrix) then begin
    SpecialMenu("Atvērt nodokļu matricu",' ',25,"OpenVatMatrixORDsm");
  end;
  if (StandardHansa==false) then begin
  SpecialMenu("Drukāt iekšējos pasūtījumus",' ',4,"Or2FormORDsm");
  end;
  SpecialMenu("Rezervācijas",' ',15,"OrderReservORDsm");
  if (GuiType==kGuiiPhone) then begin
    SpecialMenu("Paraksts",' ',10,"SignORDsm");
  end;

  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
//  SpecialMenu("Activity",'c',9,"CreateActFromORDsm");
  SpecialMenu("Nosūtīšanu",'L',0,"SHFromORDsm");
  if (HasDownpayments) then begin
  SpecialMenu("Priekšapmaksas rēķinu",' ',3,"DownPayFromORDsm");
  end;
  if (HaseMail) then begin
  SpecialMenu("E-pastu",'m',11,"CreateMailFromORDsm");
  end;
  SpecialMenu("Rēķinu",'F',1,"IVFromORDsm");
  if (HasModTS) then begin
  SpecialMenu("Projektu",' ',9,"CreatePRFromORDsm");
  SpecialMenu("Projektu budžetu",' ',10,"CreateTBBUFromORDsm");
  end;
  if (HasModPO) then begin
    SpecialMenu("Pasūtījumu",' ',4,"POFromORDsm");
  end;
  SpecialMenu("Atgriezto preci",'B',6,"RetFromORsm");
  SpecialMenu("Noliktavas kustību",' ',8,"StockMovFromORDsm");
  if (HasApprovals) then begin
    SpecialMenu("Nosūtīt apstiprināšanai",' ',6,"ORSendforAcceptanceORDsm");
    SpecialMenu("Atcelt apstiprināšanas pieprasījumu",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecialMenu("Klientu",' ',0,"AddCustomerORDsm");
  SpecialMenu("Artikulu",' ',0,"AddItemORDsm");
  end;
  EndWindow;
end;

window ORLClass:3
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  Integer pos,rn;

  WindowBegin("Klientu pasūtījumi",ORLClass,CGmlist,-);
  SpawnClass(ORDClass);
  SetWRect(20,80,980,298); //EBS edit
  Sizeable(-1,-1,0,0);
  UseView(ORVc);
  FormName(PrintORL);
  RecordList(4,17,-21,-39);
    RlColKey(4,4,"N_r.",SerNr,false,SerNr);
  RlColKey(79,79,"Apst.",OKFlag,false,OKFlag);
  pos = 111;
  if (HasModIN) then begin
    RlColKey(pos,pos,"Nos.",ShipMark,false,ShipFlag);
    pos = pos + 32;
  end;
  if (HasModSL) then begin
    RlColKey(pos,pos,"Rēķ.",InvMark,false,InvFlag);
    pos = pos + 32;
  end;
  RlCol(pos,pos,"Sl.",Closed,false);
  pos = pos + 32;
  //EBS -->
  RlCol(pos,pos,"Imp.",BLT_Importf,false);
  pos = pos + 32;
  RlCol(pos,pos,"Eks.",BLT_Exportf,false);
  pos = pos + 32;
  //EBS <--
  RlColKey(pos,pos,"Pasūt. dat.",OrdDate,false,OrdDate);
  pos = pos + 80;
  RlColKey(pos,pos,"Plān. nos.",PlanShipDate,false,PlanShipDate);
  pos = pos + 80;
  if (HasMultiLocations) then begin
    RlCol   (pos,pos,"Noliktava",Location,false);
    pos = pos + 60;
  end;
  RlColKey(pos,pos,"Kl. pas. Nr.",CustOrdNr,false,CustOrdNr);
  pos = pos + 80;
  RlColKey(pos,pos,"Klients",CustCode,false,CustCode);
  pos = pos + 60;
  RlColKey(pos,pos,"Nosaukums",Addr0,false,Name);
  if (IsEnterprise) then begin
    if (AcceptanceStatusColumnTest("ORVc")) then begin
      CalculatedColumn(-240,-240,"Apst.","ORLClassAcceptanceStatus",false);
    end;
    RlColKey(-200,-200,"Klase",OrderClass,false,OrderClass);
    RlColKey(-155,-155,"Kopā",Sum4,true,Sum4);
    RlCol(-75,-75,"Apmaksāts",DownPaySent,true);
  end else begin
    RlColKey(-55,-55,"Kopā",Sum4,true,Sum4);
  end;
  if (HasLimitedAccess) then begin
  BrowseSubsetButton(-40,-15);
  end;
  SearchField("Meklē");
  if (GuiType==kGuiMetro) then begin
    rn = 0;
    RowMenuBegin("");
    if (HasModIN) then begin
      RowMenuItem(rn,"Veidot nosūtīšanu",'L','L',4300,"SHFromORLsm"); rn = rn + 1;
    end;
    RowMenuItem(rn,"Veidot rēķinu",'L','L',4300,"IVFromORLsm"); rn = rn + 1;
    if (HasDownpayments) then begin
      RowMenuItem(rn,"Veidot priekšapmaksas rēķinu",'o','o',4300,"DownPayFromORLsm"); rn = rn + 1;
    end;
    RowMenuItem(rn,"Pasūtījuma statuss",'r','r',4300,"ORStatusORLsm"); rn = rn + 1;
    if (HasModPO) then begin
      RowMenuItem(rn,"Veidot pasūtījumu",' ',' ',4300,"POFromORLsm"); rn = rn + 1;
    end;
    if (HasModCRM) then begin
      RowMenuItem(rn,"Veidot aktivitāti",'c','c',4300,"ActFromORLsm"); rn = rn + 1;
    end;
    if (IsEnterprise) then begin
      RowMenuItem(rn,"Rēķins jau izrakstīts",' ',' ',4300,"ORToInvORLsm"); rn = rn + 1;
    end;
    EndRowMenu;
  end else begin
    SpecialMenu("Pasūtījuma statuss",'r',3,"ORStatusORLsm");
    if (IsEnterprise) then begin
      SpecialMenu("Rēķins jau izrakstīts",' ',6,"ORToInvORLsm");
    end;
    SpecialMenu("Importēt EDI pasūtījumus",'',5,"EBS_ImportEDIOrderssm");
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModIN) then begin
  SpecialMenu("Nosūtīšanu",'L',0,"SHFromORLsm");
  end;
  SpecialMenu("Rēķinu",'F',1,"IVFromORLsm");
    if (HasDownpayments) then begin
  SpecialMenu("Priekšapmaksas rēķinu",'o',2,"DownPayFromORLsm");
  end;
  if (HasModPO) then begin
  SpecialMenu("Pasūtījumu",' ',4,"POFromORLsm");
  end;
  if (HasModCRM) then begin
      SpecialMenu("Aktivitāti",'c',5,"ActFromORLsm");
    end;
  end;
  EndWindow;
end;

window BLT_CompQtyRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Daudzumu salīdzinājums",BLT_CompQtyRClass,CGRcW,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periods");
    EditFieldTL(h,v+=20,100,"Nosūtīšanas",M4Str,Normal,30,f1,false,SHSClass);
  EndWindow;

return;
end;

window PLLClass:2
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Cenas",PLLClass,CGmlist,-);
  SpawnClass(PLDClass);
  SetWRect(64,80,709,320);
  Sizeable(-1,-1,0,0);
  UseView(PLVc);
  RecordList(4,17,-21,-39);
    RlColKey(4,2,"Artikuls",ArtCode,false,ArtCode);
    RlColKey(100,100, "Cenu lapa",PLCode,false,PLCode);
  if (HasStandardCRM) then begin
    RlCol(180,180,"Klients",CustCode,false);
    RlColKey(270,270, "Komentārs",Comment,false,Comment);
  end else begin
    RlColKey(180,180, "Kom.",Comment,false,Comment);
  end;
    RlCol(-290,-290,"Cena",ExVatPrice,false);
    RlColKey(-220,-220,"Akcija no",CampStartDate,false,CampStartDate); //EBS
    RlColKey(-140,-140,"Akcija līdz",CampEndDate,false,CampEndDate); //EBS
    RlColKey(-60,-60,"Akc. cena",CampPrice,true,CampPrice); //EBS
  SearchField("Meklēt");
  EndWindow;
end;

window ArtRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs;
  WindowBegin("Veidot Artikulu pārskatu",ArtRClass,CGRcW,RcType);
  SetWRect(20,80,415,310);
  v = 6; vs = 20; h = 120;
  EditFieldTL(h,v, 150,"Artikuls",   M4UStr,Normal,50,f1,false,INSClass);
  if (HasItemGroups) and (HasModSL) then begin
  EditFieldTL(h,v+=vs, 150,"Grupa",   M4UStr,Normal,11,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
  EditFieldTL(h,v+=vs, 150,"Artikulu klasif.", M4UStr,Normal,60,f4,false,DISClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs, 85,"Noliktavas",M4UStr,Normal,30,f5,false,LocationSClass);
  end;
  EditFieldTL(h,v+=vs, 85,"Valoda",M4Code,Normal,30,Stext,false,LangSClass);
  if (HasAdvancedPricing) then begin
    EditFieldTL(h,v+=vs,100,"Cenu lapa",M4Str,Normal,5,FirstAcc,false,PLDefSClass);
  end;
  if (IsEnterprise) then begin
    h = 30;
  end;
  ButtonFrame(h,vm=(v+=41),123,3,"Kārtot pēc");
  RadioButton(h,v,0,0,"Artikuliem",flags[2]);
  if (HasItemGroups) and (HasModSL) then begin
  RadioButton(h,v+=16,1,0,"Grupām",flags[2]);
  end;
  RadioButton(h,v+=16,2,0,"Nosaukumiem",flags[2]);
  EndFrame;
  if (IsEnterprise) then begin
  ButtonFrame(h,v+=41,123,4,"Rādīt");
  CheckBox(h,v,0,"Vienkāršos",flags[3]);
  CheckBox(h,v+=16,0,"Noliktavas",flags[4]);
  CheckBox(h,v+=16,0,"Strukturētos",flags[5]);
    if (StandardHansa==false) then begin
  CheckBox(h,v+=16,0,"Servisa",flags[6]);
    end;
    EndFrame;
  CheckBox(h2=230,v=vm,0,"Rādīt sērijas Nr.",flags[7]);
  CheckBox(h2,v+=16,0,"Rādīt slēgtos artikulus",flags[10]);
  end else begin
  CheckBox(h,v+=32,0,"Rādīt slēgtos artikulus",flags[10]);
  end;
  EndWindow;
end;

window CustPSDClass:3
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vm,vs,vs2;
  Integer tilenr;

  WindowBegin("Klienta statusa atskaite",CustPSDClass,CGview,-);
  UseView(CustPSVc);
  SetWRect(74,73,550,480);
  h=70;h2=45;h3=390;v=10;vs=20;vm=30; vs2=18;
  if (IsEnterprise) then begin
  Tile(0,50,false,"",Signature);
  end;
  tilenr = 1;
  EditField(h,v,82,"Lietotājs",Normal,Signature,false,UserSClass);
  if (IsEnterprise) then begin
    TileButton(tilenr,tilenr);  tilenr = tilenr + 1;
    TileButton(tilenr,tilenr); tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
    // TileButton(tilenr,tilenr); tilenr = tilenr + 1;
    end;
    tilenr = 1;
    Tile(tilenr,400,false,tilenr,NrOfAct); tilenr = tilenr + 1;
    v = vm;
  end else begin
    tilenr = 1;
    v = v + 40;
    vm = v;
  end;
  h = 30;
  if (HasModCRM) then begin
    ButtonFrame(20,v=vm,420,2,"Aktivitātes");
    CheckBox(h,v,0,"Iekļaut aktivitātes",Activities);
  CheckBox(h3-100,v,0,"Rādīt aktivitāšu klases",ShowActivityClasses);
  CheckBox(h2,v+=17,0,"Iekļaut plāna neapstiprinātās aktivitātes",NotOKAct);
  EditField(h3,v,40,"Aktivitāšu skaits",Normal,NrOfAct,false,0);
  end;
  ButtonFrame(20,vm=(v+40),420,2,"Piegādes adreses");
  CheckBox(h=30,v+=(vs+20),0,"Iekļaut piegādes adreses",BLT_ShowDelAddress);
  if (HasModSL) then begin
  ButtonFrame(20,vm=(v+40),420,3,"Rēķini");
  CheckBox(h=30,v+=(vs+20),0,"Iekļaut rēķinus",Invoices);
  CheckBox(h2,v+=17,0,"Visus neapmaksātos",NotOKIV);
  EditField(h3,v,40,"Pēdējos apmaksātos",Normal,NrOfIV,false,0);
  end;
  if (HasModCheck) then begin
  CheckBox(h2,v+=16,0,"Iekļaut čekus",Checks);
  end;
  if (HasModSL) then begin
    EndFrame;
  end;
  if (HasModCO) then begin
  ButtonFrame(h=20,vm=(v+40),420,2,"Līgumu piedāvājumi");
  CheckBox(h=30,v+=(vs+20),0,"Iekļaut līgumu piedāvājumus",ContQuote);
  CheckBox(h2,v+=17,0,"Iekļaut slēgtos",TermCQ);
  EditField(h3,v,40,"Līgumu piedāvājumu skaits",Normal,NrOfCQ,false,0);
  ButtonFrame(20,vm=(v+40),420,2,"Līgumi");
  CheckBox(h=30,v+=(vs+20),0,"Iekļaut līgumus",Contract);
  EditField(h3,v=v-1,40,"Līgumu klases",Normal,ContractClass,false,ContractClassSClass);
  CheckBox(h2,v+=17,0,"Iekļaut neapstiprinātos",NotOKCO);
  EditField(h3,v+1,40,"Līgumu skaits",Normal,NrOfCO,false,0);
//  CheckBox(h,v+=vs+10,0,"Kredītvēsture",PaymentHistory);//available for evryone
  end;
  if (HasAdvancedCRM) then begin
  ButtonFrame(20,vm=(v+40),420,2,"SMS");
  CheckBox(h=30,v+=(vs+20),0,"Iekļaut",SMSes);
  EditField(h3,v,40,"SMS skaits",Normal,NrOfSMS,false,0);
  end;
  if (HasAdvancedCRM) then begin
    Tile(tilenr,121,true,tilenr,CustItemMonthNr); tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
  ButtonFrame(20,v=50,420,1,"Mēneša apgrozījums");
  CheckBox(h=30,v,0,"Iekļaut mēneša apgrozījumu (12 mēneši)",MonthBal);
  ButtonFrame(20,vm=(v+45),420,1,"Klienta artikula statistika");
  CheckBox(h=30,v+=(vs+25),0,"Iekļaut klienta artikulu",CustItem);
  EditField(h3,v,40,"Mēnešu skaits",Normal,CustItemMonthNr,false,0);
  end;
  end;
  if (HasModQT) then begin
    if (StandardHansa==false) then begin
  ButtonFrame(20,vm=(v+45),420,2,"Piedāvājumi");
  CheckBox(h=30,v+=(vs+25),0,"Iekļaut piedāvājumus",Quotations);
    end else begin
      ButtonFrame(20,v=30,420,2,"Piedāvājumi");
      CheckBox(h=30,v,0,"Iekļaut piedāvājumus",Quotations);
    end;
  EditField(h3,v=v-1,40,"Piedāvājumu klase",Normal,QTClass,false,QuoteClassSClass);
  EditField(h3,v+=vs2,40,"Piedāvājumu skaits",Normal,NrOfQT,false,0);
  end;
  if (HasModSO) then begin
  ButtonFrame(20,vm=(v+40),420,2,"Pasūtījumi");
  CheckBox(h=30,v+=(vs+20),0,"Iekļaut pasūtījumus",Orders);
  EditField(h3,v=v-1,40,"Pasūtījumu veids",Normal,ORClass,false,OrderClassSClass);
  EditField(h3,v+=vs2,40,"Pasūtījumu skaits",Normal,NrOfOR,false,0);
  end;
  if (HasModPOS) then begin
    ButtonFrame(20,vm=(v+45),420,2,"POS rēķini");
    CheckBox(h=20,v+=(vs+25),0,"Iekļaut POS rēķinus",IVCash);
    EditField(h3,v+=vs2,40,"POS rēķinu skaits",Normal,NrOfIVCash,false,0);
  end;
  if (HasModCRM) then begin
  ButtonFrame(20,vm=(v+40),420,1,"Neiekļaut");
  EditField(h+80,v+=(vs+20),100,"Aktivit. tipus",Normal,ExcludeActTypes,false,ActTypeSClass);
  end;

  if (HasModTS or HasModRent or HasModSVO) then begin
    Tile(tilenr,121,true,tilenr,NrOfPR); tilenr = tilenr + 1;
    h=20; v=20;
  end;
  if (HasModTS) then begin
    ButtonFrame(h,v,420,1,"Projekts");
  CheckBox(h2=30,v,0,"Iekļaut projektus",Projects);
  EditField(h3,v,40,"Projektu skaits",Normal,NrOfPR,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Projekta budžets");
  CheckBox(h2,v+=(vs+20),0,"Iekļaut projekta budžetus",ProjectBudgets);
  EditField(h3,v,40,"Projekta budžetu skaits",Normal,NrOfTBBU,false,0);
  end;
  if (HasModRent) then begin
  ButtonFrame(h,vm=(v+40),420,1,"Līgumi");
  CheckBox(h2,v+=(vs+20),0,"Iekļaut līgumus",Agreements);
  EditField(h3,v,40,"Līgumu skaits",Normal,NrOfAgreements,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Īres rezervācijas");
  CheckBox(h2,v+=(vs+20),0,"Iekļaut īres rezervācijas",RentalReservations);
  EditField(h3,v,40,"Īres rezervāciju skaits",Normal,NrOfRentRes,false,0);
  end;
  if (HasModSVO) then begin
  ButtonFrame(h,vm=(v+40),420,1,"Servisa pasūtījumi");
  CheckBox(h2,v+=(vs+20),0,"Iekļaut servisa pasūtījumus",ServiceOrders);
  EditField(h3,v,40,"Servisa pasūtījumu skaits",Normal,NrOfSVO,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Darba lapas");
  CheckBox(h2,v+=(vs+20),0,"Iekļaut darba lapas",WorkSheets);
  EditField(h3,v,40,"Darba lapu skaits",Normal,NrOfWS,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Cits");
  CheckBox(h2,v+=(vs+20),0,"Rādīt saikni ar citiem kontaktiem",ContactRelations);
  end;
  EndWindow;
end;

window BLT_WeightSetTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 150;

  WindowBegin("Weighing machine settings",BLT_WeightSetTClass,CGSbl,ItemSettingType);
  Sizeable(-1,-1,-1,0);
  SetWRect(20,80,480,320);
  SetBlid(BLT_WeightSetBlock);
  EditField(h,v=10,100,"Port",Normal,Port,false,0);
  EditField(h,v+=vs,100,"Port name",Normal,PortCode,false,0);
  EditField(h,v+=vs,100,"Baud rate",Normal,BaudRate,false,0);
  EditField(h,v+=vs,100,"Parity",Normal,Parity,false,0);
  EditField(h,v+=vs,100,"DataLength",Normal,DataLength,false,0);
  EditField(h,v+=vs,100,"StopBits",Normal,StopBits,false,0);
  EditField(h,v+=vs,100,"FlowControl",Normal,FlowControl,false,0);
  EndWindow;

end;

window BLT_SyncAllScannerVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Sinhronizēt skannerus",BLT_SyncAllScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periods");
    ButtonFrame(h,v+=40,140,2,"Iekļaut");
    CheckBox(h,v,0,"Eksportētos",flags[0]);
    CheckBox(h,v+=16,0,"Neeksportētos",flags[1]);
    ButtonFrame(h,v+=40,140,5,"Sinhronizēt");
    CheckBox(h,v,0,"Artikuli",flags[2]);
    CheckBox(h,v+=16,0,"Nosūtīšanu eksports",flags[3]);
    CheckBox(h,v+=16,0,"Klientu pas. eksports",flags[7]);
    CheckBox(h,v+=16,0,"Saņemšanu eksports",flags[4]);
    CheckBox(h,v+=16,0,"Nosūtīšanu imports",flags[5]);
    CheckBox(h,v+=16,0,"Saņemšanu imports",flags[6]);
  EndWindow;

  return;
end;

window BLT_EDISyncVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("EDI invoice sync.",BLT_EDISyncVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periods");
    EditFieldTL(h,v+=20,100,"Rēķins",M4Long,Normal,0,long1,false,IVSClass);
    CheckBox(h,v+=20,0,"Tikai nenosūtītie",flags[0]);
  EndWindow;

  return;
end;

window IVSClass:8
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real pos;
  Boolean acptf;

  WindowBegin("Rēķini",IVSClass,CGslist,-);
  pos = 920;
  SetWRect(20,80,pos,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(IVDClass);
  UseView(IVVc);
  FormName(PrintIVL);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(79,79,"Gr.",OKFlag,false,OKFlag);
  RlColKey(111,111,"EDI",SentToEDI,false,SentToEDI);
  RlColKey(141,141,"Rēķ. dat.",InvDate,false,InvDate);
  RlColKey(221,221,"Pieg. dat.",ServiceDelDate,false,ServiceDelDate);
  RlColKey(291,291,"Pava_dz. Nr.",OfficialSerNr,false,OfficialSerNr);
  RlColKey(381,381,"Pasū_t. Nr.",OrderNr,false,OrderNr);
  pos = 451;
  RlColKey(pos,pos,"Piegādes adrese",ShipAddr1,false,ShipAddr1); pos = pos + 150; //EBS
  RlColKey(pos,pos,"Klients",CustCode,false,CustCode); pos = pos + 60;
  RlColKey(pos,pos,"Nosaukums",Addr0,false,Name);
  if (acptf) then begin
    CalculatedColumn(-230,-230,"Apst.","IVLClassAcceptanceStatus",false);
  end;
  CalculatedColumn(-190,-190,"Brutto","IVLClassCalcBruttoWeight",true);
  RlColKey(-130,-130,"Kopā",Sum1,true,Sum1);
  RlCol(-60,-60,"",CredMark,true);
  if (HasMultiCurrency or HasBase2) then begin
    RlCol(-40,-40,"Val.",CurncyCode,true);
  end;
  RlCol(-1,-1,"",Invalid,true);
  SearchField("Meklēt");
  if (HasLimitedAccess) then begin
    BrowseSubsetButton(-40,-15);
  end;
  EndWindow;

end;

window BLT_INSClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Ievietot artikulu",BLT_INSClass,CGother,HBlRecType);
  SetWRect(40,80,750,298);
  Sizeable(-1,-1,-1,0);
  v = 6;
  ToolBar;
  HalPushButton(-320,v,-220,v+10,"BLT_INSClassShowAllItemsBtn","Visi artikuli");
  EndToolBar;
  DataList(1,0,-17,-1,"item_in_pricelist");
  DataListColumn(1,8,105,AdjLeft,"code","Kods",M4Code);
  DataListColumn(1,110,195,AdjLeft,"group","Grupa",M4Code);
  DataListColumn(1,200,-215,AdjLeft,"description","Nosaukums",M4Str);
  DataListColumn(1,-210,-110,AdjRight,"alternativecode","Alt. Kods",M4Str);
  DataListColumn(1,-105,-60,AdjRight,"uprice1","Cena",M4Val);
  DataListColumn(1,-55,-10,AdjRight,"instock","Nolik.",M4UVal);
  SearchField("Meklēt");
  EndWindow;
end;

window SerialNrSClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Ievietot sēr. Nr.",SerialNrSClass,CGother,HBlRecType);
  SetWRect(240,80,800,348);
  StringList(9,9,-19,-19);
  SearchField("Meklēt");
  EndWindow;
end;

window CUINDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Klienta artikuls",CUINDClass,CGview,-);
  SetWRect(64,80,609,160);
  UseView(CUINVc);
  v = 6; vs = 20; h = 120; h2 = 280;
  EditField(h,v, 100,"Klients",Normal,CustCode,false,CUSClass);
  EditField(h2,v,-40,"Nosauk.",Normal,CustName,false,0);
  EditField(h,v+=vs, 100,"Artikuls",Normal,ArtCode,false,INSClass);
  EditField(h2,v,-40,"Nosauk.",Normal,ArtName,false,0);
  EditField(h,v+=vs, 100,"Klienta artikula Nr.",Normal,CustArtCode,false,0);
  EditField(h,v+=vs, 50,"Minimālās derīguma dienas",Normal,BLT_MinDays,true,0); //EBS
  EndWindow;
end;

window BLT_UpdatePIPriceDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Atjaunot cenas",BLT_UpdatePIPriceDClass,CGview,-);
  SetWRect(20,100,530,200);
  UseView(BLT_UpdatePIPriceVc);
  Sizeable(-1,-1,0,0); //EBS
  h = 120; v = 6; vs = 20;
  EditField(h,v,160,"Nr.",ViewOnly,SerNr,false,0);
  EditField(h,v+=vs,100,"Piegādātājs",Normal,VECode,false,VESClass);
  EditField(h+160,v,-40,"Nosaukums",Normal,VEName,false,0);
  MatrixBegin(4,v+=40,-32,-40,-,100);
  MatColTL(1,24,"Artikuls",0,M4Code,ViewOnly,20,ArtCode,false,INSClass);
  MatColTL(1,104,"Nosaukums",0,M4Str,ViewOnly,255,Spec,false,0);
  MatColTL(1,-200,"Vecā cena",0,M45Val,ViewOnly,0,OldPrice,false,0);
  MatCol(1,-100,"Jaunā cena",0,NewPrice,true,0);
  EndMatrix;
  SpecialMenu("Atjaunot cenas",'',0,"BLT_UpdatePricessm");
  EndWindow;

end;

window BLT_UpdatePIPriceLClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Atjaunot cenas",BLT_UpdatePIPriceLClass,CGmlist,-);
  SpawnClass(BLT_UpdatePIPriceDClass);
  SetWRect(64,80,509,320);
  Sizeable(-1,-1,0,0);
  UseView(BLT_UpdatePIPriceVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Nr.",SerNr,false,SerNr);
  RlColKey(100,100, "Piegādātājs",VECode,false,VECode);
  RlCol(200,200,"Nosaukums",VEName,false);
  SearchField("Meklēt");
  EndWindow;
end;

window SalesForecastDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Realizācijas prognoze",SalesForecastDClass,CGview,-);
  UseView(SalesForecastVc);
  SetWRect(20,80,600,340); //EBS edit
  Sizeable(-1,-1,0,0);
  vs = 20; h = 80; h2 = 230;
  EditField(h,v=10,80,"Kods",St_i,Code,false,TSerSClass);
  EditField(h2,v,50,"Versija",ViewOnly,Version,false,0);
  HalPushButton(400,v-8,400+100,v-8+20,"SalesForecastNewVersion","Jauna versija");
  EditField(h,v+=vs,-40,"Apraksts",Normal,Comment,false,0);
  EditField(h,v+=20,80,"Periods",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,80,"-",Normal,EndDate,false,PasteCurDate);
  EditField(613,v,70,"Izveidoš. datums",Normal,CreateDate,false,PasteCurDate);
  EditField(613,v+=vs,70,"Pēd. izmaiņas",Normal,OKDate,false,PasteCurDate);
  EditField(h,v,80,"Rindas tips",Normal,RowType,false,SetSClass);
  EditField(h2,v,80,"Klase",Normal,Class,false,ForecastClassSClass);
  EditField(h2+160,v,80,"Klients",Normal,BLT_CustCode,false,CUSClass); //EBS
  CheckBox(25,-21,0,"Apst.",OKFlag);
  CheckBox(100,-21,0,"Slēgts",Closed);
  EditField(-290,-21,70,"Kopā daudzums",ViewOnly,BLT_TotQty,true,0); //EBS
  EditField(-110,-21,70,"Kopā summa",ViewOnly,BLT_TotSum,true,0); //EBS
  StaticText(h=47,v+=39,"Artikuls/",false);
  h = 8; v=v+19;
  MatrixBegin(h,v,-40,-22,-,1000);
  MatCol(1,h=34,"Artikula grupa",60,ItemCode,false,ITSClass);
  MatCol(1,h+=80,"Apraksts",0,Spec,false,0);
  MatCol(1,-260,"Datums",0,RowDate,false,PasteCurDate); //EBS
  MatCol(1,-170,"Daudz.",0,Qty,true,0);
  MatCol(1,-100,"Summa",0,Sum,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  EndWindow;
end;

window POPlanDClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,t,v,vs;
  WindowBegin("Pasūtījuma plāns",POPlanDClass,CGview,-);
  UseView(POPlanVc);
  SetWRect(20,80,527,340);
  Sizeable(-1,-1,0,0);
  vs = 20; h = 80; h2 = 230; h3 = 430;
  EditField(h,v=10,50,"Nr.",St_i,SerNr,false,TSerSClass);
  EditField(h2,v,-40,"Apraksts",Normal,Comment,false,0);
  EditField(h,v+=20,80,"Periods",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,80,"-",Normal,EndDate,false,PasteCurDate);
  EditField(h3,v,80,"Piegādātājs",Normal,VECode,false,VESClass);
  EditField(550,v,80,"Date",Normal,EarliestPODate,false,PasteCurDate);
  CheckBox(25,-21,0,"Apst.",OKFlag);
  CheckBox(100,-21,0,"Slēgts",Closed);
  h = 8; v=v+45;
  MatrixBegin(h,v,-50,-22,-,1000);
  Flip(0);
  MatCol(t=1,h=34,"Artikuls",60,ItemCode,false,INSClass);
  MatCol(t,h+=80,"Apraksts",0,Spec,false,0);
  Flip(1);
  MatCol(t=1,-400,"Pasūt. dat.",0,POOrdDate,false,0);
  MatCol(t,-320,"Nos. dienas",0,DaysToGet,true,0);
  MatCol(t,-260,"Nepiec. dat.",0,NeededDate,false,PasteCurDate);
  MatCol(t,-180,"Ieteic. daudz.",0,SugQty,true,0);
  MatCol(t,-90,"Pielāg. daudz.",0,Qty,true,0);
  Flip(2);
  MatCol(t=1,-340,"Piegādātājs",0,VECode,false,BLT_VESClass); //EBS edit
  MatCol(t=1,-240,"Nos. dienas",0,DaysToGet,true,0);
  MatCol(t,-180,"Ieteic. daudz.",0,SugQty,true,0);
  MatCol(t,-90,"Pielāg. daudz.",0,Qty,true,0);
  Flip(3);
  MatCol(t=1,-370,"Artikuls pasūtījumā",0,FromItemCode,false,INSClass);
  MatCol(t=1,-270,"Pasūt. Nr.",0,PONr,false,0);
  MatCol(t,-180,"Ieteic. daudz.",0,SugQty,true,0);
  MatCol(t,-90,"Pielāg. daudz.",0,Qty,true,0);
  RowMenuBegin("");
  RowMenuItem(0,"Atdalītājlīnija",'l','l',0,"POPlanSplitDsm");
  EndRowMenu;
  EndMatrix;
  VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  SpecialMenu("Pasūtījumu plāna info",'o',0,"POPlanInfoDsm");
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Pasūtījumu",'L',0,"POFromPOPlanDsm");
  EndWindow;
end;

window BLT_VESClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Ievietot piegādātāju",BLT_VESClass,CGother,HBlRecType);
  SetWRect(40,80,750,298);
  Sizeable(-1,-1,-1,0);
  v = 6;
  DataList(1,0,-17,-1,"ve_in_pivc");
  DataListColumn(1,8,105,AdjLeft,"code","Nr.",M4Code);
  DataListColumn(1,110,195,AdjLeft,"searchkey","Īsais nos.",M4Str);
  DataListColumn(1,200,265,AdjLeft,"vecat","Kat.",M4Str);
  DataListColumn(1,200,-10,AdjLeft,"name","Nosaukums",M4Str);
  SearchField("Search");
  EndWindow;
end;


window SalesForecastRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Veidot realizācijas prognozi",SalesForecastRClass,CGRcW,RcType);
  SetWRect(90,80,518,180);
  v = 6; vs = 20; h = 140;
  PeriodField(h,v,"Periods");
  EditFieldTL(h,v+=20, 150,"Artikuls",M4UStr,Normal,41,f1,false,INSClass);
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=vs,150,"Artikula grupa",M4UStr,Normal,50,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs,150,"Artikula klasifikācija",M4UStr,Normal,100,f2,false,DISClass);
  end;
  EditFieldTL(h,v+=20, 150,"Prognozes klase",M4UStr,Normal,5,LastAcc,false,ForecastClassSClass);
  ButtonFrame(h,vm=(v+=41),123,2,"Rādīt");
  RadioButton(h,v,0,0,"Daudzumu",flags[1]);
  RadioButton(h,v+=16,1,0,"Summu",flags[1]);
  //EBS -->
  ButtonFrame(h,v+=41,123,2,"Rādīt");
  RadioButton(h,v,0,0,"Pārskats",ArtMode);
  RadioButton(h,v+=16,1,0,"Detalizēti",ArtMode);
  //EBS <--
  EndWindow;
end;

window BLT_SHAndIVImportVClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Import delivery notes and invoices",BLT_SHAndIVImportVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    EditFieldTL(h=100,v=10, 150,"Period",M4UStr,Normal,21,Stext,false,PerSClass);
    CheckBox(h,v+=20,0,"Run import for all companies",flags[0]);
  EndWindow;

  return;
end;

window ORSerTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Numuru sērijas - klientu pasūtījumi",ORSerTClass,CGHbl,HBlRecType);
  SetBlid(ORSerBlock);
  TSERW_LAT;
  EndWindow;
end;

window POSerTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Numuru sērijas - pasūtījumi",POSerTClass,CGHbl,HBlRecType);
  SetBlid(POSerBlock);
  TSERW_LAT;
  EndWindow;
end;

window INrsRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vm,vs;
  WindowBegin("Artikulu kustību pārskats",INrsRClass,CGRcW,RcType);
  SetWRect(20,80,550,460);
  v = 6; vs = 20; h = 160; h2 = 30; h3 = 180; h4 = 340;
  PeriodField(h,v,"Periods");
  EditFieldTL(h,v+=vs,150,"Artikula Nr.",M4UStr,Normal,50,f1,false,INSClass);
  if (HasItemGroups) then begin
  EditFieldTL(h,v+=vs,150,"Grupa",M4UStr,Normal,5,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
  EditFieldTL(h,v+=vs,150,"Artikula klasifikācija", M4UStr,Normal,60,f4,false,DISClass);
  EditFieldTL(h,v+=vs,150,"Klasifikācijas tips",M4UStr,Normal,60,f5,false,CTypeSClass);
  end;
  if (HasMultiLocations) then begin
  EditFieldTL(h,v+=vs,150,"Noliktava",M4Code,Normal,21,f6,false,LocationSClass);
    if (StandardHansa==false and IsEnterprise) then begin
  EditFieldTL(h,v+=vs,150,"Noliktavas grupa",M4Code,Normal,10,f7,false,LocGrSClass);
  EditFieldTL(h,v+=vs,150,"Noliktavas klasifikācija",M4List,Normal,200,f8,false,LocClSClass);
    end;
  end;
  if (HasDepartments) then begin
  EditFieldTL(h,v+=vs,150,"Departaments",M4UStr,Normal,10,AccStr,false,DepSClass);
  end;
  if (HasModPO) then begin
  EditFieldTL(h,v+=vs,150,"Piegādātājs",M4UStr,Normal,10,f2,false,VESClass);
  end;
  EditFieldTL(h,v+=vs ,150,"Klients",M4UStr,Normal,50,f12,false,CUSClass);
  if (IsEnterprise) then begin
  CheckBox(h2,v+=26,0,"Tikai noliktavas artikuli",flags[11]);
//  CheckBox(h2,v+=16,0,"Rādīt otro daudzuma vienību",flags[12]);
  CheckBox(h2,v+=16,0,"Saldo artikuliem bez kustības",flags[13]);
  CheckBox(h2,v+=16,0,"Iekļaut sagatavotos ierakstus",flags[14]);
  end;
  if (HasMultiLocations) then begin
  CheckBox(h2,v+=16,0,"Pa noliktavām",flags[15]);
  end;
  if (HasSerialNumbers) then begin
  CheckBox(h2,v+=16,0,"Iekļaut Sēr. Nr. inform.",AccSpec);
  end;
  if (HasLocalization("ARG,MEX,USA") and IsStandardProduct==false) then begin
    CheckBox(h2,v+=16,0,"Iekļaut nosūt. Nr.",flags[22]);
  end;
//  CheckBox(h2,v+=16,0,"Include History Before Stocktake",flags[19]);
  ButtonFrame(h2,vm=(v+=38),130,2,"Rādīt");
  RadioButton(h2,v,0,0,"Pārskatu",flags[9]);
  RadioButton(h2,v+=16,1,0,"Detalizēti",flags[9]);
  if (IsEnterprise) then begin
  ButtonFrame(h2,v+=40,130,2,"Secība pēc");
  RadioButton(h2,v,0,0,"Izm. datuma",flags[10]);
  RadioButton(h2,v+=16,1,0,"Gr. datuma",flags[10]);
  end;
  ButtonFrame(h3,v=vm,140,3,"Veids");
  RadioButton(h3,v,0,0,"Daudzums",ArtMode);
  if (HasVarieties) then begin
  RadioButton(h3,v+=16,3,0,"Daudz. un variācijas",ArtMode);
  end;
  RadioButton(h3,v+=16,1,0,"Daudz. un summas",ArtMode); // 2 Has some code for it, don't know what....
  EndFrame;
  if (HasSecondQuantity) then begin
  ButtonFrame(h4,v=vm,150,3,"Otrā daudzuma vienība");//  CheckBox(20,v+=16,0,"Show Quantity 2",flags[12]);
  RadioButton(h4,v,0,0,"Nerādīt",flags[12]);
  RadioButton(h4,v+=16,1,0,"Rādīt",flags[12]);
  RadioButton(h4,v+=16,2,0,"Rādīt koeficientu",flags[12]);
    ButtonFrame(h4,v=30,160,12,"Reģistri");
  end else begin
    ButtonFrame(h4,v=vm,160,12,"Reģistri");
  end;
  if (HasModSO) then begin
    CheckBox(h4,v,0,"Nosūtīšanas",flags[2]); v = v + 16;
  end;
  CheckBox(h4,v,0,"Preču saņemšanas",flags[3]); v = v + 16;
    CheckBox(h4,v,0,"Rēķini",flags[1]); v = v + 16;
//  CheckBox(h4,v+=16,0,"POS Invoices",flags[16]);
  if (HasModProd) then begin
    if (StandardHansa==false) then begin
    CheckBox(h4,v,0,"Ražošanas pasūtījumi",flags[18]); v = v + 16;
    end;
    CheckBox(h4,v,0,"Ražošanas",flags[5]); v = v + 16;
    if (StandardHansa==false) then begin
    CheckBox(h4,v,0,"Ražošanas darbības",flags[20]); v = v + 16;
    end;
  end;
  if (HasAdvancedStock) then begin
    CheckBox(h4,v,0,"Atgrieztās preces",flags[8]); v = v + 16;
    CheckBox(h4,v,0,"Atgrieztās preces pieg.",flags[19]); v = v + 16;
  end;
  CheckBox(h4,v,0,"Preču norakstīšana",flags[6]); v = v + 16;
  if (IsEnterprise or (HasLocalization("PRT") and HasMultiLocations)) then begin
    CheckBox(h4,v,0,"Noliktavas kustība",flags[4]); v = v + 16;
  end;
  if (HasAdvancedStock) then begin
    CheckBox(h4,v,0,"Preču pārvērtēšana",flags[22]); v = v + 16;
  end;
  if (HasModRent) then begin
    CheckBox(h4,v,0,"Iekš. nol. kustība",flags[17]); v = v + 16;
  end;
  if (HasModSVO) then begin
    CheckBox(h4,v,0,"Darba tabulas",flags[7]); v = v + 16;
  end;
  EndFrame;
  EndWindow;
end;

window AddORItemTClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs;

  WindowBegin("Additional import items",AddORItemTClass,CGHbl,HBlRecType);
  SetBlid(AddORItemBlock);
  SetWRect(20,80,400,400);
  Sizeable(-1,-1,0,0);
  h = 8; v = 25;
  MatrixBegin(h,v,-31,-10,-,30);
  MatCol(1,h=30,"Item",0,ItemCode,false,INSClass);
  MatCol(1,h=210,"Quantity",0,Quant,false,0);
  EndMatrix;
  EndWindow;

  return;
end;

window ORRClass:1
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;
  WindowBegin("Drukāt klientu pasūtījumus",ORRClass,CGRcW,RcType);
  SetWRect(20,80,400,150);
  EditFieldTL(120,v=6, 150,"Nr.",   M4UStr,Normal,30,f1,false,0);
  EditFieldTL(120,v+=20, 150,"Plān. piegādes dat.",M4Date,Normal,10,d1,false,PasteCurDate); //EBS
  CheckBox(120,v+=30,0,"Tikai nedrukātie",OnlyUnprntd);
  EndWindow;
end;

window IVJRClass:3
  wtag("language","LAT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hs,v,v3,vm,vs,l;

  WindowBegin("Veidot rēķinu žurnālu",IVJRClass,CGRcW,RcType);
  if (IsEnterprise) then begin
  SetWRect(20,80,520,390);
  end else begin
    SetWRect(20,80,460,390);
  end;
  vs = 20;
    hs=148;
   if (IsEnterprise) then begin
    if (HasLocalization("ARG,HRV,LTU,LVA,POL,PRT,RUS") or (HasOfficialSerNr and HasPreferedOfficialSerNr==false))  then begin
    Tile(0,40,false,"",f1);
    end else begin
      Tile(0,20,false,"",f1);
    end;
   end;

  v = 6; h = 150;
  if (HasPreferedOfficialSerNr) then begin
    EditFieldTL(h,v,150,"Pavadz. Nr.",M4UStr,Normal,41,f6,false,0);
    v = v + 20;
    if (HasLocalization("POL,PRT")==false)  then begin
      EditFieldTL(h,v,150,"Rēķina Nr.",M4Str,Normal,30,f1,false,0);
      v = v + 20;
    end;
   end else begin
    EditFieldTL(h,v,150,"Rēķina Nr.",M4Str,Normal,30,f1,false,0);
    v = v + 20;
    if (HasOfficialSerNr or HasInvoiceOfficialSerNr) then begin
      EditFieldTL(h,v,150,"Pavadz. Nr.",M4UStr,Normal,41,f6,false,0);
      v = v + 20;
   end;
  end;

   if (IsEnterprise) then begin
    TileButtons(v,2);
    Tile(1,380,false,"1",f2);
    v = 6;
     vm = v;
   end;
   PeriodField(h,v,"Periods");
   EditFieldTL(h,v+=vs, 150,"Kredītrēķina periods",M4UStr,Normal,21,Period2Str2,false,PerSClass);
    EditFieldTL(h,v+=vs ,150,"Klients",M4UStr,Normal,50,f2,false,CUSClass);
  if (HasCategories) then begin
    EditFieldTL(h,v+=vs ,70,"Klienta kateg.",M4UStr,Normal,5,f3,false,CCatSClass);
   end;
   if (HasContactClassification) then begin
    EditFieldTL(h,v+=vs ,70,"Klasifikāciju tips",M4UStr,Normal,60,f5,false,CTypeSClass);
    EditFieldTL(h,v+=vs ,70,"Klienta klasifikācija",M4UStr,Normal,30,f4,false,CClassSClass);
   end;
  if (HasSalesman or HasSalesmanBonus) then begin
    EditFieldTL(h,v+=vs ,70,"Aģents",M4UStr,Normal,10,AccStr,false,UserSClass);
   end;
  if (HasSalesGroup) then begin
    EditFieldTL(h,v+=vs ,50,"Aģentu grupa",M4UStr,Normal,10,f14,false,SalesGroupSClass);
  end;
   if (HasObjects) then begin
    EditFieldTL(h,v+=vs,250,"Objekts",M4UStr,Normal,60,ObjStr,false,ObjSClass);
    EditFieldTL(h,v+=vs,50,"Objekta tips",M4UStr,Normal,5,ObjType,false,OTSClass);
    EditFieldTL(h,v+=vs,250,"Objekti (no rindas)",M4UStr,Normal,60,f11,false,ObjSClass);
   end;
   if (HasModTS) then begin
    EditFieldTL(h,v+=vs,50,"Projekts",M4UStr,Normal,20,FirstAcc,false,PRSClass);
   end;
   if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs,70,"Noliktava",M4UStr,Normal,60,LastAcc,false,LocationSClass);
   end;
   EditFieldTL(h,v+=vs,70,"Maršruts",M4Code,Normal,25,f15,false,DelRouteSClass); //EBS
   if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs,50,"Samaksas termiņš",M4UStr,Normal,5,TransStr,false,PDSClass);
    EditFieldTL(h,v+=vs,50,"Orģinālais klients",M4Code,Normal,20,f12,false,CUSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v3=(v+=vs),50,"Min. summa",M4Val,Normal,0,vals0,false,0);
  end else begin
    EditFieldTL(h,v+=vs,100,"PVN kods",M4UStr,Normal,100,f13,false,VATCodeSClass);
   end;
   if (IsEnterprise) then begin
     h = 320;
     v = vm + 10;
   end else begin
     v = v + 40;
     v3 = v + 20;
     vm = v;
    h = 30;
   end;
   ButtonFrame(h,v,123,5,"Statuss");
    CheckBox(h,v,0,"Negrāmatotie",flags[1]);
    CheckBox(h,v+=16,0,"Grāmatotie",flags[2]);
   if (IsEnterprise) then begin
    RadioButton(h,v+=16,0,0,"Iekļaut maz ticamos",flags[7]);
    RadioButton(h,v+=16,1,0,"Neiekļ. maz ticamos",flags[7]);
    RadioButton(h,v+=16,2,0,"Tikai maz ticamie",flags[7]);
   end;
   EndFrame;

   v3 = v3 + 41;
   v = v3;
   if (IsEnterprise) then begin
     vm = v;
    h = 148;
  end else begin
    h = 30;
   end;
  ButtonFrame(h,v,123,3,"Rādīt");
    RadioButton(h,v,0,0,"Pārskatu",ArtMode);
    RadioButton(h,v+=16,1,0,"Detalizēti",ArtMode);
   if (HasMultiCurrency) then begin
    RadioButton(h,v+=16,4,0,"Pārskats ar val.",ArtMode);
   end;
   EndFrame;
   if (IsEnterprise==false and HasBase2) then begin
     CheckBox(h,v+=42,0,"Rādīt bāzes valūtu kopsummas",flags[12]);
   end;

   if (IsEnterprise) then begin
     h2 = 320;
     l = 160;
   end else begin
     h2 = h + 148;
    l = 123;
   end;
   ButtonFrame(h2,v=vm,l,5,"Kārtot pēc");
   if (HasModNL) then begin
    RadioButton(h2,v,0,0,"Grām. datuma",flags[10]);
   end else begin
     RadioButton(h2,v,0,0,"Rēķina datums",flags[10]);
   end;
   if (HasLocalization("BRA,POL,PRT")) then begin
     RadioButton(h2,v+=16,5,0,"Rēķina Nr.",flags[10]);
   end else begin
     RadioButton(h2,v+=16,1,0,"Rēķina Nr.",flags[10]);
   end;
  if (HasMultiLocations) then begin
    RadioButton(h2,v+=16,2,0,"Noliktavas (no augš. daļ.)",flags[10]);
  end;
  if (HasOfficialSerNr or HasInvoiceOfficialSerNr) then begin
    RadioButton(h2,v+=16,3,0,"Pārsk. ar pavadz. Nr.",flags[10]);
  end;
  if (IsEnterprise) then begin
    RadioButton(h2,v+=16,4,0,"Rēķ. datums",flags[10]);
   end;
   EndFrame;
   if (IsEnterprise) then begin
    Tile(2,330,false,"2",Stext);
    v = 6;
    EditFieldTL(h=150,v,100,"Artikulu grupa",M4UStr,Normal,21,Stext,false,ITSClass);
    EditFieldTL(h,v+=vs,150,"Artikulu klasifikācija", M4UStr,Normal,60,Comment,false,DISClass);
    EditFieldTL(h,v+=vs,100,"Artikuls",M4UStr,Normal,41,f10,false,INSClass);
    EditFieldTL(h,v+=vs,100,"Real. konts",M4UStr,Normal,21,f7,false,AccSClass);
    EditFieldTL(h,v+=vs,100,"Debitoru konts",M4UStr,Normal,21,f8,false,AccSClass);
    if (StandardHansa==false) then begin
      EditFieldTL(h,v+=vs,100,"Galv. partneris",M4UStr,Normal,20,f9,false,CUSClass);
    end;
    EditFieldTL(h,v+=vs,100,"PVN kods",M4UStr,Normal,100,f13,false,VATCodeSClass);
//    EditFieldTL(h,v+=vs,50,"Order Class",M4UStr,Normal,5,Stext,false,OrderClassSClass); // no more strings to use....
    ButtonFrame(h=50,vm = (v+=40),123,4,"Rēķina tips");
    CheckBox(h,v,0,"Rēķini",flags[3]);
    CheckBox(h,v+=16,0,"Sk. naudas rēķini",flags[4]);
    CheckBox(h,v+=16,0,"Kredītrēķini",flags[5]);
    CheckBox(h,v+=16,0,"Soda naudas rēķ.",flags[6]);
    CheckBox(h,v+=26,0,"Tikai ar realiz. saist. rēķ.",flags[19]);
    StaticText(h+17,v+=30,"(ignorēt rēķ. tipus)",false);
    CheckBox(h=220,v=vm,0,"Rādīt komentārus",flags[11]);
    CheckBox(h,v+=16,0,"Rādīt bāzes valūtu kopsummas",flags[12]);
    if (StandardHansa==false) then begin
    CheckBox(h,v+=16,0,"Tikai fiskālie rēķini",flags[13]);
    end;
    CheckBox(h,v+=16,0,"Rādīt izsvītrotos rēķinus",flags[14]);
    CheckBox(h,v+=16,0,"Rādīt PVN summu",flags[15]);
    CheckBox(h,v+=16,0,"Kavētie pēc rēķina datuma",flags[17]);
    CheckBox(h,v+=16,0,"Iekļaut oriģ. klientu",flags[18]);
    CheckBox(h,v+=16,0,"Rēķini par kopējo summu, kas vienāda ar nulli",flags[20]);
    CheckBox(h+=hs,v=vm,0,"Rādīt pavadzīmju Nr.",flags[16]);
   end else begin
     ButtonFrame(h+=148,v+=41,123,3,"Rēķina tips");
     CheckBox(h,v,0,"Rēķini",flags[3]);
     CheckBox(h,v+=16,0,"S/N rēķini",flags[4]);
     CheckBox(h,v+=16,0,"Kredītrēķini",flags[5]);
    if (HasLocalization("PRT")) then begin
      CheckBox(h,v+=16,0,"Soda naudas rēķ.",flags[6]);
    end;
    EndFrame;
    v = v + 24;
    if (HasOfficialSerNr or HasInvoiceOfficialSerNr) then begin
      CheckBox(h,v,0,"Rādīt pavadz. Nr.",flags[16]); v = v + 16;
    end;
    if (HasLocalization("PRT")) then begin
      CheckBox(h,v,0,"Rēķini par kopējo summu, kas vienāda ar nulli",flags[20]);
    end;
   end;
    EndWindow;
end;
