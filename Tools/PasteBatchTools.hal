external inner procedure GetStockValue(string,string,var record ItemStatusVc);
external inner procedure FindBatchBestBeforeDate(string,string,var Date);

procedure ArtCodeOnThisProd(Integer cnt,record ProdVc Prodp,string artcode,string serialnr,var val resp,var val thesernrq)
begin
  row ProdVc Prodrw;
  Integer i;

  resp = blankval;
  thesernrq = blankval;
  for (i = 0 ; i<cnt;i=i+1) begin
    MatRowGet(Prodp,i,Prodrw);
    if (Prodrw.Item==artcode) and Prodrw.InQty > 0 then begin
      resp = resp + Prodrw.InQty;
      if (serialnr==Prodrw.SerialNr) then begin
        thesernrq = thesernrq + Prodrw.InQty;
      end;
    end;
  end;
  return;
end;

global
function Boolean Prod_PasteBatchSerItems2(var string cursernr,var Date bestbefore,var Integer srw,var val remnp,var record ProdVc Prodp,var longint errmsg)
begin
  Boolean res;
  record SerBalVc SBr;
  record ItemStatusVc ISr;
  row ProdVc Prodrwp;
  Boolean firstf,foundf,testf;
  val s,instock,onprod,thesernrq;
  string 10 location,orlocation;
  Date td;
  string 50 ckey;
  Integer keys;

  MatRowGet(Prodp,srw,Prodrwp);
  errmsg = 0;
  res = true;

  orlocation = Prodp.Location;
  if (blank(orlocation)) then begin
    orlocation = ";;;";
  end;

  SBr.Item = Prodrwp.Item;
  SBr.Location = orlocation;
  ckey = "ItemBestBefore";
  keys = 3;
  SBr.NewBestBefore = bestbefore;
  if (nonblank(cursernr)) then begin
    if (LoopKey(ckey,SBr,keys,true)) then begin end;
  end;

  firstf = true;
  foundf = true;
  while (LoopKey(ckey,SBr,keys,foundf)) begin
    if (nonblank(Prodrwp.Item)) then begin
      if (SBr.Item!=Prodrwp.Item) then begin foundf = false; end;
    end;
    if (nonblank(orlocation)) and (orlocation!=";;;") then begin
      if (SBr.Location!=orlocation) then begin foundf = false; end;
    end;
    testf = true;
    if (nonblankdate(SBr.NewBestBefore)) then begin
      if (bestbefore>SBr.NewBestBefore) then begin testf = false; end;
    end;
    if (foundf and testf) then begin
      if (firstf and (SBr.Quant!=0)) then begin
        GetStockValue(Prodrwp.Item,orlocation,ISr);
        ArtCodeOnThisProd(srw,Prodp,Prodrwp.Item,SBr.Serial,onprod,thesernrq);
        SBr.Quant = SBr.Quant - thesernrq;
        instock = SBr.Quant;
        if (instock<=0) then begin
          instock = ISr.Instock - onprod;
        end;
        if (thesernrq<=SBr.Quant) then begin
          cursernr = SBr.Serial;
          firstf = false;
        end;
      end;
      if (firstf==false) then begin
        if ((cursernr==SBr.Serial) or (s==0)) then begin
          s = s + SBr.Quant;
        end;
      end;
    end;
  end;
  if (s>0) then begin
    Prodrwp.InQty = remnp;
    Prodrwp.SerialNr = cursernr;
    FindBatchBestBeforeDate(Prodrwp.Item,Prodrwp.SerialNr,td);
    Prodrwp.BestBefore = td;
    if (s<remnp) then begin
      Prodrwp.InQty = s;
    end;
    MatRowPut(Prodp,srw,Prodrwp);
    remnp = remnp - s;
    if (remnp>0) then begin
      res = false;
      goto LPasteBatchSerItems;
    end;
  end;
LPasteBatchSerItems:;
  if (Prodrwp.InQty<=0) then begin
    MatRowDelete(Prodp,srw);
    srw = srw - 1;
//    errmsg = 1240;
  end;
  Prod_PasteBatchSerItems2 = res;
  return;
end;
