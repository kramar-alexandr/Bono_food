external inner function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external inner procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external inner procedure BC39(string,var string);
external inner procedure ItemBC39(string,var string);
external inner procedure ItemBCEAN(string,var string);
external inner procedure ItemBCEAN13(string,var string);
external inner procedure RussianPaymentNr(LongInt,var string);
external inner procedure CommonDocumentFields(record RcVc);
external inner function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external inner function Integer NumberofDocumentPages(string,Integer);
external inner procedure GetLangNr(string,var record LangNrVc);
external inner procedure ItemBC39(string,var string);
external inner procedure ItemBCEAN(string,var string);
external inner procedure ItemBCEAN13(string,var string);
external inner function Boolean GetItemNameStr(Integer,var string,string,string,string);

procedure PrintProdRows(record RcVc RepSpec,record ProdVc Prodr,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec)
BEGIN
  record INVc INr;
  row ProdVc Prodrw;
  Integer i,rwcnt;
  string 255 tstr;
  record MainStockBlock MSb;

  BlockLoad(MSb);
  rwcnt = MatRowCnt(Prodr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Prodr,i,Prodrw);
    if (ReadFirstItem(Prodrw.Item,INr,false,false)) then begin end;
    OUTFORMFIELD("F_ARTNR",Prodrw.Item);
    OUTFORMFIELD("F_ARTNR2",Prodrw.Item);
    OUTFORMFIELD("F_KOMMENTAR",Prodrw.Comment);
    OUTFORMFIELD("F_SERIALNR",Prodrw.SerialNr);
    OUTFORMFIELD("F_MATERIAL",Prodrw.Material);
    PrintValue("F_INQTY",Prodrw.InQty,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_OUTQTY",Prodrw.OutQty,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_PRIS",Prodrw.ItemCost,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_EXTRAKOSTNAD",Prodrw.ExtraCost,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ACTUALQTYROW",Prodrw.ActualQty,M4Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_ENHET",INr.Unittext);

    switch (Prodr.RowsHoldActualQty) begin
      case 1:
        PrintValue("F_TOTINQTY",Prodrw.InQty,M45Val,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTOUTQTY",Prodrw.OutQty,M45Val,LangNrr,SysFormatRec,false);
      otherwise
        PrintValue("F_TOTINQTY",Prodr.Qty*Prodrw.InQty,M45Val,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTOUTQTY",Prodr.Qty*Prodrw.OutQty,M45Val,LangNrr,SysFormatRec,false);
    end;
    if (Prodrw.OutQty!=0) then begin
      OUTFORMFIELD("F_OUTITEM",Prodrw.Item);
      OUTFORMFIELD("F_OUTITEMNAME",Prodrw.Comment);
      OUTFORMFIELD("FF_OUTITEMBESTBEFORE",Prodrw.BestBefore);

      if (GetItemNameStr(1,tstr,Prodr.LangCode,Prodrw.Comment,Prodrw.Item)) then begin end;
      OutFormField("FF_ITEMNAMELANG",tstr);

      OUTFORMFIELD("F_OUTITEMSERIALNO",Prodrw.SerialNr);
      PrintValue("F_OUTITEMQTY",Prodrw.OutQty,M4Qty,LangNrr,SysFormatRec,false);
      if (FIELDINFORM("F_ARTNRBC39")) then begin
        ItemBC39(Prodrw.Item,tstr);
        OUTFORMFIELD("F_ARTNRBC39",tstr);
      end;
      if (FIELDINFORM("F_ARTNRBCEAN")) then begin
        ItemBCEAN(Prodrw.Item,tstr);
        OUTFORMFIELD("F_ARTNRBCEAN",tstr);
      end;
      if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
        ItemBCEAN13(Prodrw.Item,tstr);
        OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
      end;
      PrintValue("F_OUTITEMPRICE",Prodrw.ItemCost,M4Val,LangNrr,SysFormatRec,false);


      OUTFORMFIELD("F_ITEMCODE",Prodrw.Item);
      OUTFORMFIELD("F_ITEMNAME",Prodrw.Comment);
      OUTFORMFIELD("F_COMMENT",Prodrw.Comment);
      OUTFORMFIELD("F_SERIENR",Prodrw.SerialNr);
      PrintValue("F_ANTAL",Prodrw.OutQty,M4Qty,LangNrr,SysFormatRec,false);

      if (MSb.UnitConvCalc==0) then begin
        PrintValue("F_ANTAL2",Prodrw.OutQty*Prodrw.Coefficient,M4Qty,LangNrr,SysFormatRec,false);
      end else begin
        PrintValue("F_ANTAL2",Prodrw.OutQty/Prodrw.Coefficient,M4Qty,LangNrr,SysFormatRec,false);
      end;
      if (FIELDINFORM("F_ITEMOUTC39")) then begin
        BC39(Prodrw.Item,tstr);
        OUTFORMFIELD("F_ITEMOUTC39",tstr);
      end;
      if (FIELDINFORM("F_ITEMUNIT")) then begin
        if (ReadFirstItem(Prodrw.Item,INr,false,false)) then begin
          OUTFORMFIELD("F_ITEMUNIT",INr.Unittext);
        end;
      end;
      OUTFORMFIELD("F_SUPPSERIALNRROW",Prodrw.SuppSerialNr);
      OUTFORMFIELD("F_MAJORSTONEROW",Prodrw.MajStoneDet);
      OUTFORMFIELD("F_COLOURROW",Prodrw.Colour);
      OUTFORMFIELD("F_CLARITYROW",Prodrw.Clarity);
      OUTFORMFIELD("F_CERTROW",Prodrw.Cert);
      OUTFORMFIELD("F_MINORSTONEROW",Prodrw.MinStoneDet);
      OUTFORMFIELD("F_METALROW",Prodrw.Metal);
      OUTFORMFIELD("F_ROWWEIGHTROW",Prodrw.RowWeight);
      OUTFORMFIELD("F_SIZEROW",Prodrw.Size);
      OUTFORMFIELD("F_LENGTHROW",Prodrw.Length);
      OUTFORMFIELD("F_WATCHBRANDROW",Prodrw.WatchBrand);
      OUTFORMFIELD("F_STYLENAMEROW",Prodrw.StyleName);
      OUTFORMFIELD("F_WATCHMETALROW",Prodrw.WatchMetal);
      OUTFORMFIELD("F_MOVEMENTROW",Prodrw.Movement);
      OUTFORMFIELD("F_BRCSTRROW",Prodrw.BrcStr);
      OUTFORMFIELD("F_GENDERROW",Prodrw.Gender);
      OUTFORMFIELD("F_OTHERROW",Prodrw.Other);
      OUTFORMFIELD("F_OTHER2ROW",Prodrw.Other2);
    end;
    EndFormRow;
  end;
  RETURN;
END;

global
procedure DoBLT_ProdLabelsForm(record RcVc RepSpec,record ProdVc Prodr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  record INVc boxINr;
  Integer i,rwcnt;
  record UserVc Userr;
  record LocationVc Locr;
  string 255 tstr;

  Boolean printf;
  Integer intdocnr;
  string 30 formcode;

  BlockLoad(SysFormatRec);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto L99;
  end;
  rwcnt = MatRowCnt(FDr);
  GetLangNr("",LangNrr);
  intdocnr = 1;
  printf = true;
  while (printf) begin
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,Prodr.SerNr,FDrw.PrintGroupCode,
                      Prodr.LangCode,intdocnr,"ProdVc",formcode)) then
      begin
        goto LBREAKProd;
      end;
    end;
LBREAKProd:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        NumberofDocumentPages(formcode,MatRowCnt(Prodr));
        if (FIELDINFORM("F_RUSPAYNR")) then begin
          RussianPaymentNr(Prodr.SerNr,tstr);
          OUTFORMFIELD("F_RUSPAYNR",tstr);
        end;
        OUTFORMFIELD("F_BARCODE",Prodr.SerNr);
        OUTFORMFIELD("F_SERNR",Prodr.SerNr);
        OUTFORMFIELD("F_PRODNR",Prodr.SerNr);
        OUTFORMFIELD("F_STARTDATE",Prodr.StartDate);
        OUTFORMFIELD("F_STARTTIME",Prodr.StartTime);
        OUTFORMFIELD("F_PRODDATE",Prodr.ProdDate);
        OUTFORMFIELD("F_ENDTIME",Prodr.EndTime);
        OUTFORMFIELD("F_BESKRIVNING",Prodr.Comment);
        OUTFORMFIELD("F_SPECIFIKATION",Prodr.Comment2);
        if (FIELDINFORM("F_SERIENRBC39")) then begin // What is this?
          BC39(Prodr.Comment3,tstr);
          OUTFORMFIELD("F_SERIENRBC39",tstr);
        end;
        if (FIELDINFORM("F_COMMENT2BC39")) then begin // What is this?
          BC39(Prodr.Comment2,tstr);
          OUTFORMFIELD("F_COMMENT2BC39",tstr);
        end;
        OUTFORMFIELD("F_DESCRIPTION",Prodr.Comment3);
        OUTFORMFIELD("F_RECEPY",Prodr.Recepy);
        OUTFORMFIELD("F_RECNAME",Prodr.RecName);
        OUTFORMFIELD("F_LOCATION",Prodr.Location);
        OUTFORMFIELD("F_FIXASSETCODE",Prodr.FixAssCode);
        OUTFORMFIELD("F_RESPONSIBLEPERSON",Prodr.Inspector);
        Userr.Code = Prodr.Inspector;
        if (ReadFirstMain(Userr,1,true)) then begin
        end;
        OUTFORMFIELD("F_RESPONSIBLEPERSONNAME",Userr.Name);
        OUTFORMFIELD("F_PRODORDER",Prodr.ProdOrder);

        Locr.Code = Prodr.Location;
        if (ReadFirstMain(Locr,1,true)) then begin
        end;
        OUTFORMFIELD("F_LOCATIONNAME",Locr.Name);
        OUTFORMFIELD("F_PERSON",Prodr.Person);
        Userr.Code = Prodr.Person;
        if (ReadFirstMain(Userr,1,true)) then begin
        end;
        OUTFORMFIELD("F_PERSNAME",Userr.Name);
        OUTFORMFIELD("F_DISCARDEDREASON",Prodr.StandProblem);
        OUTFORMFIELD("F_ROUTING",Prodr.Routing);
        OUTFORMFIELD("F_ACTUALQTY",Prodr.ActualQty);
        PrintValue("F_TOTQTY",Prodr.Qty,M4Qty,LangNrr,SysFormatRec,false);
        PrintValue("F_TOTWEIGHT",Prodr.TotOutWeight,M4Qty,LangNrr,SysFormatRec,false);

        if (ReadFirstItem(Prodr.DefBoxItem,boxINr,false,false)) then begin end;
        OutFormField("FF_BOXBARCODE", boxINr.BarCode);
        PrintValue("FF_BOXQTY",Prodr.QtyInBox,M4Qty,LangNrr,SysFormatRec,false);
        PrintValue("FF_TotOutWeight",Prodr.TotOutWeight,M4Qty,LangNrr,SysFormatRec,false);
        PrintValue("FF_NetoWeight",Prodr.NetoWeight,M4Qty,LangNrr,SysFormatRec,false);


//        PrintProdOutData(Prodr,LangNrr,SysFormatRec);
        PrintProdRows(RepSpec,Prodr,LangNrr,SysFormatRec);
//        PrintOutProdRow(RepSpec,Prodr,LangNrr,SysFormatRec);//waht the hell ?
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
L99:;
  RETURN;
END;

global
procedure BLT_ProdLabelsForm(record RcVc RepSpec)
BEGIN
  record ProdVc PRr;
  Boolean TrHs,tmpf;
  LongInt afr,ato;

  StartPrintDialogGroup;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  PRr.SerNr = afr;
  TrHs = true;
  while (LoopMain(PRr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (PRr.SerNr>ato) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      tmpf = PrintDocument(PRr,"BLT_ProdLabelsForm",false);
    end;
  end;
  EndPrintDialogGroup;
  RETURN;
END;
