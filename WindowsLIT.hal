external inner function Boolean HasPreferedOfficialSerNr();
external inner function Boolean HasInvoiceOfficialSerNr();
external inner function Boolean HasCategories();
external inner function Boolean HasContactClassification();
external inner function Boolean HasModSO();
external inner function Boolean HasModQT();
external inner function Boolean HasModPOS();
external inner function Boolean HasAdvancedCRM();
external inner function Boolean HasModCheck();
external inner function Boolean HasModCO();
external inner function Boolean HasLimitedAccess();
external inner function Boolean AcceptanceStatusColumnTest(string);
external inner function Boolean HasCustomerStatusReport();
external inner function Boolean HasFreightAdvanced();
external inner function Boolean UseTaxTemplatesforTaxCalc();
external inner function real VATZoneButtonsLabelsLIT(real,real,real,real);
external inner function Boolean HasBuyBack();
external inner function Boolean HasStandardCRM();
external inner function Boolean HasEMail();
external inner function Boolean HasAdvancedProduction();
external inner function Boolean HasDownpayments();
external inner function Boolean HasSalesman();
external inner function Boolean HasVATZone();
external inner function Boolean HasSalesmanBonus();
external inner function Boolean HasSalesGroup();
external inner function Boolean HasAdvancedPricing();
external inner function Boolean HasModSVO();
external inner function Boolean HasWithholdingTax();
external inner function Boolean HasItemGroups();
external inner function Boolean HasConsStockMoveInvoices();
external inner function Boolean HasIntegratedNL();
external inner function string 60 UserDefined(string,string);
external inner function string 255 VATZoneNameLIT();
external inner function Boolean HasModCRM();
external inner function Boolean HasPersons();
external inner function Boolean HasModWHM();
external inner function Boolean HasETaxDocuments();
external inner function Boolean HasReturnedGoods();
external inner function Boolean HasModNL();
external inner function Boolean HasNumberSeries();
external inner function Boolean HasCountryPerCustomer();
external inner function Boolean HasPositions();
external inner function Boolean HasSerialNumbers();
external inner function Boolean HasCustItem();
external inner function Boolean HasLanguages();
external inner function Boolean HasModTS();
external inner function Boolean HasBranch();
external inner function Boolean HasObjects();
external inner function Boolean HasRoute();
external inner function Boolean HasOfficialSerNr();
external inner function Boolean HasTREO();
external inner function Boolean IsEnterprise();
external inner function Boolean StandardHansa();
external inner function Boolean HasModIN();
external inner function Boolean HasModSL();
external inner function Boolean HasMultiLocations();
external inner function Boolean HasModPO();
external inner function Boolean HasMultiCurrency();
external inner function Boolean HasVarieties();
external inner function Boolean HasBase2();
external inner function Boolean HasApprovals();
external inner function Boolean HasModPL();
external inner function Boolean HasRetGoodsToSupp();
external inner function Boolean HasTaxMatrix();
external inner function Boolean HasQualityControl();
external inner function Boolean HasAdvancedStock();
external inner function Boolean HasModRent();
external inner function Boolean HasExtTax();
external inner function Boolean HasModProd();
external inner function Boolean HasThrouLocation();
external inner function Boolean HasDepartments();
external inner function Boolean HasSecondQuantity();

external inner function Boolean HasJewelleryInterface();
external inner function Boolean HasCharts();
external inner function Boolean HasItemClassification();
external inner function string 255 VATZoneEditFieldLabelLIT(Integer);
external inner procedure RateField(real,real,real,string,integer,string,boolean,real,real,string,boolean);

SetLangMode(LangLithuanian,"LIT",2);

procedure TSERW2(Boolean gtcol)
begin
  real h,h1,h2,h3,h4,h5,v;

  h = 8; v = 60;
  h1=24; h2=h1+80; h3=h2+80; h4=h3+80; h5=h4+80;
  if (GuiType==kGuiCocoa or GuiType==kGuiiPhone) then begin
    SetWRect(20,80,670,351);
    Sizeable(-1,-1,0,0);
    MatrixBegin(h,v,-31,-20,IVSerRowType,199);
    MatCol(1,h1,"Nuo nr.",0,TSerStart,false,0);
    MatCol(1,h2,"Iki nr.",0,TSerEnd,false,0);
    MatCol(1,h3,"Nuo datos",0,StartDate,false,0);
    MatCol(1,h4,"Iki datos",0,EndDate,false,0);
    MatCol(1,h5,"Komentaras",0,TSerCom,false,0);
    MatCol(1,-170,"Exp. prefix",0,ExpPrefix,false,0);
    if (gtcol and Left(BuildProductCode,5)!="Books") then begin
      MatCol(1,-100,"D/K",0,DonotGenTrans,false,SetSClass);
    end;
  end else begin
    SetWRect(20,80,632,357);
    Sizeable(-1,-1,0,0);
    StaticText(h+h1+5,v-23,"Nr.",false);
    StaticText(h+h3+5,v-23,"Data",false);
    MatrixBegin(h,v,-31,-20,IVSerRowType,199);
    MatCol(1,h1,"Nuo",0,TSerStart,false,0);
    MatCol(1,h2,"Iki",0,TSerEnd,false,0);
    MatCol(1,h3,"Nuo",0,StartDate,false,0);
    MatCol(1,h4,"Iki",0,EndDate,false,0);
    MatCol(1,h5,"Komentaras",0,TSerCom,false,0);
    MatCol(1,-140,"Exp. prefix",0,ExpPrefix,false,0);
    if (gtcol and Left(BuildProductCode,5)!="Books") then begin
      MatCol(1,-70,"D/K",0,DonotGenTrans,false,SetSClass);
    end;
  end;
  /*The name DonotGenTrans is beacause of default value whcich is zero*/
  EndMatrix;
  //SpecialMenu("Magic Serial Help",' ',1,"MagicSerialHelp");
  return;
end;

procedure TSERW_LIT() begin
  TSERW2(HasModNL);
  return;
end;

window PIDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs;

  WindowBegin("Perkama prekė",PIDClass,CGview,-);
  SetWRect(20,80,527,380);
//  Sizeable(-1,-1,0,0);
  UseView(PIVc);
  Tile(0,90,false,"",ItemCode);
  v = 10; vs = 20; h = 80; h2 = 230; h3 = 380;
  EditField(h,v, 82,"Prekė",Normal,ItemCode,false,INSClass);
  EditField(h2,v,-40,"Aprašym.",Normal,Comment,false,0);
  EditField(h,v+=vs ,82,"Tiekėjas",Normal,VECode,false,VESClass);
  EditField(h2,v,-40,"Pavad.",Normal,VEName,false,0);
  EditField(h,v+=vs ,82,"Patalpa",Normal,Location,false,LocationSClass);
  TileButton(1,"Kaina");
  TileButton(2,"Tekstai");
  TileButton(3,"Days"); //EBS
  CheckBox(h2-30,v,0,"Pagrindinė",DefaultChoice);
  CheckBox(h2+110,v,0,"Ordered from the supplier",VEOrder);
  Tile(1,190,false,"1",PurPrice);
  EditField(h=120,v=6 ,82,"Kaina",Normal,PurPrice,true,0);
   EditField(h3,v ,70,"Pirkimo kaštai",Normal,PurchaseCost,true,0);
  EditField(h,v+=vs,50,"Valiuta",Normal,CurncyCode,true,CurncyCodeSClass);
  EditField(h3,v ,70,"Vnt. konversija",Normal,PIFactor,true,0);
  EditField(h,v+=vs ,82,"Tiekėjo prekė",Normal,VEItemCode,false,0);
  EditField(h3,v ,70,"Tiekėjo vnt.",Normal,VEUnit,false,UnitSClass);

  EditField(h,v+=vs ,82,"Norm. užs. kiekis",Normal,NormPOQty,true,0);
  EditField(h3,v ,82,"Min. užs. kiekis",Normal,MinPOQty,true,0);
  EditField(h,v+=vs ,82,"Gamintojas",Normal,Manufacturer,false,VESClass);
  EditField(h3,v ,50,"Pagaminta šalyje",Normal,OrgCountry,false,CountrySClass);
  EditField(h,v+=vs,60,"Pardavėjas",Normal,SalesMan,false,UserSClass);
  EditField(h3,v,60,"Pard. grupė",Normal,SalesGroup,false,SalesGroupSClass);
  EditField(h,v+=vs ,50,"Siuntimo dienos",Normal,PlannedDelDays,false,0);
  EditField(h,v+=vs ,50,"Min. best before days",Normal,MinBestBeforeDays,false,0); //EBS
    ButtonFrame(h3,v+=vs,123,2,"Pagr. sand. tipas");
  RadioButton(h3,v,kStockTypePurchased,0,"Pirkimai",DefStockType);
  RadioButton(h3,v+=16,kStockTypeConsignment,0,"Konsignacija",DefStockType);
  Tile(2,100,true,"2",Math);
  MatrixBegin(4,v=24,-32,-20,-,99);
  MatCol(1,24,"Tekstas",0,Text,false,0);
  EndMatrix;
  Tile(3,190,false,"1",MonFlag);
  CheckBox(h=50,v=10,0,"Mondays",MonFlag);
  CheckBox(h,v+=16,0,"Tuesdays",TueFlag);
  CheckBox(h,v+=16,0,"Wednesdays",WedFlag);
  CheckBox(h,v+=16,0,"Thursdays",ThuFlag);
  CheckBox(h,v+=16,0,"Fridays",FriFlag);
  CheckBox(h,v+=16,0,"Saturdays",SatFlag);
  CheckBox(h,v+=16,0,"Sundays",SunFlag);
  EndWindow;

  return;
end;

window INDClass:8
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer tilenr;
  real h,h1,h2,h3,h4,h5,h6,v,vm,vs;
  string 255 label;
  record CYBlock CYb;

  BlockLoad(CYb);

  WindowBegin("Prekė",INDClass,CGview,-);
  SetWRect(20,80,800,400);
  Sizeable(-1,-1,-1,0);
  DynamicWindow;
  UseView(INVc);
  Tile(0,87,false,"",Code);
  v = 6; vs = 20; h = 145; h1 = 300; h2 = 375; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"Nr.",Normal,Code,false,0);
  EditField(h2-25,v,80,"Grupė",Normal,Group,false,ITSClass);
  EditField(h5+140,v,-40,"Barcode",Normal,BarCode,false,0);
  EditField(h,v+=vs,-40,"Aprašymas",Normal,Name,false,0);
  EditField(h,v+=vs,285,"Code",Normal,AlternativeCode,false,0);
  tilenr = 1;
  TileButton(tilenr,"Kainos"); tilenr = tilenr + 1;
  TileButton(tilenr,"Sand."); tilenr = tilenr + 1;
  TileButton(tilenr,"Sand. 2"); tilenr = tilenr + 1;
  if (UserCanAction("ViewCostPrice",true)) then begin
  TileButton(tilenr,"Savikaina"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Gamyba"); tilenr = tilenr + 1;
  TileButton(tilenr,"Sąsk."); tilenr = tilenr + 1;
  TileButton(tilenr,"Įvairovės"); tilenr = tilenr + 1;
  TileButton(tilenr,"Tekstas"); tilenr = tilenr + 1;
  TileButton(tilenr,"Savik. sk."); tilenr = tilenr + 1;
  TileButton(tilenr,"Vart. laukai");
  tilenr = 1;
  CheckBox(h2+90,v,0,"Uždaryta",Terminated);
  CheckBox(h2+150,v,0,"Neparduodama",NotForSales);
  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
  EditField(h,v=6 ,100,"Vienetas",Normal,Unittext,false,UnitSClass);
  EditField(h,v+=vs,100,"Kaina",Normal,UPrice1,true,0);
  EditField(h,v+=vs,100,"Kainos pasikeitimas",ViewOnly,LastBasePriceChange,true,0);
  EditField(h,v+=vs,100,"Kainos faktorius",Normal,PriceFactor,true,0);
  EditField(h,v+=vs,100, "Prekės formulė",Normal,CalcPrice,false,CPMSClass);
  EditField(h,v+=vs,100,"Antkainio %",Normal,Markup,true,0);
  EditField(h,v+=vs,100,"Premijos %",Normal,Bonus,true,0);
  EditField(h,v+=vs,-240,"Objektai",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,-240,"Klasės",Normal,DispGroups,false,DISClass);
  EnterSkip(DispGroups);
  ButtonFrame(h1,v=24,120,4,"Prekės tipas");
  RadioButton(h1,v,kItemTypePlain,0,"Paprasta",ItemType);
  RadioButton(h1,v+=16,kItemTypeStocked,0,"Sandėliuojama",ItemType);
  RadioButton(h1,v+=16,kItemTypeStructured,0,"Struktūrinė",ItemType);
  RadioButton(h1,v+=16,kItemTypeService,0,"Paslauga",ItemType);
  EndFrame;

  Pict_Field(-205,8,-35,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"Add picture");
  end;
  CheckBox(h1,v+=32,0,"Prekė - projekto medžiaga",ItemMaterial);
  CheckBox(h1,v+=16,0,"Reikalauti galiojimo datos",EBS_ReqBestBefore); //EBS
  Tile(tilenr,170,false,tilenr,MinLevel);  tilenr = tilenr + 1; // Need to clean this Tile up!
  v = 6;
  vm = v;
  ButtonFrame(h1,v+=24,143,3,"Serijinio nr. kontrolė");
  RadioButton(h1,v,0,0,"Nėra",SerNrf);
  RadioButton(h1,v+=16,1,0,"Vnt.",SerNrf);
  RadioButton(h1,v+=16,2,0,"Siuntos",SerNrf);
    CheckBox(h1+200,v,0,"Nereikalauti siuntos nr. POS faktūrose",DonotRequireBatchNrOnIVCash);
  EditField(h,v=6,100,"Min. lygis",Normal,MinLevel,true,0);
  EditField(h,v+=vs,100,"Maks. lygis",Normal,MaxLevel,true,0);
  EditField(h,v+=vs  ,100,"Skyrius",Normal,Department,false,DepSClass);
  EditField(h,v+=vs  ,100,"Contract rate code",Normal,InvCode,false,0);
  EditField(h,v+=vs,100,"Šaltinis, nenur. kitaip",Normal,DefaultSource,false,SourceSClass);
  EditField(h5,v ,50,"Aplinkos aps. mokestis/kg.",Normal,RepaPricePerWeight,true,0);
  h6 = h5 + 160;
  EditField(h6,v ,50,"Vnt. 3",Normal,Unittext3,true,UnitSClass);
  EditField(h,v+=vs ,100,"Rizikos lygis",Normal,HazLevCode,false,HazLevSClass);
  EditField(h5,v ,50,"Wet %",Normal,AlcPrc,true,0);
  EditField(h6,v,50,"Vnt. koeficientas 3",Normal,UnitCoefficient3,true,0);
  EditField(h,v+=vs ,100,"Vnt. 2",Normal,Unittext2,false,UnitSClass);
  EditField(h5,v ,50,"Konversija 1",Normal,Conversion1,true,0);
  EditField(h6,v ,50,"Vnt. 4",Normal,Unittext4,true,UnitSClass);
  EditField(h,v+=vs,100,"Vnt. koeficientas",Normal,UnitCoefficient,true,0);
  EditField(h5,v ,50,"Konversija 2",Normal,Conversion2,true,0);
  EditField(h6,v,50,"Vnt. koeficientas 4",Normal,UnitCoefficient4,true,0);
  Tile(tilenr,170,false,tilenr,LocArea);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6) ,100,"Pagrindinė paletės prekė",Normal,DefPalletItem,true,INSClass);
  EditField(h5,v ,80,"Pakrovimo sritis",Normal,PickArea,false,LocAreaSClass);
  EditField(-120,v ,80,"Def. pick pos.",Normal,EBS_DefPickPos,false,PosSClass); //EBS
  EditField(h,v+=vs ,100,"Pagr. patalpos sritis",Normal,LocArea,false,LocAreaSClass);
  EditField(h5,v ,50,"Palečių pakrov. srityje",Normal,PalletsInPickArea,true,0);
  EditField(h,v+=vs ,50,"Maks. kiekis paletėje",Normal,QtyonPallet,true,0);
  EditField(h4,v ,50,"Paletės sl.",Normal,PalletLayers,true,0);
  EditField(h5,v ,50,"Kiekis sluoksnyje",Normal,QtyonPalletLayer,true,0);
  EditField(h,v+=vs ,50,"Pal. plotis",Normal,PalletWidth,true,0);
  EditField(h4,v ,50,"Pal. aukštis",Normal,PalletHeight,true,0);
  EditField(h5,v ,50,"Pal. gylis",Normal,PalletDepth,true,0);
  EditField(h,v+=vs ,50,"Viet. plotis",Normal,DefPosWidth,true,0);
  EditField(h4,v ,50,"Viet. aukštis",Normal,DefPosHeight,true,0);
  EditField(h5,v ,50,"Viet. gylis",Normal,DefPosDepth,true,0);
  EditField(h,v+=vs ,50,"Plotis",Normal,Width,true,0);
  EditField(h4,v ,50,"Aukštis",Normal,Height,true,0);
  EditField(h5,v ,50,"Gylis",Normal,Depth,true,0);
  EditField(h,v+=vs ,50,"Tūris",Normal,Volume,true,0);
  EditField(h4,v ,50,"Tankis",Normal,Density,true,0);
  EditField(h5,v ,50,"Neto svoris",Normal,NetWeight,true,0);
  EditField(h,v+=vs ,50,"Min. pick. area qty",Normal,UserVal1,true,0); //EBS
  EditField(h5,v ,50,"Svoris",Normal,Weight,true,0); //EBS edit
  if (UserCanAction("ViewCostPrice",true)) then begin
  Tile(tilenr,190,false,tilenr,InPrice);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),100,"Savikaina",Normal,InPrice,true,0);
  EditField(h5,v,70,"Savik. pasikeitimas",ViewOnly,LastPriceChange,true,0);
  EditField(h,v+=vs ,100,"Savik. bazine val. 2",Normal,InPriceB2,true,0);
  ButtonFrame(h1,v+=24,200,4,"Savik. atnaujinimas po gavimo");
  RadioButton(h1,v,0,0,"Nėra",UpdateCost);
  RadioButton(h1,v+=16,1,0,"Paskutinio pirkimo kaštai",UpdateCost);
  RadioButton(h1,v+=16,2,0,"Svertinis vidurkis",UpdateCost);
  RadioButton(h1,v+=16,3,0,"Paskutinio pirkimo kaina",UpdateCost);
  ButtonFrame(h5=540,v=v-3*16,200,3,"Atnaujinti savik. Sand. perkainavimuose");
  RadioButton(h5,v,0,0,"Neatnaujinti",SRUpdateCost);
  RadioButton(h5,v+=16,1,0,"Paskutinio perkainavimo savik.",SRUpdateCost);
  RadioButton(h5,v+=16,2,0,"Svert. vidurkis",SRUpdateCost);
  EditField(h,v=vm+2*vs,100,"Papildoma kaina",Normal,ExtraCost,true,0);
  EditField(h,v+=vs ,100,"Svertinis vid.",Normal,WeighedAvPrice,true,0);
  EditField(h,v+=vs ,100,"Svertinis vid. bazine val. 2",Normal,WeighedAvPriceB2,true,0);
  EditField(h,v+=vs ,100,"Pask. pirkimo vertė",Normal,LastPurchPrice,true,0);
  EditField(h,v+=vs ,100,"Pask. pirkimo kaina",Normal,LastPurchPrice2,true,0);
  EditField(h,v+=vs ,100,"Pask. pirkimo val.",Normal,LastPurchCurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,100,"Fiksuotas frachtas",Normal,FixedFreight,true,0);
  CheckBox(h1,v,0,"Įtraukti fiksuotą prekės kainą",InclItemFreight);
  end;
  Tile(tilenr,150,false,tilenr,Recepy);  tilenr = tilenr + 1;
  EditField(h,v=6 ,120,"Ruošinys",Normal,Recepy,false,RecSClass);
  CheckBox(h1,v,0,"Rodyti komponentus dokumentuose",ExplodeRec); // "Show components on documents" is better English but VERY confusing
  EditField(h,v+=vs ,120,"Faktūros ruošinys",Normal,InvRecepy,false,RecSClass);
  EditField(h2,v,150,"Brūkšn. kodas",Normal,BarCode,false,0);
  EditField(h,v+=vs ,120,"Kontrakto prekė",Normal,ContractItem,false,INSClass);
  EditField(h2,v,150,"Prek. nuom. kd.",Normal,EUCodex,false,CommoditySClass);
  EditField(h,v+=vs ,120,"Nuomos faktūravimas",Normal,RentalItem,false,INSClass);
  EditField(h2,v,150,"ECN kodas",Normal,EKNCode,false,0); // i think it is same as Commodity Code
  EditField(h,v+=vs ,120,"Garantija mėn.",Normal,WarrantyLength,true,0);
  EditField(h2,v,150,"Spalva",Normal,colnr,false,SetSClass);
  EditField(h,v+=vs,-40,"Alt. kodas",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"Perspėjimas",Normal,WarnText1,false,0);
  Tile(tilenr,130,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  v = 6;
  vm = v;
  EditField(h,vm,55,"Vietinė pard. sąsk.",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLIT & "Pardavimų sąsk.",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Ne ES pard. sąsk.",Normal,ExpSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Viet. savik. sąsk.",Normal,CostAcc,false,AccSClass);
 EditField(h,v+=vs,55,VATZoneNameLIT & "Savikainos sąsk.",Normal,EUCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Ne ES savik. sąsk.",Normal,ExpCostAcc,false,AccSClass);
  EditField(h2,v=vm,20,"Viet. PVM kd.",Normal,VATCode,false,VATCodeSClass);
  EditField(h2,v+=vs,20,VATZoneNameLIT & "PVM kodas",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h2,v+=vs,20,"Ne ES PVM kd.",Normal,VATCodeExp,false,VATCodeSClass);
  EditField(h2,v+=vs,55,"Komponentų naud.",Normal,CompUsage,false,AccSClass);
  CheckBox(h2,v+=20,0,"Skaičiuoti percepc.mokesčius",Perceptions);
   CheckBox(h2,v+=16,0,"Skaičiuoti sulaikymo mokesčius",Withholdings);
    EditField(h2=520,v=vm,50,"Viet. mok. šabl.",Normal,TaxTemplateCode,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,VATZoneNameLIT & "Mok. šabl.",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,"Eksp. mok. šabl.",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
  if (HasLocalization("GBR,LTU,POL")) then begin
	EditField(h2=680,v=vm,20,"Reverse VAT code",Normal,RvrsVATCode,false,VATCodeSClass);
  end;
  Tile(tilenr,70,false,tilenr,VARMask);  tilenr = tilenr + 1;
  EditField(h,v=6,-40,"Įvairovių šablonas",Normal,VARMask,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Ataskaitos eilė",Normal,VARRepOrder,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Poaibiai",Normal,VARSubsets,false,VARSubsetsSClass);
  Tile(tilenr,120,true,tilenr,Math);  tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-40,-,99);
  MatCol(1,24,"Kalba",0,LangCode,false,LangSClass);
  MatCol(1,94,"Tekstas",0,Text,false,0);
  EndMatrix;
  Tile(tilenr,220,false,tilenr,CostPerc);  tilenr = tilenr + 1;
  ButtonFrame(h=100,vm=(v=20),230,6,"Pirminis savikainos modelis");
  RadioButton(h,v,0,0,"Pagal nutylėjimą",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"Įsigijimo kaina",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"% _nuo bazinės kainos",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"Svertinis vidurkis",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"Eilė",PrimaryCostModel);
  RadioButton(h,v+=16,kCostModelNoneItem,0,"Jokio",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"Eilės savikainos modelis");
  RadioButton(h,v,0,0,"Pagal nutylėjimą",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"F_IFO",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"LIFO",QueuedCostModel);

  ButtonFrame(h2=380,v=vm,200,3,"Savikaina serijiniams nr.");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"Savikaina ne serijiniams nr.",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"Savikaina serijiniams nr.",FIFOPerSerialNr);
  ButtonFrame(h2,v+=40,200,3,"Eilės modelis pagal patalpą");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"Eilė ne pagal patalpą",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"Eilė pagal patalpą",FIFOPerLocation);
  ButtonFrame(h2,v+=40,200,3,"Svertinis vid. pagal patalpą");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"Svert. vid. ne pagal patalpą",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"Svert. vid. pagal patalpą",WAPerLocation);

  Tile(tilenr,240,false,tilenr,-);
  h = 180; v = 6;
  label = UserDefined("INVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v=6 ,-40,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("INVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("INVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("INVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("INVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("INVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal1,true,0);
  end;
  label = UserDefined("INVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal2,true,0);
  end;
  label = UserDefined("INVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal3,true,0);
  end;
  label = UserDefined("INVc","UserDate1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate1,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate2,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate3,true,PasteCurDate);
  end;
  SpecialMenu("Prekės būklės ataskaita",'I',0,"INStatusINDsm");
  SpecialMenu("Sukurti perkamą prekę",' ',1,"PIFromINDsm");
  SpecialMenu("Sukurti ruošinį",' ',2,"RecFromINDsm");
//  SpecMenuItem("Perskaičiuoti kainoraštį",' ',2);
  SpecialMenu("Prekės istorija",'h',3,"INrsRn_INSm");//CMD H DOES HIDE HANSA
  SpecialMenu("Prekės patalpoje būklė",' ',4,"LocItemStatDsm");
  EndWindow;

  return;
end;

window PUDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs;
  string 255 label;
  record CYBlock CYb;
  Integer tilenr;
  Integer f,flipnr,rn;

  BlockLoad(CYb);
  WindowBegin("Gavimas",PUDClass,CGview,-);
  if (HasJewelleryInterface) then begin
    SetWRect(20,80,870,620);
  end else begin
    SetWRect(20,80,750,620);
  end;
  if (HasMultiCurrency or IsEnterprise or HasObjects) then begin
  Sizeable(-1,-1,0,0);
  end;
  UseView(PUVc);
  ActiveFieldOnNew("VECode");
  FormName(PurchaseForm);
  Tile(0,74,false,"",TransDate);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Tiekėjas",Normal,VECode,false,VESClass);
    EnterSkip(TransDate);
  EditField(h=255,v=vm,-40,"Pavadinimas",Normal,VEName,false,0);
  CheckBox(h4=-100,v+=20,0,"OK",OKFlag);
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
    CheckBox(h4,v+=16,0,"Kaina su #PVM#",InclVAT);
  end else begin
    CheckBox(h4,v+=16,0,"Kaina su mok.",InclVAT);
  end;
  CheckBox(-200,v-16,0,"Importuotas",BLT_Importf); //EBS
  CheckBox(-200,v,0,"Eksportuotas",BLT_Exportf); //EBS
  tilenr = 1;
  TileButton(tilenr,"Sąlygos"); tilenr = tilenr + 1;
  TileButton(tilenr,"Prekės"); tilenr = tilenr + 1;
  if (HasMultiCurrency) then begin
    TileButton(tilenr,"Valiuta"); tilenr = tilenr + 1;
  end;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
    TileButton(tilenr,"Papild. kaštai"); tilenr = tilenr + 1;
    TileButton(tilenr,"Frachtas"); tilenr = tilenr + 1;
    end;
    TileButton(tilenr,"Komentaras"); tilenr = tilenr + 1;
  end;
  tilenr = 1;

  vs = 20; h1 = 110; h2 = 300; h3 = 550; h4 = -100;
  Tile(tilenr,70,false,tilenr,TransDate); tilenr = tilenr + 1;
  EditField(h1,vm=(v=6),82,"Operac. data",Normal,TransDate,false,PasteCurDate);
  if (IsEnterprise==false) then begin
    EditField(h2,v,-20,"Komentaras",Normal,Comment,false,0);
  end;
  if (HasMultiLocations) then begin
    v = v + vs;
    EditField(h1,v,82,"Patalpa",Normal,Location,false,LocationSClass);
  end;
  if (HasRoute) then begin
    v = v + vs;
    EditField(h1,v,82,"Maršrutas",ViewOnly,Sorting,false,0);
  end;
  v = v + vs;
  // Need a cleaner way to skip to next visible field
  if (HasObjects) then begin
    EnterSkip(Objects);
  end else begin
    if (HasModPO) then begin
      EnterSkip(PONr);
    end else begin
      if (IsEnterprise) then begin
        if (StandardHansa==false) then begin
          EnterSkip(POCOSerNr);
        end else begin
          EnterSkip(PUClass);
        end;
      end else begin
        if (HasLanguages) then begin
          EnterSkip(LangCode);
        end else begin
          if (IsEnterprise) then begin
            EnterSkip(CustomsNr);
          end else begin
            if (HasLocalization("ARG,MEX,USA")) then begin
              EnterSkip(DispatchNumber);
            end else begin
              EnterSkip(Math);
            end;
          end;
        end;
      end;
    end;
  end;
  SoftEditField(h1,v,82,"Skanuoti barkodą",Normal,"scanbarcode",false,0,M4Str,60);
  if (HasObjects) then begin
    if (IsEnterprise) then begin
  EditField(h2,v=vm,135,"Objektai",Normal,Objects,false,ObjSClass);
    end else begin
      if (HasMultiLocations) then begin
        EditField(h2,v,135,"Objektai",Normal,Objects,false,ObjSClass);
      end else begin
        v = v + vs;
        EditField(h2,v,135,"Objektai",Normal,Objects,false,ObjSClass);
      end;
    end;
  end;
  if (HasModPO) then begin
    if (HasObjects) then begin
      v = v + vs;
    end;
    EditField(h2,v,135,"Pirk. Užsk. nr.",ViewOnly,PONr,false,0);
  end;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      v = v + vs;
      EditField(h2,v,135,"Pirk. kontr.",ViewOnly,POCOSerNr,true,POCOSClass);
      EditField(h2,v+=vs,135,"Forklifter",Normal,ForkliftUser,false,UserSClass); //EBS
    end;
  EditField(h3,v=vm,80,"Pirk. Užsk. klasė",ViewOnly,PUClass,false,0);
  end;
  if (HasLanguages) then begin
    v = v + vs;
    EditField(h3,v,80,"Kalba",Normal,LangCode,false,LangSClass);
  end;
  if (IsEnterprise) then begin
    v = v + vs;
    EditField(h3,v,80,"Pirkėjo numeris",Normal,CustomsNr,false,0);
  end;
  if (HasLocalization("ARG,MEX,USA")) then begin
    v = v + vs;
    EditField(h3,v,80,"Dispatch Number",Normal,DispatchNumber,false,0);
  end;
//  CheckBox(h4,v=vm,0,"Price Incl. #VAT#",InclVAT);
  EnterSkip(Math);
  Tile(tilenr,220,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  if (HasSerialNumbers or HasLocalization("ARG,MEX,USA") or HasJewelleryInterface) then begin
    MatrixBegin(4,v,-50,-50,-,200);
  end else begin
    MatrixBegin(4,v,-25,-50,-,200);
  end;
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(1,28,"Prekė",0,ArtCode,false,INSClass);
//  MatCol(1,84,"Var",0,VARList,true,VARSClass);
//  MatCol(1,144,"Kiekis",0,Quant,true,0);
  //EBS -->
  // if (HasVarieties) then begin
  // MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
  // end else begin
  //   MatCol(1,94,"Kiekis",0,Quant,true,0);
  // end;
  // EnterSkip(Spec);
  //EBS <--
  MatText(t=3,28,"Parašas",true);
  MatCol(t,100,"",0,Sign,false,0);
  MatText(t,160,"Pataisymo data",true);
  MatCol(t,290,"Atn. data",0,UpdDate,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  //EBS -->
  if (HasVarieties) then begin
  MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Kiekis",0,Quant,true,0);
  end;
  EnterSkip(Spec);
  //EBS <--
  MatColTL(1,164,"Vnt.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  MatCol(1,194,"Kiekis 2",0,Quant2,true,0); //EBS
  MatColTL(1,244,"Vnt. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass); //EBS
  MatCol(1,284,"Aprašymas",0,Spec,false,0);
  MatCol(1,-280,"Imp.",0,ImportQuant,true,0); //EBS
  MatCol(1,-240,"Vnt. kaina",0,UPrice,true,0);
  MatCol(1,-160,"Savikaina",0,CostPrice,true,0);
  MatCol(1,-80,"Suma",0,Sum,true,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Kiekis 2",0,Quant2,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis 2",0,Quant2,true,0);
    end;
    EnterSkip(Spec);
    MatColTL(1,164,"Vnt.",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass);
    MatCol(1,204,"Aprašymas",0,Spec,false,0);
  // MatCol(1,144,"Aprašymas",0,Spec,false,0);
  //EBS <--
  MatCol(1,-350,"Patalpa",0,Location,false,LocationSClass);
  MatCol(1,-280,"Serijinis nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-150,"Galioja iki",0,BestBefore,false,0);
  MatCol(1,-60,"Siunt.būklė",0,BatchStatus,false,BatchStatusSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Aprašymas",0,Spec,false,0);
  MatColTL(1,-404,"Kaštai",0,-1,ViewOnly,-1,InPrice,false,0);
    if (StandardHansa==false) then begin
  MatColTL(1,-324,"Kainos pokytis",0,-1,ViewOnly,-1,VarianceAmount,false,0);
  MatCol(1,-244,"Vnt. kaina",0,UPrice,true,0);
  MatCol(1,-174,"Pap. kaštai",0,Extra,true,0);
  MatCol(1,-104,"Savikaina",0,CostPrice,true,0);
    end else begin
      MatCol(1,-324,"Frachtas",0,ShipCost,true,0);
      MatCol(1,-244,"Pap. kaštai",0,Extra,true,0);
      MatCol(1,-164,"Muitai",0,CustomsCost,true,0);
    end;
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
  MatCol(1,-34,"Mok-kd",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(1,-34,"PVM kd.",0,VATCode,false,VATCodeSClass);
  end;
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Aprašymas",0,Spec,false,0);
    MatCol(1,-350,"Tiek. prekės nr.",0,VEItemCode,false,PISClass);
  MatColTL(1,-270,"Tiek. vnt.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);
  MatCol(1,-200,"Tiek. kiekis",0,VEQuant,true,0);
    if (StandardHansa==false) then begin
  MatCol(1,-140,"Koeficientas",0,Coefficient,true,0);
    end;
  MatCol(1,-90,"Bazinė kaina",0,BasePrice,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Aprašymas",0,Spec,false,0);
    if (StandardHansa==false) then begin
  MatCol(1,-400,"Sand. tipas",0,StockType,false,SetSClass);
    end;
    if (HasTREO) then begin
  MatCol(1,-310,"TREO",0,TREO,false,SetSClass);
    end;
  MatCol(1,-220,"Sand. sąsk.",0,CostAcc,false,AccSClass);
  MatCol(1,-155,"Pirk. sąsk.",0,CredAcc,false,AccSClass);
  MatCol(1,-90,"Objektai",0,Objects,false,ObjSClass);
    if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
      MatCol(1,144,"Muitinės nr.",0,CustomsNr,false,0);
      MatCol(1,-340,"Muitinės data ",0,CustomsDate,false,PasteCurDate);
  MatCol(1,-240,"Kilmės šalis",0,CountryOfOrg,false,CountrySClass);
  MatCol(1,-140,"Iš vietos",0,PosCode,false,PosSClass);
  MatCol(1,-70,"Į vietą",0,ToPosCode,false,FreePosSClass);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Aprašymas",0,Spec,false,0);
  MatCol(1,-250,"Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-135,"Plotis",0,UnitXval,true,0);
  MatCol(1,-90,"Aukštis",0,UnitYval,true,0);
  MatCol(1,-45,"Gylis",0,UnitZval,true,0);
    if (StandardHansa==false) then begin
  Flip(flipnr); flipnr = flipnr + 1;
  //EBS -->
  if (HasVarieties) then begin
  MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Kiekis",0,Quant,true,0);
  end;
  EnterSkip(Spec);
  //EBS <--
      MatCol(1,144,"Papild. kaštai",0,Extra,true,0);
  MatCol(1,-420,"Frachtas",0,ShipCost,true,0);
  MatCol(1,-360,"Muitai",0,CustomsCost,true,0);
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Kaštai 1";end;
  MatCol(1,-300,label,0,RowCost1,false,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Kaštai 2";end;
  MatCol(1,-240,label,0,RowCost2,false,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Kaštai 3";end;
  MatCol(1,-180,label,0,RowCost3,false,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Kaštai 4";end;
  MatCol(1,-120,label,0,RowCost4,false,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Kaštai 5";end;
  MatCol(1,-60,label,0,RowCost5,false,0);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
    MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(Spec);
    //EBS <--
  MatCol(1,144,"Pirk.už.nr.",0,PONr,false,POSClass);
  MatCol(1,194,"Pirk.už.eil.",0,OrdRow,false,0);
  MatCol(1,-370,"Pirk.už.persk.",0,PORecon,false,0);
  MatCol(1,-310,"Komentaras",0,POReconComment,false,0);
  MatCol(1,-200,"Fakt. persk.",0,VIRecon,false,0);
  MatCol(1,-130,"Komentaras",0,VIReconComment,false,0);
  end else begin
    if (HasSerialNumbers) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      //EBS -->
      if (HasVarieties) then begin
      MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
      end else begin
        MatCol(1,94,"Kiekis",0,Quant,true,0);
      end;
      EnterSkip(Spec);
      //EBS <--
      MatCol(1,144,"Aprašymas",0,Spec,false,0);
      MatCol(1,-150,"Serijinis Nr.",0,SerialNr,false,SerialNrSClass);
    end;
/*
    MatCol(1,-280,"Vnt. kaina",0,UPrice,true,0);
    MatCol(1,-210,"Frachtas",0,ShipCost,true,0);
    MatCol(1,-140,"Papild. kaštai",0,Extra,true,0);
    MatCol(1,-70,"Savikaina",0,CostPrice,true,0);
*/
  end;
  //EBS-->
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,94,"Aprašymas",0,Spec,false,0);
  if (HasVarieties) then begin
    MatCol(1,-500,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,-500,"Kiekis",0,Quant,true,0);
  end;
  MatColTL(1,-440,"Vnt.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  if (HasVarieties) then begin
    MatCol(1,-380," Kiekis 2",0,Quant2,true,MATVARINSClass);
  end else begin
    MatCol(1,-380,"Kiekis 2",0,Quant2,true,0);
  end;
  MatColTL(1,-330,"Vnt. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass);
  MatCol(1,-280,"Serijinis Nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-150,"Galioja iki",0,BestBefore,false,0);
  MatCol(1,-70,"Į vietą",0,ToPosCode,false,FreePosSClass);
  //EBS<--
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  if (StandardHansa==false) then begin
    if (HasSerialNumbers) then begin
      RowMenuItem(0,"Atidaryti siuntos specifikaciją",' ',' ',0,"OpenBatchPUDsm");
    end;
    RowMenuItem(0,"Padalinti eilutę",' ',' ',0,"SplitRowPUDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
//  v = 18;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  EditField(110,-41,70,"Viso kiekis",ViewOnly,SumQuant,true,0);
//  EditField(110,-21,70,"Price Subtotal",Normal,SubTotal,true,0); //Shows the same as SumCostPrice?
  EditField(260,-41,70,"Frachtas",Normal,ShipCost,true,0);
  if (IsEnterprise) then begin
  EditField(260,-21,70,"Muitai",Normal,CustomsCost,true,0);
  end;
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
    EditField(410,-41,70,"#PVM#",Normal,VATVal,true,0);
    if (HasExtTax) then begin
      EditField(410,-21,70,"Pap. kaštai",ViewOnly,TAX1Sum,true,0);
    end;
  end else begin
    EditField(410,-41,70,"Mok.",Normal,VATVal,true,0);
  end;
  EditField(-169,-41,118,"Tarp. suma",ViewOnly,SumCostPrice,true,0);
  EditField(-169,-21,118,"VISO",ViewOnly,PayVal,true,0);
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
  vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
  EditField(h1,v=6,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
    if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bazinė valiuta 1",Normal,BaseRate1,true,0);
    end else begin
        EditField(h1,v+vs,50,"Baz. val.",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Baz. val. 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Kursas",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val.",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Baz. val. 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Baz. val. 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,120,false,tilenr,Cost1); tilenr = tilenr + 1;
  vs = 20;
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Papild. kaštai 1";end;
  EditField(h=110,v=6,70,label,Normal,Cost1,false,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Papild. kaštai 2";end;
  EditField(h2=295,v,70,label,Normal,Cost2,false,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Papild. kaštai 3";end;
  EditField(h,v+=vs,70,label,Normal,Cost3,false,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Papild. kaštai 4";end;
  EditField(h2,v,70,label,Normal,Cost4,false,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Papild. kaštai 5";end;
  EditField(h,v+=vs,70,label,Normal,Cost5,false,0);
    if (HasApprovals) then begin
      SoftEditField(h2,v,123,"Patvirtinimo statusas",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
    end;
  ButtonFrame(h3=400,v=16,130,2,"Papild. kaštų skaičiavimas");
  RadioButton(h3,v,0,0,"Vertė",ExtraCostsCalculation);
  RadioButton(h3,v+=16,1,0,"Svoris",ExtraCostsCalculation);
/*
//oldapprovals
    ButtonFrame(h3=-163,v=16,123,6,"Patvirtinimo būklė");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nereikalaujamas",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nepradėtas",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nereikalautas",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Aktyvus",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Patvirtintas",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Atmestas",AcceptanceStatus);
*/
    Tile(tilenr,130,false,tilenr,FreightCode); tilenr = tilenr + 1;
  EditField(h1,v=6,80,"Frachto įmonė",Normal,FreightCode,false,FreightCompanySClass);
  EditField(h1,v+=vs,-20,"Pavadinimas",Normal,FreightCompany,false,0);
  EditField(h1,v+=vs,-20,"Reg.Nr.",Normal,FreightCompanyRegNr,false,0);
  EditField(h1,v+=vs,-20,"Maš. inform.",Normal,TruckInfo,false,0);
  EditField(h1,v+=vs,-20,"Vairuotojas",Normal,Driver,false,0);
  EditField(h1,v+=vs,-20,"CMR",Normal,CMRText,false,0); // International transporting number
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1,v=6,-20,"Komentaras",Normal,Comment,false,0);
  end;
  if (StandardHansa==true) then begin
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1,v=6,-20,"Komentaras",Normal,Comment,false,0);
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Gavimo būklė",'r',4,"PUStatusDsm");
    SpecialMenu("Generuoti serijinius nr.",' ',2,"GenSerialNosPUDsm");
    if (HasIntegratedNL) then begin
      SpecialMenu("Atidaryti D/K operaciją",'t',4,"OpenTRFromPU");
    end;
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
    if (HasModPL) then begin
      SpecialMenu("Sukurti Pirkimo faktūrą",'F',3,"VIFromPUDsm");
    end;
    if (HasRetGoodsToSupp and HasModIN) then begin
      SpecialMenu("Sukurti Prekių grąžinimą",'B',7,"RetPUFromPUDsm");
    end;
  end else begin
  if (IsEnterprise) then begin
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  SpecialMenu("Gavimo būklė",'r',4,"PUStatusDsm");
  end;
  if (HasSerialNumbers) then begin
  	SpecialMenu("Sukurti serijinius nr.",' ',2,"GenSerialNosPUDsm");
  end;
    if (HasIntegratedNL) then begin
  SpecialMenu("Atidaryti D/K operaciją",'t',4,"OpenTRFromPU");
  end;
  if (HasTaxMatrix) then begin
  SpecialMenu("Atidaryti mok. matricą",' ',25,"OpenVatMatrixPUDsm");
  end;
  SpecialMenu("Spausdinti etiketes",'e',0,"PrintPULabPUDsm");
  SpecialMenu("Print Pallet Labels",'w',0,"BLT_PrintPUPalletLabPUDsm"); //EBS
  SpecialMenu("Perkelti importuotus kiekius",' ',0,"BLT_TransImpQuantPUDsm"); //EBS
  SpecialMenu("Atnaujinti prekes",' ',1,"UpdatePricesPUDsm");

  if (HasModWHM) then begin
    SpecialMenu("Patvirtinti sandėlio vald. perkėlimus",' ',9,"OKStockMovPUrDsm");
  end;
  if (HasLocalization("HRV")) then begin
    SpecialMenu("Sales Price Calculation",' ',8,"SPCHRVPUDsm");
  end;
  if (HasApprovals) then begin
    SpecialMenu("Patvirtinimo užklausa",' ',6,"PUSendforAcceptancePUDsm");
    SpecialMenu("Atšaukti patvirtinimo užklausą",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModPL) then begin
  SpecialMenu("Sukurti pirkimo faktūrą",'F',3,"VIFromPUDsm");
  end;
  if (HasQualityControl) then begin
  SpecialMenu("Kokybės kontrolė",'u',10,"QualConFromPUDsm");
//SpecialMenu("Update Mark",' ',6,"UpdateMarkPUDsm");
  end;
    if (HasAdvancedStock or (HasRetGoodsToSupp and HasModIN)) then begin
  SpecialMenu("Sukurti prekių grąžinimą",'B',7,"RetPUFromPUDsm");
  end;
  if (HasModRent) then begin
//SpecialMenu("Sukurti sandėlio perkėlimą",' ',5,"StockMovFromPUSpec");
//SpecialMenu("Scan",' ',8,"ScanBarCodePUDsm");
  SpecialMenu("Sukurti sandėlio perdavimą",' ',8,"INTransFromPUsm");
  end;
    SpecialMenu("Pridėti tiekėją",' ',0,"AddSupplierPUDsm");
    SpecialMenu("Pridėti prekę",' ',0,"AddItemPUDsm");
  end;
  EndWindow;
end;

window SHDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs;
  Integer tilenr,f,flipnr,rn;

  WindowBegin("Siuntimas",SHDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(SHVc);
  vs = 20;
  Tile(0,74,false,"",SerNr);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Pirkėjas",ViewOnly,CustCode,false,0);
  EditField(h=255,v=vm,-40,"Pavadinimas",Normal,Addr0,false,0);
  v = v + vs;
  if (HasOfficialSerNr and (HasLocalization("AGO")==false)) then begin
    EditField(h,vm=v,135,"Oficialus Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  end;
  if (HasTREO) then begin
    EditField(h+230,vm,95,"TREO Nr.",Normal,TREONr,false,0);
  end;
  CheckBox(h4=-100,v,0,"OK",OKFlag);
  tilenr = 1;
  if (IsEnterprise) then begin
    TileButton(tilenr,"Terminai"); tilenr = tilenr + 1;
    TileButton(tilenr,"Prekės"); tilenr = tilenr + 1;
    TileButton(tilenr,"Siunt. sąl."); tilenr = tilenr + 1;
    TileButton(tilenr,"Pakavimas"); tilenr = tilenr + 1;
    TileButton(tilenr,"Siunt. adresas"); tilenr = tilenr + 1;
    TileButton(tilenr,"Komentaras"); tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
    TileButton(tilenr,"Frachtas"); tilenr = tilenr + 1;
    end;
  end else begin
    TileButton(tilenr,"Komentaras"); tilenr = tilenr + 1;
    TileButton(tilenr,"Prekės"); tilenr = tilenr + 1;
    TileButton(tilenr,"Adresas"); tilenr = tilenr + 1;
    if (HasLocalization("PRT")) then begin
      if (HasModIN and HasModSL) then begin
        TileButton(tilenr,"Packaging"); tilenr = tilenr + 1;
      end;
      TileButton(tilenr,"Freight"); tilenr = tilenr + 1;
    end;
  end;
  tilenr = 1;
  Tile(tilenr,70,false,tilenr,ShipDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Data",Normal,ShipDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    v = v + vs;
    EditField(h1,v,82,"Patalpa",Normal,Location,false,LocationSClass);
  end;
  if (HasRoute) then begin
    v = v + vs;
    EditField(h1,v,82,"Maršrutas",Normal,Sorting,false,DelRouteSClass);
  end;
  if (IsEnterprise) then begin
    v = v + vs;
    SoftEditField(h1,v,82,"Skanuoti barkodą",Normal,"scanbarcode",false,0,M4Str,60);
  end;
  if (HasObjects) then begin
  EditField(h2,v=vm,135,"Objektai",Normal,Objects,false,ObjSClass);
  end;
  if (HasBranch) then begin
    v = v + vs;
    EditField(h2,v,135,"Filialas",ViewOnly,BranchID,false,0);
  end;
  if (HasMultiLocations or HasModTS) then begin
    v = v + vs;
  end;
  if (HasModTS) then begin
    EditField(h2,v,135,"Projektas",ViewOnly,PRCode,false,0);
  end;
  if (HasObjects) then begin
    EditField(h3,v=vm,80,"Užs. nr.",ViewOnly,OrderNr,false,0);
  end else begin
    if (IsEnterprise==false) then begin
      if (HasModTS) then begin
        EditField(h3,v=vm,135,"Užs. Nr.",ViewOnly,OrderNr,false,0); //!!TRANSLATE
      end else begin
      EditField(h2,v=vm,135,"Užs. Nr.",ViewOnly,OrderNr,false,0);
      end;
    end;
  end;
  if (IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Užsk. klasė",Normal,SHClass,false,OrderClassSClass);
  CheckBox(h4,v=6,0,"Sms žinutė",Check1);
  end;
  if (IsEnterprise==false) then begin
    if (HasMultiLocations) then begin
      EditField(h1,v+=2*vs,-40,"Komentaras",Normal,Comment,false,0);
    end else begin
      EditField(h1,v+=vs,-40,"Komentaras",Normal,Comment,false,0);
    end;
    if (HasLanguages) then begin
      EditField(h1,v+=vs,82,"Kalba",Normal,LangCode,false,LangSClass);
    end;
  end;
  CheckBox(h3-190,50,0,"EDI Imported",BLT_EDIImportf);  //EBS
  CheckBox(h3-80,50,0,"Importuotas",BLT_Importf);  //EBS
  CheckBox(h3+30,50,0,"Eksportuotas",BLT_Exportf); //EBS
  HalPushButton(h3,80,-20,100,"SHVc_ReadWeightBtn","Read weight"); //EBS
  Tile(tilenr,190,true,tilenr,Math); tilenr = tilenr + 1;
  v = 20;
  MatrixBegin(4,v,-50,-35,-,200);
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
//  MatCol(1,94,"Var",0,VARList,false,VARSClass);
//  MatCol(1,144,"Aprašymas",0,Spec,false,0);
  MatCol(1,94,"Aprašymas",0,Spec,false,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,false,VARSClass);
//  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,94,"Aprašymas",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeHidden,32,"Ši ir sekančios eilutės bus paslėptos spausdinant",false);
  t = kInvoiceRowTypePerceptionTax;
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasCustItem) then begin
    MatCol(1,-350,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass);
  end;
  MatColTL(1,-280,"Patv. pirk.",0,M45Val,ViewOnly,0,QuantConfByCust,true,0); //EBS
  MatCol(1,-200,"Import.",0,ImportQuant,true,0);
  MatCol(1,-150,"Užsakyta",0,Ordered,true,0);
  MatCol(1,-98,"Turima",0,InStock,true,0);
  MatCol(1,-50,"Siunč. kiekis",0,Ship,true,0);
  if (HasCustItem) then begin
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-230,"Pirk. prek. nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-150,"Užsakyta",0,Ordered,true,0);
  end else begin
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,-147,"Užsakyta",0,Ordered,true,0);
  end;
  MatCol(t,-98,"Galim.",0,InStock,true,0);
  MatCol(t,-50,"Siunt. kiekis",0,Ship,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  if (IsEnterprise==false) then begin
    if (HasSerialNumbers) then begin
      MatCol(1,-350,"Serial. Nr.",0,SerialNr,false,SerialNrSClass);
    end;
    if (HasObjects) then begin
      MatCol(1,-250,"Objektai",0,Objects,false,ObjSClass);
    end;
    MatCol(1,-98,"Sand. vertė",0,FIFORowVal,false,0);
    if (HasLocalization("RUS")) then begin
      Flip(flipnr); flipnr = flipnr + 1;
      MatCol(1,-230,"Vienetas",0,UnitCode,false,UnitSClass);
      MatCol(1,-180,"Vnt. pav.",0,UnitComment,false,0);
    end;
  end else begin
		MatCol(1,-350,"Ser. nr.",0,SerialNr,false,SerialNrSClass);
		MatCol(1,-250,"Galioja iki",0,BestBefore,false,0);
		MatCol(1,-150,"Patalpa",0,Location,false,LocationSClass);
    if (HasPositions) then begin
      MatCol(1,-50,"Vieta",0,PosCode,false,UsedPosSClass);
    end;
		MatCol(t=kInvoiceRowTypeStructuredItemComponent,-350,"Ser. nr.",0,SerialNr,false,SerialNrSClass);
		MatCol(t,-250,"Gal. data",0,BestBefore,false,0);
		MatCol(t,-150,"Patalpa",0,Location,false,LocationSClass);
    if (HasPositions) then begin
      MatCol(t,-50,"Pozicija",0,PosCode,false,UsedPosSClass);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
		MatCol(1,-400,"BuyBack Pr.",0,BBCostPrice,false,0);
		MatCol(1,-320,"Eilutės FIFO",0,FIFORowVal,false,0);
    if (StandardHansa==false) then begin
      MatCol(1,-220,"Sv. vid. baz. val. 2",0,WAB2,false,0);
    end;
		MatCol(1,-120,"Pard. kaina",0,BasePrice,false,0);
		MatCol(1,-40,"Koef.",0,Coefficient,false,0);
		MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"BuyBack Pr.",0,BBCostPrice,false,0);
		MatCol(t,-320,"Eilutės FIFO",0,FIFORowVal,false,0);
    if (StandardHansa==false) then begin
      MatCol(t,-220,"Sv. vid. baz. val. 2",0,WAB2,false,0);
    end;
		MatCol(t,-120,"Pard. kaina",0,BasePrice,false,0);
		MatCol(t,-40,"Koef.",0,Coefficient,false,0);
    Flip(flipnr); flipnr = flipnr + 1;
		MatCol(1,-400,"Ruošinys",0,Recepy,false,0);
		MatCol(1,-320,"ŠŠaltinis",0,Source,false,SourceSClass);
		MatCol(1,-240,"Faktūruota",0,Invd,false,0);
    if (StandardHansa==false) then begin
			MatCol(1,-160,"Siuntimo data",0,DespatchRowDate,false,PasteCurDate);
			MatCol(1,-80,"Siuntimo laikas",0,DespatchRowTime,false,PasteCurTime);
    end;
		MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"Ruošinys",0,Recepy,false,0);
		MatCol(t,-300,"Šaltinis",0,Source,false,SourceSClass);
		MatCol(t,-240,"Faktūruota",0,Invd,false,0);
    if (StandardHansa==false) then begin
			MatCol(t,-160,"Siuntimo data",0,DespatchRowDate,false,PasteCurDate);
			MatCol(t,-80,"Siuntimo laikas",0,DespatchRowTime,false,PasteCurTime);
    end;
    Flip(flipnr); flipnr = flipnr + 1;
		MatCol(1,-400,"Pardavimų sąsk.",0,SalesAcc,false,AccSClass);
		MatCol(1,-330,"Savikainos sąsk.",0,CostAcc,false,AccSClass);
		MatCol(1,-250,"Objektai",0,Objects,false,ObjSClass);
		MatCol(1,-135,"Plotis",0,UnitXval,true,0);
		MatCol(1,-90,"Aukštis",0,UnitYval,true,0);
		MatCol(1,-45,"Gylis",0,UnitZval,true,0);
		MatCol(t=kInvoiceRowTypeStructuredItemComponent,-400,"Pard. sąsk.",0,SalesAcc,false,AccSClass);
		MatCol(t,-330,"Savik. sąsk.",0,CostAcc,false,AccSClass);
		MatCol(t,-250,"Objektai",0,Objects,false,ObjSClass);
		MatCol(t,-135,"Plotis",0,UnitXval,true,0);
		MatCol(t,-90,"Aukštis",0,UnitYval,true,0);
		MatCol(t,-45,"Gylis",0,UnitZval,true,0);
    if (StandardHansa==false) then begin
      Flip(flipnr); flipnr = flipnr + 1;
			MatCol(1,-300,"Įpakavimai",0,RowPackages,false,0);
			MatCol(1,-220,"Įp. tipas",0,PackageType,false,PackTypeSClass);
			MatCol(1,-170,"Įp. apraš.",0,PackageDesc,false,0);
			MatCol(1,-70,"Akcizas",0,ExciseNr,false,0);
			MatCol(t=kInvoiceRowTypeStructuredItemComponent,-300,"Pakuotės",0,RowPackages,false,0);
			MatCol(t,-220,"Pak. tipas",0,PackageType,false,PackTypeSClass);
			MatCol(t,-170,"Pak. apr.",0,PackageDesc,false,0);
			MatCol(t,-70,"Akcizo",0,ExciseNr,false,0);
    end;
  end;
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Prekės būklė",'I','I',0,"ItemStatusSHDsm");
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
      RowMenuItem(0,"Išskleisti eilutę",' ',' ',0,"SplitRowSHDsm");
    end;
  end;
  EndRowMenu;
  EndMatrix;
  vs = 22;
//  v = 21;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;

//  CheckBox(20,-20,0,"OK",OKFlag);
  if (HasLocalization("PRT")) then begin
    EditField(120,-20,150,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
//    SoftEditField(120,-20,150,"Tax Auth. Approval",Normal,"TaxAdminServSeal",false,0,M4Str,200);
  end;
  EditField(-131,-20,80,"Viso kiekis",ViewOnly,TotQty,true,0);
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,ShipMode); tilenr = tilenr + 1;
  vs = 20;
  EditField(h1,v=vm,82,"Siunt. būdas",Normal,ShipMode,false,DMSClass);
  EditField(h1,v+=vs,80,"Mok. suma",ViewOnly,TAX1Sum,true,0);
    if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Dekl. vertė",Normal,DeclaredVal,true,0);
  EditField(h1,v+=vs,-20,"E-siunt. būklė",ViewOnly,EShipStatus,false,0);
      if (HasLocalization("BRA,BOL,PRT")) then begin
        EditField(h1,v+=vs,80,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
      end;
    end;
  EditField(h2,v=vm,80,"Viso kiekis",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Viso svoris",Normal,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Viso kiekis",Normal,TotVolume,true,0);
  CheckBox(473,v=vm,0,"Naudoti fakt. adresą",Check2);
    if (StandardHansa==false) then begin
  CheckBox(473,v+=16,0,"Sukurtas elektroninis siuntimas",EShipmentCreated);
  CheckBox(473,v+=16,0,"Surinktas elektroninis siuntimas",EShipCollected);
    end;
    Tile(tilenr,110,false,tilenr,Packages); tilenr = tilenr + 1;
    h2 = 310;
  EditField(h1,v=6,82,"Transporto nr.",Normal,TransportNumber,false,0);
  EditField(h1,v+=vs,82,"Pakuotės",Normal,Packages,true,0);
    if (HasLanguages) then begin
  EditField(h1,v+=vs,82,"Kalba",Normal,LangCode,false,LangSClass);
    end;
  EditField(h1,v+=vs,82,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (StandardHansa==false) then begin
  EditField(h1,v+=vs,-20,"Transp. kryptys",Normal,TransportDirect,false,0);
      EditField(h1,v+=vs,80,"Plan. siunt. data",Normal,PlanSendDate,false,PasteCurDate);
      EditField(h1,v+=vs,80,"Plan. siunt. laikas",Normal,PlanSendTime,false,PasteCurTime);
    end;

  EditField(h2,v=6,135,"Iš miesto",Normal,FromCity,false,0);
  EditField(h2,v+=vs,135,"Į miestą",Normal,ToCity,false,0);
  EditField(h2,v+=vs,135,"Iš uosto",Normal,FromDock,false,0);
  EditField(h2,v+=vs,135,"Į uostą",Normal,ToDock,false,0);
    if (StandardHansa==false) then begin
      EditField(h2,v+=2*vs,80,"Plan. atvyk. data",Normal,PlanArrDate,false,PasteCurDate);
      EditField(h2,v+=vs,80,"Plan.atvyk. laikas",Normal,PlanArrTime,false,PasteCurTime);
    end;
  end;
  Tile(tilenr,150,false,tilenr,Addr1); tilenr = tilenr + 1;
  vs = 20;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
  EditField(h1,v=6,80,"Adreso kodas",Normal,DelAddrCode,false,DelAddr3SClass);
  EditField(h1,v+=vs,-20,"Siuntimas",Normal,Addr1,false,0);
    end else begin
      EditField(h1,v=6,-20,"Siuntimas",Normal,Addr1,false,0);
    end;
  EditField(h1,v+=vs,-20,"Adresas",Normal,Addr2,false,0);
  end else begin
    EditField(h1,v=6,-20,"Adresas",Normal,Addr1,false,0);
    EditField(h1,v+=vs,-20,"",Normal,Addr2,false,0);
  end;
  EditField(h1,v+=vs,-20,"",Normal,Addr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (HasCountryPerCustomer) then begin
  EditField(h1,v+=vs,80,"Šalis",Normal,DelCountry,false,CountrySClass);
    if (HasLocalization("BRA")) then begin
      EditField(h2-109,v,232,"",ViewOnly,DelCountryName,false,0);
    end;
  end;
  if (IsEnterprise) then begin
  EditField(h3,v,-20,"Regionas",Normal,Region,false,RegionSClass);
    Tile(tilenr,30,false,tilenr,Comment); tilenr = tilenr + 1;
    EditField(h1+10,v=6,-20,"Komentaras",Normal,Comment,false,0);
    EditField(h1+10,v+=20,-20,"Pard. kontrakto tipas",Normal,ORCOType,false,0);
    if (HasNumberSeries and HasLocalization("PRT")) then begin
      if (HasOfficialSerNr) then begin
        EditField(h1+10,v+=vs,100,"Oficialus ser. nr. 2",Normal,OfficialSerNr2,false,0);
        EditField(h2,v,135,"Būklė",Normal,Status,false,SetSClass);
      end;
    end;
  end else begin
    if (HasLocalization("RUS")) then begin
      EditField(h1,v+=vs,80,"Total Weight",Normal,TotWeight,true,0);
    end;
  end;
  if (IsStandardProduct and HasLocalization("PRT,LTU") and HasModIN and HasModSL) then begin
    Tile(tilenr,110,false,tilenr,PlanSendDate); tilenr = tilenr + 1;
    h2 = 310;
    EditField(h1,v=6,80,"Plan. Sent Date",Normal,PlanSendDate,false,PasteCurDate);
    EditField(h1,v+=vs,80,"Plan. Sent Time",Normal,PlanSendTime,false,PasteCurTime);
    if (HasLocalization("PRT")) then begin
      EditField(h2,v=6,80,"Plan. Arrival Date",Normal,PlanArrDate,false,PasteCurDate);
      EditField(h2,v+=vs,80,"Plan. Arrival Time",Normal,PlanArrTime,false,PasteCurTime);
    end;
  end;
  if (IsEnterprise or HasLocalization("PRT,LTU")) and (StandardHansa==false) then begin
    Tile(tilenr,130,false,tilenr,FreightCode); tilenr = tilenr + 1;
    if (IsEnterprise) then begin
      HalPushButton(473,2,600,22,"UpdateSHPackages","Paketai");
    end;
    EditField(h1,v=6,80,"Frachto įmonė",Normal,FreightCode,false,FreightCompanySClass);
    EditField(h1,v+=vs,-20,"Pavadinimas",Normal,FreightCompany,false,0);
    EditField(h1,v+=vs,-20,"#Reg. Nr.#",Normal,FreightCompanyRegNr,false,0);
    EditField(h1,v+=vs,-20,"Sunkv. informacija",Normal,TruckInfo,false,0);
    if (IsEnterprise or HasLocalization("PRT")) then begin
      EditField(h1,v+=vs,-20,"Vairuotojas",Normal,Driver,false,0);
      EditField(h1,v+=vs,-20,"CMR",Normal,CMRText,false,0); // International transporting number
    end;
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Prekės būklė",'I',2,"ItemStatusSHDsm");
    if (HasIntegratedNL) then begin
      SpecialMenu("Atidaryti D/K operaciją",'t',3,"OpenTRFromSH");
    end;
    SpecialMenu("Spausdinti frachto etiketes",'l',0,"PrintSHLabSHDsm");
    if (HasReturnedGoods and HasModIN) then begin
      SpecialMenu("Sukurti Prekių grąžinimą",'B',5,"RetFromSHSpec");
    end;
  end else begin
  SpecialMenu("Spausdinti frachto etiketes",'l',0,"PrintSHLabSHDsm");
  SpecialMenu("Perkelti importuotus kiekius",' ',0,"BLT_TransImpQuantSHDsm"); //EBS
  if (IsEnterprise) then begin
  SpecialMenu("Perskaičiuoti svorį",'w',1,"SHCalcWeightDsm");
  end;
  if (HasIntegratedNL) then begin
  SpecialMenu("Atidaryti D/K operaciją",'t',3,"OpenTRFromSH");
  end;
  if (HasLocalization("SWE")) then begin
   SpecialMenu("ASG eksportas",' ',4,"ASGEnSHDsm"); /* Specific for Sweden */
  end;
  if (HasLocalization("NOR")) then begin
   SpecialMenu("Winedi eksportas",' ',4,"WinEDIEnSHDsm"); /* Specific for Norway */
  end;
  if (HasLocalization("PRT")) then begin
    if (HasETaxDocuments) then begin
    SpecialMenu("Send to Tax Authorities",'',10,"EShipPRTDsm");  //tax authorities server is down
    end;
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Papildyti siuntos nr. prekes",' ',6,"INBatchSHSpec");
  end;
  if (HasModWHM) then begin
  SpecialMenu("OK sandėlio vald. perkėlimus",' ',8,"OKStockMovSHrDsm");
  SpecialMenu("Sandėlio vald. surinkimo sąrašą",' ',9,"PickingListDsm");
  end;
//  SpecialMenu("Calculate Manually",' ',10,"CalcSHMan"); /* Specific for one customer in Portugal, you may comment it out */
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
    SpecialMenu("Registruoti elektroninį pristatymą",' ',9,"EShipRegisterDsm");
    end;
    if (GuiType==kGuiiPhone) then begin
      SpecialMenu("Pasirašyti",' ',10,"SignSHDsm");
    end;
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModSL) then begin
    SpecialMenu("Faktūra",'F',1,"IVFromSHDsm");
  end;
  if (IsEnterprise or HasReturnedGoods) then begin
    SpecialMenu("Sukurti prekių grąžinimą",'B',2,"RetFromSHDsm");
  end;
  end;
  EndWindow;

  return;
end;

window ProdDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vm,vs;
  Integer rn,flipnr,f;

  WindowBegin("Gaminys",ProdDClass,CGview,-);
  SetWRect(20,80,620,333);
  Sizeable(-1,-1,0,0);
  UseView(ProdVc);
  FormName(ProdOrderForm);
  ActiveFieldOnNew("Recepy");
  Tile(0,195,false,"",SerNr);
  vs = 20; h = 70; h2 = 390; v = 10; h3 = 500; h4 = 220;
  EditField(h,v,80,"Nr.",St_i,SerNr,false,TSerSClass);
  EditField(h4,v,250,"Pavad.",Normal,RecName,false,0);
  EditField(h,v+=vs,80,"Ruošinys",Normal,Recepy,false,RecSClass);
  EditField(h4,v,80,"Pradž. data",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,80,"Pabaig. data",Normal,ProdDate,false,PasteCurDate);
  EditField(h,vm=(v+=vs),80,"Kiekis",Normal,Qty,true,0);
  if (IsEnterprise) then begin
  EditField(h4,v,80,"Pradžios laikas",Normal,StartTime,false,PasteCurTime);
  EditField(h2,v,80,"Pabaigos laikas",Normal,EndTime,false,PasteCurTime);
  end;
  if (HasMultiLocations) then begin
  EditField(h,v+=vs,80,"Patalpa",Normal,Location,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h4,v,80,"Klasė",Normal,ProdClass,false,ProdClassSClass);
  EditField(h2,v,80,"Įrenginys",Normal,FixAssCode,false,AT2UnitSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h,v+=vs,80,"Inspektorius",Normal,Inspector,false,UserSClass);
  end;
  if (HasPersons) then begin
  EditField(h2,v,80,"Asmuo",Normal,Person,false,UserSClass);
  end;
//  EditField(h2,v,80,"In Item Scale",Normal,Scale,false,0);
  if (IsEnterprise) then begin
    EditField(h,v+=vs,80,"Gam. Užsk.",ViewOnly,ProdOrder,false,0);
    EditField(h2,v,80,"Išardymo priežastis",Normal,StandProblem,false,StandProblemsSClass);
  end else begin
    EditField(h2,v+=vs,80,"Išardymo priežastis",Normal,StandProblem,false,StandProblemsSClass);
  end;
  if (IsEnterprise) then begin
    EditField(h,v+=vs,80,"Kiekis",ViewOnly,ActualQty,true,0);
    EditField(h2,v,80,"Maršrutizavimas",Normal,Routing,false,RoutingSClass);
  end;
  EditField(h,v+=vs,80,"Box item",Normal,DefBoxItem,false,BLT_BoxItemsSClass); //EBS
  EditField(h2,v,80,"Qty in box",Normal,QtyInBox,true,0); //EBS
//  ButtonFrame(h3,v+=36,80,3,"Inspection");
//  RadioButton(h3,v,0,0,"Neatlikta",InspectStatus);
//  RadioButton(h3,v+=16,1,0,"OK",InspectStatus);
//  RadioButton(h3,v+=16,2,0,"Faulty",InspectStatus);
  TileButton(1,"Prekės");
  TileButton(2,"Komentaras");
//  CheckBox(370,v,0,"Reserved",Reserved);
  ButtonFrame(h3,v=20,150,5,"Būklė");
  RadioButton(h3,v,0,0,"Sukurtas",PRStatusFlag);
  RadioButton(h3,v+=16,4,0,"Nutrauktas",PRStatusFlag);
  RadioButton(h3,v+=16,2,0,"Pradėtas",PRStatusFlag);
  RadioButton(h3,v+=16,3,0,"Baigtas",PRStatusFlag);
  RadioButton(h3,v+=16,5,0,"Baigtas bet išardytas",PRStatusFlag);
  HalPushButton(h3,v+=20,-20,V+20,"ProdVc_ReadWeightBtn","Read weight"); //EBS
  HalPushButton(h3,v+20,-20,v+20,"ProdVc_PrintLabelsBtn","Print labels"); //EBS
  Tile(1,120,true,"1",Math);
  v=20;
  MatrixBegin(4,v,-50,-30,-,300);
  Flip(0);
  MatCol(1,34,"Prekė",0,Item,false,INSClass);
  MatCol(1,110,"Aprašymas",0,Comment,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasSerialNumbers) then begin
  MatCol(1,-375,"Ser. Nr.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-310,"Į",0,InQty,true,MATVARINSClass);
  MatCol(1,-260,"Iš",0,OutQty,true,MATVARINSClass);
  if (IsEnterprise) then begin
  MatCol(1,-210,"Siunt.",0,RelVal,true,0);
  end;
  MatCol(1,-160,"Kaštai",0,ItemCost,true,0);
  if (IsEnterprise) then begin
  MatCol(1,-100,"Papild.",0,ExtraCost,true,0);
  end;
  MatCol(1,-40,"Koef.",0,Coefficient,false,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-375,"Objektai",0,Objects,false,ObjSClass);
  MatCol(1,-310,"Į",0,InQty,true,0);
  MatCol(1,-260,"Iš",0,OutQty,true,0);
  MatCol(1,-210,"Tikras",0,ActualQty,true,0);
  MatCol(1,-160,"Medžiaga",0,Material,false,MaterialSClass);
  end;
  if (HasSerialNumbers) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-270,"Į",0,InQty,true,0);
  MatCol(1,-220,"Iš",0,OutQty,true,0);
  MatCol(1,-170,"Ser. Nr.",0,SerialNr,false,SerialNrSClass);
  if (IsEnterprise) then begin
    MatCol(1,-80,"Geriausias iki",0,BestBefore,false,PasteCurDate);
    end;
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-270,"Į",0,InQty,true,0);
  MatCol(1,-220,"Iš",0,OutQty,true,0);
  MatCol(1,-170,"Svoris",0,Weight,true,0);
  MatCol(1,-120,"Plotis",0,UnitXval,true,0);
  MatCol(1,-80,"Aukštis",0,UnitYval,true,0);
  MatCol(1,-40,"Gylis",0,UnitZval,true,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,-100,"Išard. eil. FIFO",0,OrgProdFIFORowVal,true,0);
  end;
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Prekės būklė",'I','I',0,"ItemStatusProdDsm");
  if (IsEnterprise) then begin
    RowMenuItem(0,"Atidaryti siuntos specifikaciją",' ',' ',0,"OpenBatchProdDsm");
    RowMenuItem(0,"Kokybės kontrolė",' ',' ',0,"QualConFromProdDsm");
  end;
  EndRowMenu;
  EndMatrix;
  v=v+1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (IsEnterprise) then begin
  EditField(h,-22,60,"Svoris į",Normal,TotWeight,false,0);
  EditField(h4,-22,60,"Boxes",Normal,BoxCnt,false,0); //EBS
  EditField(h4+200,-22,60,"Bruto svoris",Normal,TotOutWeight,false,0); //EBS edit
  EditField(h4+380,-22,60,"Grynas svoris",Normal,NetoWeight,false,0); //EBS
  Tile(2,120,false,"2",Comment);
  EditField(h,v=15,-20,"Komentaras",Normal,Comment,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment3,false,0);
  EditField(h,v+=vs,-20,"Objektai",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,60,"Pradž. laikas",Normal,StartTime,false,PasteCurTime);
  EditField(210,v,60,"Pabaig. laikas",Normal,EndTime,false,PasteCurTime);
  EditField(h2,v,60,"Petrauka",Normal,BreakTime,false,0);
  EditField(h2+200,v,70,"Kalba",Normal,LangCode,true,LangSCLass);
//  EditField(h2+200,v,80,"AcumCostPrice",ViewOnly,AcumCostPrice,false,0);
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Skaičiuoti kaštus",' ',0,"ProdFillFIFODsm");
  end;
  if (HasSerialNumbers) then begin
  SpecialMenu("Generuoti ser. nr. prekėms iš",' ',1,"GenSerialNosProdDsm");
  end;
  SpecialMenu("Išekoti prekės",'f',1,"ItemSearchDsm");
  SpecialMenu("Gaminio būklė",'r',4,"ProdStatusFromProdDsm");
  if (HasIntegratedNL) then begin
  SpecialMenu("Atidaryti DK operaciją",'t',5,"OpenTRFromProd");
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Sugrąžinti",' ',6,"ProdBackflushFromProdDsm");
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Išardyti",' ',2,"CreateDisProdFromProd");
  if (HasModCRM) then begin
//    SpecialMenu("Activity",'c',7,"CreateActFromProd");
  end;
  if (HasMultiLocations) then begin
  SpecialMenu("Sukurti sandėlio perkėlimą",' ',8,"StockMovFromPRDsm");
  end;
  if (IsEnterprise) then begin
  SpecialMenu("Sukurti sandėlio operacijas",' ',9,"ProdOperFromPRDsm");
  end;
  EndWindow;

  return;
end;

window DelRouteDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Kelias",DelRouteDClass,CGview,-);
  SetWRect(20,100,530,200);
  UseView(DelRouteVc);
  Sizeable(-1,-1,0,0); //EBS
  h = 120; v = 6; vs = 20;
  EditField(h,v,160,"Kodas",St_i,Code,false,0);
  EditField(h,v+=vs,-40,"Komentaras",Normal,Comment,false,0);
  CheckBox(h,v+=30,0,"Mondays",MonFlag); //!!TRANSLATE
  CheckBox(h,v+=16,0,"Tuesdays",TueFlag); //!!TRANSLATE
  CheckBox(h,v+=16,0,"Wednesdays",WedFlag); //!!TRANSLATE
  CheckBox(h,v+=16,0,"Thursdays",ThuFlag); //!!TRANSLATE
  CheckBox(h,v+=16,0,"Fridays",FriFlag); //!!TRANSLATE
  CheckBox(h,v+=16,0,"Saturdays",SatFlag); //!!TRANSLATE
  CheckBox(h,v+=16,0,"Sundays",SunFlag); //!!TRANSLATE
  //EBS-->
  MatrixBegin(4,v+=40,-32,-40,-,200);
  MatCol(1,24,"Del. order",0,DelOrder,false,0);
  MatCol(1,94,"Customer",0,CustCode,false,CUSClass);
  MatCol(1,164,"Name",0,Comment,false,0);
  EndMatrix;
  //EBS <--
  EndWindow;
end;

window StockMovDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,v,vm,vs;
  Integer tilenr,f,flipnr;

  WindowBegin("Sandėlio perkėlimai",StockMovDClass,CGview,-);
  if (HasJewelleryInterface) then begin
    SetWRect(20,80,850,400);
  end else begin
  SetWRect(20,80,700,400);
  end;
  Sizeable(-1,-1,0,0);
  UseView(StockMovVc);
  ActiveFieldOnNew("SentTransDate");
  Tile(0,90,false,"",TransDate);
  v = 6; vs = 20; h = 110; h2 = 300; h3 = 500; h4 = 620;
  EditField(h,v,80, "Nr.",Normal,SerNr,false,TSerSClass);
  CheckBox(h2,v,0,"Rezervuota",Reserved);
  EditField(h3,v,80,"Priežastis",Normal,Reason,false,StandProblemsSClass);
  EditField(h,v+=vs,80,"Užsakymo data",Normal,OrdTransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
    if (IsEnterprise) then begin
  EditField(h2,v,80,"Siuntimo data",Normal,SentTransDate,false,PasteCurDate);
    end;
  end;
  EditField(h3,v,80,"Gavimo data",Normal,TransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin
  EditField(h,v+=vs,80, "Iš patalpos",Normal,FrLocation,false,LocationSClass);
    if (IsEnterprise) then begin
  EditField(h2,v,80,"Per patalpą",Normal,ThrouLocation,false,LocationSClass);
    end;
  EditField(h3,v,80,"Į patalpą",Normal,ToLocation,false,LocationSClass);
  end;
  if (HasLocalization("PRT") and HasConsStockMoveInvoices) then begin
    EditField(h,v+=vs,80, "Faktūros nr.",ViewOnly,InvoiceNr,false,0);
    EditField(h2,v,80,"Faktūros data",ViewOnly,InvDate,false,0);
    EditField(h3,v,80,"Faktūros oficialus nr.",ViewOnly,InvoiceOfficialSerNr,false,0);
  end;
  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    TileButton(tilenr,"Pozicijos"); tilenr = tilenr + 1;
  end;
  if (HasObjects) then begin
    TileButton(tilenr,"Objektai"); tilenr = tilenr + 1;
  end else begin
    TileButton(tilenr,"Komentaras"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Prekės"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Valiuta"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Trukmė"); tilenr = tilenr + 1;
  TileButton(tilenr,"Frachtas"); tilenr = tilenr + 1;
  TileButton(tilenr,"Adresas"); tilenr = tilenr + 1;
  tilenr = 1;
  if (HasPositions or HasModWHM or HasLocalization("PRT")) then begin
    Tile(tilenr,60,false,tilenr,FrPos); tilenr = tilenr + 1;
    v = 6;
    if (HasPositions) then begin
      EditField(h,v,80, "Iš vietos",Normal,FrPos,false,UsedPosSClass);
      EditField(h2,v,80,"Į vietą",Normal,ToPos,false,FreePosSClass);
      EditField(h2,v+20,80,"Forklifter",Normal,ForkliftUser,false,UserSClass); //EBS
    end;
    if (HasModProd) then begin
      EditField(h3,v,80,"Gamybai",Normal,ProdSerNr,false,ProdSClass); v = v + vs;
      EditField(h3,v,150,"Maršr.",Normal,Sorting,false,DelRouteSClass); v = v + vs;
    end;
    if ((HasLocalization("PRT") and HasModIN and HasMultiLocations) or IsStandardProduct==false) then begin
      EditField(h3,v,150,"Type",Normal,StockMovType,false,SetSClass); v = v + vs;
    end;
    if (HasModWHM) then begin
      v = 6 + vs;
  CheckBox(h,v,0,"Rankinis pasirinkimas",ManualPick);
  CheckBox(h,v+=16,0,"Pasiųsti į keltuvo eilę",ToForkLiftQue);
    end;
  end;
  Tile(tilenr,70,false,tilenr,Comment); tilenr = tilenr + 1;
  v = 6;
  if (HasObjects) then begin
    EditField(h,v,-20,"Objektai",Normal,Objects,false,ObjSClass);
    v = v + vs;
  end;
  EditField(h,v,-20,"Komentaras",Normal,Comment,false,0);
  EditField(h,v+=vs,135,"Oficialus ser. nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  EnterSkip(Math);
  Tile(tilenr,79,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-50,-50,-,199);
  Flip(0);
  flipnr = 1;
  if (HasJewelleryInterface) then begin
    MatCol(1,32,"Ser. Nr.",0,SerialNr,false,SerialNrSClass);
    EnterSkip(Quant);
    MatCol(1,130,"Prekė",0,ArtCode,false,INSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    if (HasVarieties) then begin
    MatCol(1,200,"Reik.kiek.",0,OrdQuant,true,MATVARINSClass);
    end else begin
      if (HasThrouLocation) then begin
      MatCol(1,200,"Reik.kiek.",0,OrdQuant,true,0);
    end;
    end;
    if (HasThrouLocation) then begin
    MatCol(1,250,"Išs.kiek.",0,SentQuant,true,0);
    end;
    MatCol(1,300,"Gaut.kiek.",0,Quant,true,0);
    MatCol(1,350,"Aprašymas",0,Spec,false,0);
  end else begin
    MatCol(1,32,"Prekė",0,ArtCode,false,INSClass);
    Flip(flipnr);  flipnr = flipnr + 1;
    if (HasVarieties) then begin
  MatCol(1,86,"Reik.kiek.",0,OrdQuant,true,MATVARINSClass);
    end else begin
      if (HasThrouLocation) then begin
      MatCol(1,86,"Reik.kiek.",0,OrdQuant,true,0);
    end;
    end;
    if (HasThrouLocation) then begin
  MatCol(1,148,"Išs.kiek.",0,SentQuant,true,0);
    end;
  MatCol(1,210,"Gaut.kiek.",0,Quant,true,0);
  MatCol(1,272,"Aprašymas",0,Spec,false,0);
  end;
  MatCol(1,-260,"G.sena vnt. kaina",0,OldPrice,true,0);
  MatCol(1,-160,"G.papild.kašt.",0,ExtraSCost,true,0);
  MatCol(1,-80,"G.nauja vnt.kain.",0,NewPrice,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  if (HasVarieties) then begin
  MatCol(1,86,"Reik. kiekis",0,OrdQuant,true,MATVARINSClass);
  end else begin
    if (HasThrouLocation) then begin
    MatCol(1,86,"Reik.kiek.",0,OrdQuant,true,0);
  end;
  end;
  if (HasThrouLocation) then begin
  MatCol(1,148,"Išs. kiekis",0,SentQuant,true,0);
  end;
  MatCol(1,210,"Gautas kiekis",0,Quant,true,0);
  MatCol(1,272,"Aprašymas",0,Spec,false,0);
  MatCol(1,-260,"Išs.sena vnt.kain.",0,SentOldPrice,true,0);
  MatCol(1,-160,"Išs.papild.kašt.",0,SentExtraSCost,true,0);
  MatCol(1,-80,"Išs.nauja vnt.kaina",0,SentNewPrice,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Aprašymas",0,Spec,false,0);
  if (HasObjects) then begin
  MatCol(1,-380,"Objektai",0,Objects,false,ObjSClass);
  end;
  if (HasSerialNumbers) then begin
  MatCol(1,-280,"Ser. nr.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-140,"Baz. kaina",0,BasePrice,true,0);
  MatCol(1,-40,"Koef.",0,Coefficient,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Aprašymas",0,Spec,false,0);
  if (HasSerialNumbers) then begin
  MatCol(1,-280,"Ser. nr.",0,SerialNr,false,SerialNrSClass);
  end;
  MatCol(1,-180,"Plotis",0,UnitXval,true,0);
  MatCol(1,-135,"Aukštis",0,UnitYval,true,0);
  MatCol(1,-90,"Gylis",0,UnitZval,true,0);
  MatCol(1,-45,"arba eilutė",0,OrderRowNr,false,0);
  if (HasPositions) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(1,86,"Aprašymas",0,Spec,false,0);
  MatCol(1,-180,"Iš vietos",0,FrPosCode,false,UsedPosSClass);
  MatCol(1,-90,"Į vietą",0,ToPosCode,false,FreePosSClass);
  end;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Prekės būklė",'I','I',0,"ItemStatusStockMovDsm");
  if (HasQualityControl) then begin
    RowMenuItem(0,"Kokybės kontrolė",'u','u',0,"QualConFromStockMovDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (HasThrouLocation) then begin
  CheckBox(20,-52,0,"Patvirtinta",OrdFlag);
  CheckBox(20,-36,0,"Išsiųsta",SentOKFlag);
  end;
  CheckBox(20,-20,0,"Gauta",OKFlag);
  if (HasThrouLocation) then begin
  EditField(170,-20,62,"Išs. kiekis",Normal,TotSentQty,true,0);
  end;
  EditField(310,-20,62,"Gaut. kiekis",Normal,TotQty,true,0);
  if (HasLocalization("HRV,PRT")) then begin
    EditField(550,-40,150,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
//    SoftEditField(550,-40,150,"Tax Auth. Approval",Normal,"TaxAdminServSeal",false,0,M4Str,200);
  end;
  EditField(550,-20,100,"Neapsk. papildomi kaštai",Normal,OtherExtraCosts,false,0);
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    h1 = 110; vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bazinė valiuta 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Bazinė valiuta",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Baz. val. 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Kursas",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val.",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Bazinė valiuta 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Bazinė valiuta 2",Normal,BaseRate2,true,0);
    end;
  end;
  Tile(tilenr,110,false,tilenr,PlanSendDate); tilenr = tilenr + 1;
  vs = 20; h1 = 130; h2 = 330; h3 = 560;
  EditField(h,v=6,80,"Plan. išs. data",Normal,PlanSendDate,false,PasteCurDate);
  EnterSkip(PlanSendTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  EditField(h2,v,40,"Plan. trukmė dien.",ViewOnly,PlanDurationDays,false,0);
  end;
  EditField(h,v+=vs,80,"Plan. išs. laikas",Normal,PlanSendTime,false,PasteCurTime);
  EnterSkip(PlanArrDate);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  EditField(h2,v,80,"Plan. trukmė val.",ViewOnly,PlanDurationTime,false,0);
  end;
  EditField(h3,v=6,80,"Plan. atvykimo data",Normal,PlanArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Plan. atvykimo laikas",Normal,PlanArrTime,false,PasteCurTime);
  if (HasLocalization("PRT")==false or IsStandardProduct==false) then begin
  EditField(h,vm=(v+=32),80,"Išsiuntimo data",Normal,ActSendDate,false,PasteCurDate);
  EnterSkip(ActSendTime);
  EditField(h2,v,40,"Trukmė dienomis",ViewOnly,ActDurationDays,false,0);
  EditField(h,v+=vs,80,"Išsiuntimo laikas",Normal,ActSendTime,false,PasteCurTime);
  EnterSkip(ActArrDate);
  EditField(h2,v,80,"Trukmė valandomis",ViewOnly,ActDurationTime,false,0);
  EditField(h3,v=vm,80,"Atvykimo data",Normal,ActArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Atvykimo laikas",Normal,ActArrTime,false,PasteCurTime);
  end;
  Tile(tilenr,110,false,tilenr,FreightCode); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,60,"Frachto įmonė",Normal,FreightCode,false,FreightCompanySClass);
  EditField(h2,v,-40,"Reg. nr.",Normal,FreightCompanyRegNr,false,0);
  EditField(h,v+=vs,-40,"Pavadinimas",Normal,FreightCompany,false,0);
  EditField(h,v+=vs,-40,"Sunkvežimio inform.",Normal,TruckInfo,false,0);
  EditField(h,v+=vs,-40,"Vairuotojas",Normal,Driver,false,0);
  EditField(h,v+=vs,-40,"CMR",Normal,CMRText,false,0);
  if (HasNumberSeries and HasLocalization("PRT")) then begin
    if (HasOfficialSerNr) then begin
      EditField(h,v+=vs,100,"Oficialus ser. nr. 2",Normal,OfficialSerNr2,false,0);
      EditField(h2+100,v,135,"Status",Normal,Status,false,SetSClass);
    end;
  end;
  Tile(tilenr,200,false,tilenr,FrAddr0); tilenr = tilenr + 1;
  vs = 20; h2 = 255;
  EditField(h=130,v=6,-40,"Iš adresas",Normal,FrAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,FrAddr4,false,0);
  if (HasThrouLocation) then begin
  EditField(h,v+=vs,-40,"Per adresas",Normal,ThrouAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,ThrouAddr4,false,0);
  end;
  EditField(h,v+=vs,-40,"Į adresas",Normal,ToAddr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr2,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr3,false,0);
  EditField(h,v+=vs,-40,"",Normal,ToAddr4,false,0);
  SpecialMenu("Įsigijimo kaina senoje vnt. kainoje",'=',0,"StockMovFillFIFODsm");
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  if (HasIntegratedNL) then begin
  SpecialMenu("Atidaryti siuntimo D/K operaciją",' ',2,"OpenTRFromStockMovSent");
  SpecialMenu("Atidaryti gavimo D/K operaciją",'t',3,"OpenTRFromStockMov");
  end;
  if (HasLocalization("PRT")) then begin
    if (HasETaxDocuments) then begin
      SpecialMenu("Send to Tax Authorities",'',10,"EShipPRTDsm");
    end;
  end;
  if (HasConsStockMoveInvoices) then begin
     SpecialMenu("Atspausdinti sandėlio judėjimo sąsk.",'p',3,"PrintStockMovInvoices");
   end;
  EndWindow;
end;

window StockMovJRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Perkėlimų žurnalas",StockMovJRClass,CGRcW,RcType);
  SetWRect(20,80,460,380);
  vs = 20; h = 160; v = 6;
  EditFieldTL(h,v,150,"Nr.",   M4Str,Normal,30,f1,false,0);
  PeriodField(h,v+=vs,"Periodas");
  EditFieldTL(h,v+=vs,80,"Iš patalpos",   M4UStr,Normal,30,f2,false,LocationSClass);
  EditFieldTL(h,v+=vs,80,"Į patalpą",   M4UStr,Normal,30,f3,false,LocationSClass);
  if (StandardHansa==false) then begin
  EditFieldTL(h,v+=vs,80,"Per patalpą",   M4UStr,Normal,10,FirstAcc,false,LocationSClass);
  end;
  EditFieldTL(h,v+=vs,150,"Prekė",   M4UStr,Normal,41,f4,false,INSClass);
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=vs,150,"Prekių grupė",M4UStr,Normal,50,f5,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs,150,"Prekės klasifikavimas",M4UStr,Normal,100,f6,false,DISClass);
  end;
  EditFieldTL(h,v+=vs,80,"Forklifter",   M4Code,Normal,10,f10,false,UserSClass);
  EditFieldTL(h,v+=vs,80,"Gamybai", M4Long,Normal,0,long1,false,ProdSClass);
  vm = v+40;
  ButtonFrame(h=20,v = vm,123,2,"Funkcija");
  RadioButton(h,v,0,0,"Peržiūra",ArtMode);
  RadioButton(h,v+=16,1,0,"Detaliai",ArtMode);
  RadioButton(h,v+=16,2,0,"Detailed (tasks)",ArtMode);
  ButtonFrame(h+=138,v = vm,123,3,"Vertės");
  RadioButton(h,v,0,0,"Nauja vnt. kaina",flags[4]);
  RadioButton(h,v+=16,1,0,"Sena vnt. kaina",flags[4]);
  RadioButton(h,v+=16,2,0,"Bazinė kaina",flags[4]);
  vm = v + 48;
  ButtonFrame(h=20,v=vm,123,3,"Patvirtinimas");
  RadioButton(h,v,1,0,"Tik nepatvirtinti",flags[1]);
  RadioButton(h,v+=16,2,0,"Tik patvirtinti",flags[1]);
  RadioButton(h,v+=16,0,0,"Patvirtinti ir nepatvirtinti",flags[1]);
  if (StandardHansa==false) then begin
  ButtonFrame(h+=138,v=vm,123,3,"Išsiuntimas");
  RadioButton(h,v,1,0,"Tik neišsiųsti",flags[2]);
  RadioButton(h,v+=16,2,0,"Tik išsiųsti",flags[2]);
  RadioButton(h,v+=16,0,0,"Išsiųsti ir neišsiųsti",flags[2]);
  ButtonFrame(h+=138,v=vm,123,3,"Gavimas");
  RadioButton(h,v,1,0,"Tik negauti",flags[5]);
  RadioButton(h,v+=16,2,0,"Tik gauti",flags[5]);
  RadioButton(h,v+=16,0,0,"Gauti ir negauti",flags[5]);
  CheckBox(h=20,v+=32,0,"Visos tarpinės patalpos",flags[3]);//?
    CheckBox(h=250,v,0,"Received not matching Sent",flags[6]); //!!TRANSLATE
  end;
  EndWindow;
end;

window BLT_CreateSHsFSOsVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;
  WindowBegin("Sukurti siuntimus iš užsakymų",BLT_CreateSHsFSOsVClass,CGMnt,RcType);
  SetWRect(20,80,450,390);
  v = 6; h = 150; h2 = 270;
  PeriodField(h,v,"Periodas");
  EditFieldTL(h,v+=20,150,"Užsakymai",M4UStr,Normal,41,f1,false,0);
  EditFieldTL(h,v+=20,150,"Numer. kom.",M4Str,Normal,20,AccStr,false,0);
  EditFieldTL(h,v+=20,150,"Prekė",M4UStr,Normal,40,f3,false,ForSaleINSClass);
  EditFieldTL(h,v+=20,100,"Planuotas siunt.",M4Str,Normal,10,Stext,false,PasteCurDate);
  CheckBox(h2,v+5,0,"Iki datos",flags[5]);
  EditFieldTL(h,v+=20,100,"Siuntimo data",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=20,100,"Maršrutas",M4Str,Normal,60,f2,false,DelRouteSClass);
  EditFieldTL(h,v+=20,100,"Užsakymų klasė",M4UStr,Normal,5,FirstAcc,false,OrderClassSClass);
  EditFieldTL(h,v+=20,100,"Patalpa",M4UStr,Normal,10,f6,false,LocationSClass);
  EditFieldTL(h,v+=20,100,"Freight Company",M4Code,Normal,20,f10,false,FreightCompanySClass); //EBS
  EditFieldTL(h,v+=20,100,"Pallet volume",M4UVal,Normal,0,vals0,false,0); //EBS
  ButtonFrame(h=30,vm=(v+=41),140,2,"užsakymai");
  RadioButton(h,v,0,0,"Tiktai pilnai siunčiami",ArtMode);
  RadioButton(h,v+=16,1,0,"Visi siunčiami užsakymai",ArtMode);
  // CheckBox(h=200,v=(vm-10),0,"Pirma rezervuoti",flags[1]);
  CheckBox(h=200,v=(vm-10),0,"Patvirtinti siuntimus",flags[10]);
  CheckBox(h,v+=16,0,"Siuntimas per patalpą",flags[2]);
  CheckBox(h,v+=16,0,"Neįtraukti pirkėjų su perspėjimais",flags[3]);
  CheckBox(h,v+=16,0,"Netikrinti kredito limito",flags[4]);
  CheckBox(h,v+=16,0,"Neįtraukti Užsakymų be siuntimų",flags[6]);
  EndWindow;
end;

window LocationDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,l,v,vm,vs;
  Integer tilenr;

  WindowBegin("Patalpa",LocationDClass,CGview,-);
  SetWRect(64,80,570,520);
  UseView(LocationVc);
  v = 10; vs = 20; h = 120; h2 = 340; l = -60;
  if (IsEnterprise) then begin
  Tile(0,50+24,false,"",Code);
  end;
  EditField(h,v,120,"Kodas",Normal,Code,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
    EditField(h2,v,l,"Grupė",Normal,Group,false,LocGrSClass);
  end;
  EditField(h,v+=vs,l,"Pavadinimas",Normal,Name,false,0);
  if (IsEnterprise) then begin
    tilenr = 1;
    TileButton(tilenr,"Adresas"); tilenr = tilenr + 1;
    TileButton(tilenr,"Logistics"); tilenr = tilenr + 1; //EBS
    if (StandardHansa==false) then begin
    TileButton(tilenr,"Sandėlis"); tilenr = tilenr + 1;
    end;
    tilenr = 1;
    Tile(tilenr,350,false,tilenr,Addr0); tilenr = tilenr + 1;
    EditField(h,v=6,l,"Adresas",Normal,Addr0,false,0);
  end else begin
    EditField(h,v+=vs,l,"Adresas",Normal,Addr0,false,0);
  end;
  EditField(h,v+=vs,l,"",Normal,Addr1,false,0);
  EditField(h,v+=vs,l,"",Normal,Addr2,false,0);
  EditField(h,v+=vs,l,"",Normal,Addr3,false,0);
  EditField(h,v+=vs,l,"",Normal,Addr4,false,0);
  EditField(h,v+=vs,l,"Kontaktas",Normal,Contact,false,0);
  EditField(h,v+=vs,l,"Tel. nr.",Normal,Phone,false,0);
  EditField(h,v+=vs,l,"Fakso nr.",Normal,Fax,false,0);
  EditField(h,v+=vs,l,"El. paštas",Normal,Email,false,0);
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
    EditField(h,v+=vs,l,"Klasė",Normal,Classification,false,LocClSClass);
    end;
  EditField(h,v+=vs,100,"Atsakingas asmuo",Normal,RespPerson,false,UserSClass);
  EditField(h2,v,l,"Rezervac. teisė.",Normal,ReservLocAccess,false,ReservLocAccessSClass);
  end;
  if (HasModNL) then begin
  EditField(h,v+=vs,100,"Atsargų sąskaita",Normal,StockAcc,false,AccSClass);
  end;
  if (HasObjects) then begin
  EditField(h2,v,l,"Objektai",Normal,Objects,false,ObjSClass);
  end;
  if (IsEnterprise) then begin
//  EditField(h,v+=vs,100,"Kainoraštis",Normal,PriceList,false,PLDefSClass);//No Code
  EditField(h,v+=vs,100,"Pirkimo patalpa",Normal,PurLoc,false,LocationSClass);
    if (StandardHansa==false) then begin
    EditField(h2,v,l,"Perkelti į sąskaitą",Normal,ShipToAccount,false,0);
  EditField(h,v+=vs,100,"Per patalpą",Normal,ThrouLocation,false,LocationSClass);
    end;
  CheckBox(h,vm=(v+=30),0,"Ignoruoti chronologiją",IgnoreChronology);
    if (StandardHansa==false) then begin
  CheckBox(h,v+=vs,0,"Reikalauti vietos",RequirePos);
    end;
  ButtonFrame(h2,v=vm+10,100,2,"Tipas");
  RadioButton(h2,v,0,0,"Kita",Type);
  RadioButton(h2,v+=16,1,0,"Gamybos",Type);
  end;
  //EBS -->
  Tile(tilenr,160,false,tilenr,ILNCode); tilenr = tilenr + 1;
  EditField(h=160,v=6,150,"ILN Code",Normal,ILNCode,false,0);
  EditField(h,v+=vs,150,"Location Code",Normal,LocationCode,false,0);
  EditField(h,v+=vs,-20,"Delivery import folder",Normal,SHImpFolder,false,0);
  EditField(h,v+=vs,-20,"GR import folder",Normal,PUImpFolder,false,0);
  EditField(h,v+=vs,-20,"Sales Orders export folder",Normal,ORExportFolder,false,0);
  EditField(h,v+=vs,-20,"Purchase Orders export folder",Normal,POExportFolder,false,0);
  CheckBox(h,v+=20,0,"Automatically send Sales Orders",AutoExpOR);
  CheckBox(h,v+=16,0,"Automatically send Purchase Orders",AutoExpPO);
  //EBS <--
  if (HasModWHM) then begin
    Tile(tilenr,310,false,tilenr,WHMPalletArea); tilenr = tilenr + 1;
  EditField(h=200,v=6,l=100,"Tuščių palečių vieta",Normal,WHMPalletArea,false,LocAreaSClass);
  EditField(h,v+=vs,l,"Pakrovimo vieta",Normal,WHMPickArea,false,LocAreaSClass);
  EditField(h,v+=vs,l,"Gavimų pozicija",Normal,WHMDefPUPosCode,false,PosSClass);
  EditField(h,v+=vs,l,"Gamybos pozicija",Normal,WHMDefProdPosCode,false,PosSClass);
  EditField(h,v+=vs,l,"Vyniojimo mašinos pozicija",Normal,WHMWraperPosCode,false,PosSClass);
  EditField(h,v+=vs,l,"Siuntimo pozicija pakrovimui",Normal,WHMDeliveryPosCode,false,PosSClass);//the same as WraperPosCode at ethe moment
  EditField(h,v+=vs,l,"Siuntimo vieta",Normal,WHMDeliveryArea,false,LocAreaSClass);
  EditField(h,v+=vs,l,"Greiti užsakymai",Normal,WHMExpressOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,l,"Pagr. tiekėjas",Normal,WHMDefPUVECode,false,VESClass);
  EditField(h,v+=vs,l,"Def. pallet item",Normal,DefaultPalItem,false,INSClass); //EBS
  CheckBox(h,v+=24,0,"Pozicija",RequirePos);
  CheckBox(h,v+=16,0,"Pradėti nuo aukščiausios pozicijos",WHMHighestPosCodeFirst);
  ButtonFrame(h,v+=40,140,3,"Forklifto sistema");
  RadioButton(h,v,0,0,"Išjunga",WHMForkLiftSystem);
  RadioButton(h,v+=16,1,0,"Įjunga",WHMForkLiftSystem);
  RadioButton(h,v+=16,2,0,"Įjungta, krovimo būdas išj.",WHMForkLiftSystem);
  end;
  EndWindow;
end;

window ItemSettingTClass:3
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Prekės parametrai",ItemSettingTClass,CGSbl,ItemSettingType);
  SetWRect(64,80,580,500);
  SetBlid(ItemSettingBlock);
  v = 6; vs = 20; h = 200;
  EditField(h,v,60,"Pagr. prekės grupė",Normal,DefIGroup,false,ITSClass);
  if (HasModSVO) then begin
    if (StandardHansa==false) then begin
  EditField(h,v+=vs,60,"Garantijos galiojimas",Normal,WarrantyLength,false,0);
    end;
  EditField(h,v+=vs,60,"Vienetas",Normal,Unittext,false,UnitSCLass);
  end;
  EditField(h,v+=vs,60,"Brūkšn. kodo ilgis (be čekio sumos)",Normal,BarCodeLength,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
  EditField(h,v+=vs,120,"Priskirtas brūkšn. kodo nr.",Normal,YourBarCodeDef,false,0);
  EditField(h,vm=(v+=vs),120,"Pradėti brūkšn. kodą nuo",Normal,BarCodeStartFrom,false,0);
  end else begin
    v = v+vs;
    vm = v;
  end;
  CheckBox(h=35,vm=(v=vm+25),0,"Unikalus barkodas",UniqueBarCode);
  if (IsEnterprise) then begin
  CheckBox(h,v+=16,0,"Rodyti galiojimo laiką",BestBefore);
  CheckBox(h,v+=16,0,"Rodyti siuntos būklę",BatchStatus);
  CheckBox(h,v+=16,0,"Rodyti prekės būklę",ShowItemStatus);
  end;
  if (HasExtTax) then begin
  CheckBox(h,v+=16,0,"Skaičiuoti percepcinius mokesčius",Perceptions);
  end;
  if (HasWithholdingTax) then begin
  CheckBox(h,v+=16,0,"Skaičiuoti sulaikymo mokesčius",Withholdings);
  end;
  CheckBox(h,v+=16,0,"Reikalauti galiojimo datos",EBS_ReqBestBefore); //EBS
  if (IsEnterprise) then begin
  CheckBox(h,v+=16,0,"Keičiant datą atnaujinti kainas įrašuose su valiuta",UpdCurPrWithDate);
  CheckBox(h=250,v=vm,0,"Neleisti bazinės kainos pakeitimo",NoBasePriceChange);
    if (StandardHansa==false) then begin
  CheckBox(h,v+=16,0,"Prekės formulė",ItemFormulaeInclVAT);
    end;
  CheckBox(h,v+=16,0,"Leisti kiekio skaičiavimą",EnCalcDimQty);
  CheckBox(h,v+=16,0,"Reikalauti prekės grupės",DemandItemGroup);
    if (StandardHansa==false) then begin
      if (HasWithholdingTax) then begin
  CheckBox(h,v+=16,0,"Naudoti supersesijos prekes",UseSupersessionIN);
      end else begin
        CheckBox(h,v+=2*16,0,"Naudoti supersesijos prekes",UseSupersessionIN);
      end;
    end;
  //CheckBox(h,v+=16,0,"Naudoti kelių pirk. nuolaidą",MultiBuyDiscount);
    if (StandardHansa==false) then begin
  ButtonFrame(h=35,vm=(v+=76),173,4,"Pagrindinis prekės tipas");
    end else begin
      ButtonFrame(h=35,vm=(v+=76),173,3,"Pagrindinis prekės tipas");
    end;
  RadioButton(h,v,0,0,"Paprasta",DefItemType);
  RadioButton(h,v+=16,1,0,"Sandėliuojama",DefItemType);
  RadioButton(h,v+=16,2,0,"Struktūrinė",DefItemType);
    if (StandardHansa==false) then begin
  RadioButton(h,v+=16,3,0,"Paslauga",DefItemType);
  ButtonFrame(h,v+=40,173,3,"Serijinio nr. kontrolė");
    end else begin
      ButtonFrame(h,v+=57,173,3,"Serijinio numerio kontrolė");
    end;
  RadioButton(h,v,0,0,"Nėra",SerNrf);
  RadioButton(h,v+=16,1,0,"Vieneto",SerNrf);
  RadioButton(h,v+=16,2,0,"Siuntos",SerNrf);
  ButtonFrame(h=250,v=vm,200,4,"Atnaujinti savikainą patvirtinus gavimą");
  RadioButton(h,v,0,0,"Nr.",UpdateCost);
  RadioButton(h,v+=16,1,0,"Paskutinė pirkimų kaštai(su pap. kašt.)",UpdateCost);
  RadioButton(h,v+=16,2,0,"Svertinis vidurkis",UpdateCost);
  RadioButton(h,v+=16,3,0,"Pask. pirk. kaštai(be pap. kašt.)",UpdateCost);
  ButtonFrame(h,v+=40,200,3,"Atnaujinti savik. Sand. perkainavimuose");
  RadioButton(h,v,0,0,"Neatnaujinti",SRUpdateCost);
  RadioButton(h,v+=16,1,0,"Paskutinio perkainavimo savik.",SRUpdateCost);
  RadioButton(h,v+=16,2,0,"Svertinis vidurkis",SRUpdateCost);
  end else begin
    CheckBox(h,v+=16,0,"Neleisti bazinių kainų keitimo",NoBasePriceChange);
    CheckBox(h,v+=16,0,"Prekės formulė",ItemFormulaeInclVAT);
    CheckBox(h,v+=16,0,"Reikalauti Prekės grupės",DemandItemGroup);
  end;
  EndWindow;
end;

window PODClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,v,vm,vs;
  record CYBlock CYb;
  string 255 label;
  Integer tilenr,flipnr,f,rn;

  vs = 20;
  BlockLoad(CYb);
  WindowBegin("Pirkimų užsakymas",PODClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(POVc);
  CommunicateButton;
  ActiveFieldOnNew("VECode");
  Tile(0,74,false,"",VECode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Tiekėjas",Normal,VECode,false,VESClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Pavad.",Normal,Addr0,false,0);
  if (IsEnterprise) then begin
  EditField(h,vm=(v+=20),95,"Parašas",Normal,OKPersons,false,UserSClass);
  CheckBox(h4=-100,v,0,"OK",OKFlag);
  end else begin
    CheckBox(h4=-100,v+=vs,0,"OK",OKFlag);
  end;
  tilenr = 1;
  TileButton(tilenr,"Sąlygos"); tilenr = tilenr + 1;
  TileButton(tilenr,"Prekės"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Valiuta"); tilenr = tilenr + 1;
  end;
  if (HasModIN) then begin
    TileButton(tilenr,"Siunt. sąlygos"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Komentaras"); tilenr = tilenr + 1;
  TileButton(tilenr,"užs. adresas"); tilenr = tilenr + 1;
  TileButton(tilenr,"Siunt. adresas"); tilenr = tilenr + 1;
  if (IsEnterprise and StandardHansa==false) then begin
    TileButton(tilenr,"Pap. kaštai"); tilenr = tilenr + 1;
  end;
  tilenr = 1;
  Tile(tilenr,90,false,tilenr,TransDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Data",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Mok. terminas",Normal,PayDeal,false,PDSClass);
  if (IsEnterprise) then begin
  EditField(h1,v+=vs,82,"Galioja iki",Normal,ValidUntil,false,PasteCurDate);
  end;
  if (HasModIN) then begin
  EditField(h1,v+=vs,82,"Plan. siunt.",Normal,PlanShip,false,PasteCurDate);
  end;
  EditField(h2,v=vm,135,"Mūsų nuor.",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Perspėjimas",Normal,VEContact,false,ContactSClass);
  if (HasObjects) then begin
  EditField(h2,v+=vs,135,"Objektai",Normal,Objects,false,ObjSClass);
  end;
  EditField(h2,v+=vs,135,"Nuoroda",Normal,Reference,false,0);
  if (HasSalesman or HasSalesmanBonus) then begin
  EditField(h3,v=vm,80,"Pardavėjas",Normal,SalesMan,false,UserSClass);
  end;
  if (HasModTS or IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Projektas",Normal,PRCode,false,PRSClass);
  end;
  if (IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Pirk. Užsak. klasė",Normal,POClass,false,POrderClassSClass);
  EditField(h3,v+=vs,80,"Užsak. tipas",ViewOnly,OrderType,false,0);
  end;
  CheckBox(h4,v=6,0,"Uždarytas",Closed);
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
    CheckBox(h4,v+=16,0,"Kaina su #PVM#",InclVAT);
  end else begin
    CheckBox(h4,v+=16,0,"Kaina su mok.",InclVAT);
  end;
  CheckBox(h4,v+=16,0,"Sent to log.",BLT_SentToLogistics); //EBS
  EnterSkip(Math);
  Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    EditField(110,-41,70,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
  end;
  if (IsEnterprise and StandardHansa==false) then begin
		EditField(110,-21,70,"Paletės",ViewOnly,TotPalletNr,true,0);
		EditField(260,-41,70,"Frachtas",Normal,ShipCost,true,0);
		EditField(260,-21,70,"Muitai",Normal,CustomsCost,true,0);
  end;
  if (CYb.UseTaxTemplatesforTaxCalc==0) then begin
    EditField(410,-41,70,"#PVM#",ViewOnly,Sum3,true,0);
    if (HasExtTax) then begin
      EditField(410,-21,70,"Be mok.",ViewOnly,TAX1Sum,false,0);
    end;
  end else begin
    EditField(410,-41,70,"Mok.",ViewOnly,Sum3,true,0);
  end;
  EditField(-169,-41,118,"Tarp. suma",ViewOnly,Sum1,true,0);
  EditField(-169,-21,118,"VISO",ViewOnly,Sum4,true,0);
//  CheckBox(20,-21,0,"OK",OKFlag);
  v = 24;
  if (HasModIN or HasModPL or HasObjects) then begin
    MatrixBegin(3,v,-50,-44,-,199);
  end else begin
    MatrixBegin(3,v,-25,-44,-,199);
  end;
  MatTypedRow(stp);
  Flip(0);
  MatCol(1,28,"Prekė",0,ArtCode,false,BLT_INSClass); //EBS edit
//  MatCol(1,84,"Var",0,VARList,true,VARSClass);
//  MatCol(1,144,"Kiekis",0,Quant,true,0);
  //EBS -->
  // if (HasVarieties) then begin
  //   MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
  // end else begin
  //   MatCol(1,94,"Kiekis",0,Quant,true,0);
  // end;
  // EnterSkip(ArtCode);
  //EBS <--
//  MatCol(1,194,"Aprašymas",0,Spec,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  //EBS -->
  if (HasVarieties) then begin
    MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(1,94,"Kiekis",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  //EBS <--
  MatColTL(1,154,"Vnt.",0,M4Code,ViewOnly,5,UnitCode,false,UnitSCLass);
  MatCol(1,194,"Kiekis 2",0,Quant2,true,0); //EBS
  MatColTL(1,244,"Vnt. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass); //EBS
  MatCol(1,284,"Aprašymas",0,Spec,false,0);
  if (HasJewelleryInterface) then begin
    MatCol(1,-337,"Sandėlio tipas",0,StockType,false,SetSClass);
  end;
  MatCol(1,-237,"Vnt. kaina",0,Price,true,0);
  MatCol(1,-151,"%",0,vRebate,true,0);
  MatCol(1,-116,"Suma",0,Sum,true,0);
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
    MatCol(1,-30,"T-Cd",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(1,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
  end;
  if (HasObjects) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
      MatCol(1,94,"Kiekis 2",0,Quant2,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis 2",0,Quant2,true,0);
    end;
    EnterSkip(ArtCode);
    MatColTL(1,164,"Vnt. 2",0,M4Code,ViewOnly,5,UnitCode2,false,UnitSCLass);
    MatCol(1,204,"Aprašymas",0,Spec,false,0);
    // MatCol(1,164,"Aprašymas",0,Spec,false,0);
    //EBS <--
    if (IsEnterprise) then begin
      MatCol(1,-310,"Pirk. sąsk.",0,CostAcc,false,AccSClass);
    end;
    MatCol(1,-240,"Objektai",0,Objects,false,ObjSClass);
    if (IsEnterprise) then begin
			MatCol(1,-170,"Tiek. prekė",0,VEArtCode,false,PISClass);
			MatColTL(1,-100,"Tiek. vnt.",0,M4Code,ViewOnly,5,VEUnit,false,UnitSCLass);
			MatCol(1,-50,"Tiek. kiekis",0,VEQuant,true,0);
    end;
  end;
		if (HasModIN) then begin
			Flip(flipnr); flipnr = flipnr + 1;
      //EBS -->
      if (HasVarieties) then begin
        MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
      end else begin
        MatCol(1,94,"Kiekis",0,Quant,true,0);
      end;
      EnterSkip(ArtCode);
      //EBS <--
		MatCol(1,164,"Aprašymas",0,Spec,false,0);
		MatCol(1,-330,"Gauta 1",0,Shipd1,true,0);
		MatCol(1,-270,"Gauta 2",0,Shipd2,true,0);
		if (HasModPL) then begin
			MatCol(1,-210,"Fakt.",0,Invd,true,0);
		end;
    if (HasModWHM) then begin
      MatCol(1,-150,"Palečių skč.",0,PalletNr,true,0);
    end;
    if (HasModTS) then begin
      MatCol(1,-90,"Projektas",0,PRCode,true,PRSClass);
    end;
    if (HasModSVO) then begin
      MatCol(1,-40,"Darb. Nr.",0,WSNr,true,0);
    end;
  end;
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
      MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(ArtCode);
    //EBS <--
    if (StandardHansa==false) then begin
      MatCol(1,164,"Užsakymo tipas",0,OrderType,false,0);
  MatCol(1,-400,"Prekės tipas",0,StockType,false,SetSClass);
    end else begin
      MatCol(1,164,"Aprašymas",0,Spec,false,0);
    end;
    if (HasTREO) then begin
  MatCol(1,-300,"TREO",0,TREO,false,SetSClass);
    end;
  MatCol(1,-200,"Plan. siuntimas",0,PlanShipRow,true,PasteCurDate);
  MatCol(1,-100,"Komentaras",0,Comment,true,0);
    if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    //EBS -->
    if (HasVarieties) then begin
      MatCol(1,94,"Kiekis",0,Quant,true,MATVARINSClass);
    end else begin
      MatCol(1,94,"Kiekis",0,Quant,true,0);
    end;
    EnterSkip(ArtCode);
    //EBS <--
  MatCol(1,164,"Aprašymas",0,Spec,false,0);
  MatCol(1,-420,"Fr. kaštai",0,ShipCost,true,0);
  MatCol(1,-360,"Muitai",0,CustomsCost,true,0);
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Kaštai 1";end;
  MatCol(1,-300,label,0,RowCost1,true,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Kaštai 2";end;
  MatCol(1,-240,label,0,RowCost2,true,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Kaštai 3";end;
  MatCol(1,-180,label,0,RowCost3,true,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Kaštai 4";end;
  MatCol(1,-120,label,0,RowCost4,true,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Kaštai 5";end;
  MatCol(1,-60,label,0,RowCost5,true,0);
    end;
  end;
  DeleteRowTest;
  InsertRowTest;
  RowMenuBegin("");
  if (HasModIN and GuiType!=kGuiAndroid) then begin
    RowMenuItem(0,"Prekės būklė",'I','I',0,"ItemStatusPODsm");
  end;
  if (IsEnterprise) then begin
    RowMenuItem(0,"Ankstesnė pirkimo kaina",' ',' ',0,"POLastPPrsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
//  v = 18;
  v = v + 1;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1));
      v = v + vs;
    end;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate); tilenr = tilenr + 1;
    vs = 20; h = 110; h2 = 295;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
    EditField(h1,v=6,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bazinė valiuta 1",Normal,BaseRate1,true,0);
      end else begin
        EditField(h1,v+vs,50,"Bazinė valiuta",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
        EditField(h1,v+(vs*2),50,"Baz. val. 2",Normal,BaseRate2,true,0);
      end;
      EditField(h2=295,v,50,"Kursas",Normal,FrRate,true,0);
      if (HasBase2) then begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false);
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val.",false);
      end;
    end else begin
      EditField(h1,v+=vs,50,"Bazinė valiuta 1",Normal,BaseRate1,true,0);
      EditField(h1,v+=vs,50,"Bazinė valiuta 2",Normal,BaseRate2,true,0);
    end;
  end;
  if (HasModIN) then begin
    Tile(tilenr,90,false,tilenr,ShipDeal); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Siuntimo sąlyga",Normal,ShipDeal,false,ShipDealSClass);
    if (IsEnterprise) then begin
  EditField(h1,v+=vs,80,"Siuntimo būdas",Normal,ShipMode,false,DMSClass);
    end;
    if (HasMultiLocations) then begin
  EditField(h1,v+=vs,80,"Patalpa",Normal,Location,false,LocationSClass);
    end;
    if (IsEnterprise) then begin
      if (StandardHansa==false) then begin
        EditField(h1,v+=vs,80,"Filialas",ViewOnly,BranchID,false,0);
//  EditField(h2,v=vm,80,"Total Quantity",ViewOnly,TotQty,true,0);
//  EditField(h2,v+=vs,80,"Total Weight",ViewOnly,TotWeight,true,0);
//  EditField(h2,v+=vs,80,"Total Volume",ViewOnly,TotVolume,true,0);
  EditField(h2,v=vm,80,"Pasl. Užsak. nr.",Normal,SVONr,false,0);
  EditField(h2,v+=vs,80,"Darbo Užsak. nr.",Normal,WONr,false,0);
  EditField(h2,v+=vs,80,"P/U proceso nr.",Normal,POCQStatNr,true,POCQStatSClass);
  EditField(h2,v+=vs,80,"PU kontrakto nr.",ViewOnly,POCOSerNr,true,0);
  end;
  	CheckBox(473,v=vm,0,"Faktūra prieš gavimą",InvBeforePU);
    CheckBox(473,v+=vs,0,"Nustatyti nulinį gavimų kiekį",SetZeroPUQuant);
    EditField(h3,v+=vs,80,"Intrastat oper. kd.",Normal,IntrastatTransCode,false,IntrastatTransCodeSClass);
    end;
  end;
  if (IsEnterprise) then begin
    Tile(tilenr,90,false,tilenr,LangCode); tilenr = tilenr + 1;
    EditField(h1,v=6,80,"Nuolaidų matrica",Normal,RebCode,false,RebSClass);
    if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Faktoringas",Normal,VEFactoring,false,VESClass);
    end;
  EditField(h1,v+=vs,80,"Užsakymo nr.",Normal,OrdNr,false,0);
  EditField(h1,v+=vs,-20,"Komentaras",Normal,Comment,false,0);
    if (HasSalesGroup) then begin
  EditField(h2,v=vm,80,"Pard. grupė",Normal,SalesGroup,false,SalesGroupSClass);
  EditField(h2,v+=vs,80,"Faktūra kam",Normal,InvoiceToCode,false,VESClass);
    end;
  EditField(h2,v+=vs,80,"Pirkimų sav.",Normal,CostPerUnit,true,0);
    if (HasLanguages) then begin
    EditField(h3,v=vm,80,"Kalba",Normal,LangCode,false,LangSClass);
    end;
  end else begin
    Tile(tilenr,20,false,tilenr,Comment); tilenr = tilenr + 1;
    if (HasAdvancedPricing) then begin
      EditField(h1,v=6,80,"Nuolaidų matrica",Normal,RebCode,false,RebSClass);
    end else begin
    	EditField(h1,v=6,-20,"Komentaras",Normal,Comment,false,0);
    end;
    if (HasLanguages) then begin
      EditField(h1,v+=vs,80,"Kalba",Normal,LangCode,false,LangSClass);
    end;
  end;
  Tile(tilenr,230,false,tilenr,Addr1); tilenr = tilenr + 1;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Užsakymas"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Adresas"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,vm=(v+=vs), -20,label,Normal,InvAddr4,false,0);
  vm = vm + 40;

  if (HasApprovals) then begin
    SoftEditField(h3=h+4,v=vm,123,"Patvirt. statusas",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
  end;
/*
//oldapprovals
  if (HasApprovals) then begin
    ButtonFrame(h3=h+4,v=vm,123,6,"Patvirtinimo būklė");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nereikalaujama",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nepradėta",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Neprašoma",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Laukiama",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Patvirtinta",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Atmesta",AcceptanceStatus);
  end;
*/
  if (HasVATZone) then begin
    v = VATZoneButtonsLabelslit(h3=290,v=vm,170,16);
  end;
  if (IsEnterprise) then begin
  EditField(h2=-170,v=vm,150,"Regionas",Normal,Region,false,RegionSClass);
//  EditField(h2,v+=vs,150,"VAT Reg. No.",Normal,VATNr,false,0);
//  EditField(h2,v+=vs,150,"Tel.",Normal,Phone,false,0);
//  EditField(h2,v+=vs,150,"Fax",Normal,Fax,false,0);
  end;
  Tile(tilenr,130,false,tilenr,ShipAddr0); tilenr = tilenr + 1;
  EditField(h,v=6,-20,"Siuntimo",Normal,ShipAddr0,false,0);
  EditField(h,v+=vs,-20,"adresas",Normal,ShipAddr1,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h,v+=vs,-20,"",Normal,DelAddr4,false,0);
  if (IsEnterprise and StandardHansa==false) then begin
    Tile(tilenr,70,false,tilenr,ShipCost); tilenr = tilenr + 1;
  vs = 20; h2 = 290; h3 = 530;
  label = UserDefined("AccBlock","PUCost1");
  if (blank(label)) then begin label = "Papild. kaštai 1";end;
  EditField(h1,v=6,70,label,Normal,Cost1,true,0);
  label = UserDefined("AccBlock","PUCost2");
  if (blank(label)) then begin label = "Papild. kaštai 2";end;
  EditField(h2,v,70,label,Normal,Cost2,true,0);
  label = UserDefined("AccBlock","PUCost3");
  if (blank(label)) then begin label = "Papild. kaštai 3";end;
  EditField(h1,v+=vs,70,label,Normal,Cost3,true,0);
  label = UserDefined("AccBlock","PUCost4");
  if (blank(label)) then begin label = "Papild. kaštai 4";end;
  EditField(h2,v,70,label,Normal,Cost4,true,0);
  label = UserDefined("AccBlock","PUCost5");
  if (blank(label)) then begin label = "Papild. kaštai 5";end;
  EditField(h1,v+=vs,70,label,Normal,Cost5,true,0);
  EnterSkip(TransDate);
  ButtonFrame(h3,v=16,130,2,"Papild. kaštų skaičiavimas");
  RadioButton(h3,v,0,0,"Vertė",ExtraCostsCalculation);
  RadioButton(h3,v+=16,1,0,"Svoris",ExtraCostsCalculation);
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
/*
    if (IsEnterprise) then begin
      SpecialMenu("Add Planned Payment",' ',9,"PlannedPaymentPODsm");
    end;
*/
    if (HasModIN) then begin
      SpecialMenu("Prekės būklė",'I',2,"ItemStatusPODsm");
    end;
    SpecialMenu("Pirkimų užsakymo būklė",'r',5,"POStatRnPODsm");
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
    if (HasModIN) then begin
      SpecialMenu("Sukurti gavimą",'L',0,"PUFromPODsm");
    end;
    if (HasModPL) then begin
      SpecialMenu("Sukurti pirkimo faktūrą",'F',1,"VIFromPODsm");
    end;
    if (IsEnterprise) then begin
      SpecialMenu("Sukurti prekių grąžinimą",'B',6,"RetPUFromPODsm");
    end;
/*
  if (HaseMail) then begin
    SpecialMenu("Create e-mail",'m',3,"CreateMailFromPODsm");
  end;
*/
  end else begin
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  if (HasTaxMatrix) then begin
    SpecialMenu("Atidaryti mok. matricą",' ',25,"OpenVatMatrixPODsm");
  end;
  SpecialMenu("Pirkimo užsakymo būklė",'r',5,"POStatRnPODsm");
  if (IsEnterprise) then begin
    SpecialMenu("Rezervacijos",' ',6,"POReservPODsm");
  end;
  if (HasApprovals) then begin
    SpecialMenu("Patvirtinimo užklausa",' ',6,"POSendforAcceptancePODsm");
    SpecialMenu("Atšaukti patvirtinimo užklausą",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModCRM) then begin
//    SpecialMenu("Sukurti veiklą",'c',9,"CreateActFromPODsm");
  end;
  if (HasDownpayments) then begin
    SpecialMenu("Sukurti išankstinio apmokėjimo faktūrą",' ',3,"DownPayFromPODsm");
  end;
  if (HaseMail) then begin
    SpecialMenu("Sukurti e-laišką",'m',3,"CreateMailFromPODsm");
  end;
  if (HasModIN) then begin
    SpecialMenu("Sukurti prekių gavimą",'L',0,"PUFromPODsm");
  end;
  if (IsEnterprise and StandardHansa==false) then begin
    SpecialMenu("Sukurti tiesioginį pristatymą",'l',0,"DropSHFromPODsm");
  end;
  if (HasModPL) then begin
    SpecialMenu("Sukurti pirkimo Faktūrą",'F',1,"VIFromPODsm");
  end;
  if (HasRetGoodsToSupp and HasModIN) then begin
    SpecialMenu("Sukurti prekių grąžinimą",'B',6,"RetPUFromPODsm");
  end;
    SpecialMenu("Pridėti tiekėją",' ',0,"AddSupplierPODsm");
    SpecialMenu("Pridėti prekę",' ',0,"AddItemPODsm");
  end;
  EndWindow;
end;

window TmpPODClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Create goods receipt",TmpPODClass,CGOther,-);
  Modality(1);
  UseView(TmpPOVc);
  SetWRect(20,80,750,340);
  Sizeable(-1,-1,0,0);
  EditField(h=80,v=10,80,"Nr.",ViewOnly,SerNr,false,0);
  HalPushButton(h+150,10,-50,40,"TmpPODClass_CreatePUVc","Create goods receipt");
  MatrixBegin(20,v+=60,-50,-5,-,599);
  MatColTL(1,30,"Item",0,M4Code,ViewOnly,20,ArtCode,false,INSCLass);
  MatColTL(1,150,"Name",0,M4Str,ViewOnly,200,ArtName,false,0);
  MatCol(1,-300,"Qty",0,Quant,false,0);
  MatCol(1,-220,"Serial nr.",0,SerialNr,false,0);
  MatCol(1,-100,"Best before",0,BestBeforeDate,false,PasteCurDate);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Split Row",' ',' ',0,"SplitRowTmpPODsm");
  EndRowMenu;
  EndMatrix;
  SpecialMenu("Generuoti serijinius nr.",' ',2,"GenSerialNoTmpPODsm");
  EndWindow;
end;

window ITDClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs,tilenr;
  boolean taxtempf;
  WindowBegin("Prekės grupė",ITDClass,CGview,-);
  if (IsEnterprise) then begin
    SetWRect(64,80,680,470);
//  Sizeable(-1,-1,0,0);
  UseView(ITVc);
  Tile(0,90,false,"",Code);
  v = 6; vs = 20; h = 120;
  EditField(h=120,v, 70,"Nr.",St_i,Code,false,0);
  EditField(h,v+=20 ,200,"Pavadinimas",Normal,Comment,false,0);
  CheckBox(h+220,v,0,"Pakuotės prekės grupė",PackMaterial); //EBS
  EditField(h,v+=vs ,200,"Klasių tipai",Normal,ClassType,false,CTypeSClass);
    tilenr = 1;
    TileButton(tilenr,"Sąsk.");  tilenr = tilenr + 1;
    TileButton(tilenr,"Kredito sąsk.");  tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
      TileButton(tilenr,"Paslugų sąsk.");  tilenr = tilenr + 1;
    end;
    TileButton(tilenr,"Savikainos modelis");  tilenr = tilenr + 1;
    TileButton(tilenr,"Frachtas");  tilenr = tilenr + 1;
    TileButton(tilenr,"Tekstas");  tilenr = tilenr + 1;
    if (HasCharts) then begin
      TileButton(tilenr,"BI");  tilenr = tilenr + 1;
    end;
    tilenr = 1;
    Tile(tilenr,260,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  EditField(h=120,vm=(v=6),55,"Viet. pard. sąsk.",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLIT & "Pardavimų sąsk.",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Ne ES pard. sąsk.",Normal,ExpSalesAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Viet. savik. sąsk.",Normal,CostAcc,false,AccSClass);
  EditField(h,v+=vs ,55,VATZoneNameLIT & "Savikainos sąsk.",Normal,EUCostAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Ne ES savik. sąsk.",Normal,ExpCostAcc,false,AccSClass);
    if (StandardHansa==false) then begin
  EditField(h,v+=vs ,55,"Neb. gaminių sąsk.",Normal,WIPAcc,false,AccSClass);
    end;
  EditField(h,v+=vs,55,"Komponentų pan.",Normal,CompUsage,false,AccSClass);
    if (StandardHansa==false) then begin
  EditField(h,v+=vs,55,"Gamybos kontrolė",Normal,ProdControl,false,AccSClass);
  EditField(h,v+=vs,55,"Gamybos pap. kaštai",Normal,ProdWCostAcc,false,AccSClass);
    EditField(h,v+=vs,55,"Viešbučio WIP sąsk.",Normal,HotelWIPAcc,false,AccSClass);
    end;
  EditField(h=350,v=vm,20,"Vietinis PVM kodas",Normal,VATCodeDom,false,VATCodeSClass);
    EditField(h,v+=vs,20,VATZoneEditFieldLabelLIT(1) & "PVM kodas",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h,v+=vs,20,"Ne ES PVM kodas",Normal,VATCodeExp,false,VATCodeSClass);
  EditField(h,v+=vs ,55,"Viet. pirk. kontrol. sąsk.",Normal,PurchAcc,false,AccSClass);
  EditField(h,v+=vs ,55,VATZoneNameLIT & "Pirkimų kontr. sąsk.",Normal,EUPurchAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Ne ES pirk. kontrol. sąsk.",Normal,ExpPurchAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Atsargų sąsk.",Normal,InvAcc,false,AccSClass);
    if (StandardHansa==false) then begin
  EditField(h,v+=vs ,55,"Pirk. kainų kaitos sąsk.",Normal,PriceVarianceAcc,false,AccSClass);
  EditField(h,v+=vs ,55,"Panaud. kaitos sąsk.",Normal,UsageVarianceAcc,false,AccSClass);
    end;
  EditField(h,v+=vs ,55,"Nuolaidos sąsk.",Normal,DiscountAcc,false,AccSClass);
    EditField(h,v+=vs,55,"Proj. medž. pan. sąsk.",Normal,ProjMaterialsUsageAcc,false,AccSClass);
    if (StandardHansa==false) then begin
      EditField(h=120,v+=vs,405-120,"Objektas",Normal,Objects,false,ObjSClass);
      EditField(h2=530,v=vm,50,"Viet. mok. šabl.",Normal,TaxTemplateCode,false,TaxTemplateSClass);
      EditField(h2,v+=vs,50,VATZoneEditFieldLabelLIT(1) & "Mok šabl.",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,"Eksp. mok. šabl.",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
    end;
    Tile(tilenr,100,false,tilenr,CredSalesAcc); tilenr = tilenr + 1;
    StaticText(h=120,v=7,"Kredito pažymos",false);
    EditField(h,vm=(v+=20),55,"Pradžios data",Normal,CredSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLIT & "Pardavimų sąsk.",Normal,CredEUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Ne ES pard. sąsk.",Normal,CredExpSalesAcc,false,AccSClass);
  EditField(h=350,v=vm,20,"Viet. PVM kodas",Normal,CredVATCodeDom,false,VATCodeSClass);
    EditField(h,v+=vs,20,VATZoneEditFieldLabelLIT(1) & "PVM kodas",Normal,CredVATCodeEU,false,VATCodeSClass);
  EditField(h,v+=vs,20,"Ne ES PVM kodas",Normal,CredVATCodeExp,false,VATCodeSClass);
    if (StandardHansa==false) then begin
      Tile(tilenr,100,false,tilenr,SVOInvbleSalesAcc); tilenr = tilenr + 1;
  EditField(h=170,v=6,55,"Pasl. Fakt. pard. sąsk.",Normal,SVOInvbleSalesAcc,false,AccSClass);
//       EditField(h,v+=vs,55,"Serv. Warranty Sales A/C",Normal,SVOWarrantySalesAcc,false,AccSClass); // Not being used in code atm
//       EditField(h,v+=vs,55,"Serv. Contract Sales A/C",Normal,SVOContractSalesAcc,false,AccSClass); // Not being used in code atm
//       EditField(h,v+=vs,55,"Serv. Goodwill Sales A/C",Normal,SVOGoodwillSalesAcc,false,AccSClass); // Not being used in code atm
  EditField(h=400,v=6,55,"Pasl. Fakt. sav. sąsk.",Normal,SVOInvbleCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Pasl. garant. sav. sąsk.",Normal,SVOWarrantyCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Pasl. sut. sav. sąsk.",Normal,SVOContractCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Pasl. Goodwill sav. sąsk.",Normal,SVOGoodwillCostAcc,false,AccSClass);
    end;
    Tile(tilenr,250,false,tilenr,CostPerc); tilenr = tilenr + 1;
  ButtonFrame(h=30,vm=(v=20),230,6,"Pirminis savikainos mod.");
  RadioButton(h,v,0,0,"Pagal nutylėjimą",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"Įsigijimo kaina",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"% _nuo bazinės kainos",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"Svertinis vidurkis",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"Eilė",PrimaryCostModel);
  RadioButton(h,v+=16,9,0,"Jokio",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"Eilės savikainos modelis");
  RadioButton(h,v,0,0,"Pagal nutylėjimą",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"F_IFO",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"LIFO",QueuedCostModel);

  ButtonFrame(h2=280,v=vm,200,3,"Savikaina serijiniams nr.");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"Savikaina ne serijiniams nr.",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"Savikaina serijiniams nr.",FIFOPerSerialNr);
  ButtonFrame(h2,v+=40,200,3,"Eilės modelis pagal patalpą");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"Eilės modelis pagal patalpą",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"Eilė pagal patalpą",FIFOPerLocation);
  ButtonFrame(h2,v+=40,200,3,"Svertinis vid. pagal patalpą");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"Svert. vid. ne pagal patalpą",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"Svert. vid. pagal patalpą",WAPerLocation);
/*  5.3
  ButtonFrame(h2,v+=40,200,3,"Savikaina patalpai");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",CostPricePerLocation);
  RadioButton(h2,v+=16,1,0,"Savikaina ne pagal patalpą",CostPricePerLocation);
  RadioButton(h2,v+=16,2,0,"Savikaina patalpai",CostPricePerLocation);
*/
    Tile(tilenr,80,false,tilenr,EUCodex); tilenr = tilenr + 1;
  //  CheckBox(h=90,v+=30,0,"Internal (Not Showing in WebShop)",Internal);
    if (StandardHansa==false) then begin
    CheckBox(h=90,vm=(v=16),0,"Šiai grupei nespausdinti frachto etikečių",ExclFrLabPr);
  CheckBox(h,v+=16,0,"Įtraukti fiksuotą prekės kainą",InclItemFreight);
  EditField(h+195,v+2 ,55,"",Normal,FixedFreight,true,0);
    EditField(h=140,v+=22,200,"Reikmenų/EAN kodas",Normal,EUCodex,false,CommoditySClass);
    end else begin
      EditField(h=120,vm=(v=16),200,"Reikmenų/EAN",Normal,EUCodex,false,CommoditySClass);
    end;
    EditField(h=220,v+=vs,120,"Produkto/paslaugų klasė",Normal,CPSCode,false,0);
    ButtonFrame(h=400,v=vm,80,3,"Tipas");
  RadioButton(h,v,0,0,"Pagrindinis",Type);
  RadioButton(h,v+=16,1,0,"Transportas",Type);
  RadioButton(h,v+=16,2,0,"Įpakavimas",Type);
    Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-20,INTextRowType,99);
  MatCol(1,24,"Kalba",0,LangCode,false,LangSClass);
  MatCol(1,84,"Tekstas",0,Text,false,0);
  EndMatrix;
    if (HasCharts) then begin
      Tile(tilenr,400,false,tilenr,-);  tilenr = tilenr + 1;
    ChartArea(10,6,-10,390,"$ITDCLass_BIChart");
    end;
  end else begin
  SetWRect(64,80,470,230);
  UseView(ITVc);
    v = 6; vs = 20; h = 120; h2 = 300;
  EditField(h,v,70,"Kodas",Normal,Code,false,0);
    EditField(h,v+=vs,-20,"Pavadinimas",Normal,Comment,false,0);
    if (HasVATZone) then begin
      EditField(h,vm=(v+=vs),20,"Vietinis PVM kodas",Normal,VATCodeDom,false,VATCodeSClass);
      EditField(h,v+=vs,20,VATZoneEditFieldLabelLIT(1) & "PVM kodas",Normal,VATCodeEU,false,VATCodeSClass);
      EditField(h,v+=vs,20,"Eksportuoti PVM kodą",Normal,VATCodeExp,false,VATCodeSClass);
    end else begin
      if (HasTaxMatrix) then begin
        EditField(h,v+=vs,55,"Mok.šabl.",Normal,TaxTemplateCode,false,TaxTemplateSClass); taxtempf = true;
      end else begin
      EditField(h,v+=vs,20,"PVM kodas",Normal,VATCodeDom,false,VATCodeSClass);
      end;
    end;
  if (HasModNL) then begin
      if (HasVATZone) then begin
        EditField(h2,v=vm,55,"Viet. pard. sąsk.",Normal,SalesAcc,false,AccSClass);
        EditField(h2,v+=vs,55,VATZoneNamelit & "Pard. sąsk.",Normal,EUSalesAcc,false,AccSClass);
        EditField(h2,v+=vs,55,"Eksporto pardavimų A/C",Normal,ExpSalesAcc,false,AccSClass);
      if (HasModIN) then begin
          EditField(h2,v+=vs,55,"Atsargų A/C",Normal,InvAcc,false,AccSClass);
          EditField(h2,v+=vs ,55,"Vietinių pirk. padidėj A/C",Normal,PurchAcc,false,AccSClass);
          EditField(h2,v+=vs ,55,VATZoneNameLIT & "Pirkimų padidėj. A/C",Normal,EUPurchAcc,false,AccSClass);
          EditField(h2,v+=vs ,55,"Importuoti pirk. padidėj. A/C",Normal,ExpPurchAcc,false,AccSClass);
        end else begin
//          EditField(h,v+=vs,55,"#Stock# A/C",Normal,InvAcc,false,AccSClass);
        end;
      end else begin
        EditField(h,v+=vs,70,"Pard. sąsk.",Normal,SalesAcc,false,AccSClass);
        if (HasModIN) then begin
  EditField(h,v+=vs,70,"Atsargų sąsk.",Normal,InvAcc,false,AccSClass);
  EditField(h,v+=vs,70,"Pirkimų kontr. sąsk.",Normal,PurchAcc,false,AccSClass);
        end;
      end;
      if (HasLocalization("PRT")) then begin
        StaticText(h,v+=40,"Kredito pažyma",false);
        EditField(h,v+=vs,55,"Pard. sąsk.",Normal,CredSalesAcc,false,AccSClass);
        EditField(h,v+=vs,vs,"PVM kodas",Normal,CredVATCodeDom,false,VATCodeSClass);
      end;
      if (HasLocalization("BRA,HRV") or HasTaxMatrix) then begin
        if (HasVATZone) then begin
          if (taxtempf==false) then begin
          EditField(h,v+=vs,55,"#Dom.# Tax Temp.",Normal,TaxTemplateCode,false,TaxTemplateSClass);
          end;
          EditField(h,v+=vs,55,VATZoneEditFieldLabelLIT(1) & "Mokesč. šabl.",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
          EditField(h,v+=vs,55,"Export Tax Temp.",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
        end else begin
          if (taxtempf==false) then begin
          EditField(h,v+=vs,55,"Tax Temp.",Normal,TaxTemplateCode,false,TaxTemplateSClass);
          end;
      end;
    end;
    end;
    if (HasLocalization("BRA,KEN,POL")) then begin
      EditField(h+100,v+=vs,120,"Produkto/paslaugų klasė",Normal,CPSCode,false,0);
    end;
    if (HasLanguages) then begin
      v = v+54;
      MatrixBegin(4,v,-32,-20,-,99);
      MatCol(1,24,"Kalba",0,LangCode,false,LangSClass);
      MatCol(1,84,"Tekstas",0,Text,false,0);
      EndMatrix;
  end;
end;
  EndWindow;
end;

window BLT_PUPalletLabRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,l,v,vm;
  WindowBegin("Gavimų etiketės",PULabRClass,CGRcW,RcType);
  SetWRect(20,80,400,320);
  EditFieldTL(h=150,v=6,153,"Gavimas",   M4Str,Normal,30,f1,false,0);
  if (HasModProd) then begin
  EditFieldTL(h,v+=20,153,"Produkcija",   M4Str,Normal,30,f7,false,0);
  end;
  EditFieldTL(h,v+=20,100,"Prekė",M4UStr,Normal,41,f3,false,INSClass);
  if (HasItemGroups) then begin
  EditFieldTL(h,v+=20,100,"Prekės grupė",M4UStr,Normal,5,f5,false,ITSClass);
  end;
  if (HasItemClassification) then begin
  EditFieldTL(h,v+=20,100,"Prekės klasė",M4UStr,Normal,100,f4,false,DISClass);
  end;
  if (HasMultiLocations) then begin
  EditFieldTL(h,v+=20,100,"Ptalpa",M4UStr,Normal,10,f6,false,LocationSClass);
  end;
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=20,100,"Tiekėjas",M4UStr,Normal,10,LastAcc,false,VESClass);
  end;
  if (HasSerialNumbers) then begin
    EditFieldTL(h,v+=20,100,"Serijinis numeris",M4UStr,Normal,60,FirstAcc,false,SerialNrSClass);
  end;
  EditFieldTL(h,v+=20,50,"Vertikali paraštė",M4Int,Normal,0,flags[29],false,0);
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=20,100,"Etiketės nr.",M4Str,Normal,30,f2,false,0);
  end;
  ButtonFrame(h=100,vm=(v+=40) /*v=vm*/,l=60,5,"Funkcijos");
  RadioButton(h,v    ,0,0,"1*1",ArtMode);
  RadioButton(h,v+=16,2,0,"2*8",ArtMode);
  RadioButton(h,v+=16,1,0,"3*8",ArtMode);
  RadioButton(h,v+=16,4,0,"2*_4",ArtMode);
  RadioButton(h,v+=16,5,0,"2*_7",ArtMode); v = vm; h = 200;
  if (IsEnterprise) then begin
    CheckBox(h,v,0,"Tik su likučiu",flags[0]); v = v + 16;
  end;
  EndWindow;
end;

window ShipableRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Galimų siuntimų sąrašas",ShipableRClass,CGRcW,RcType);
  SetWRect(20,80,510,390);
  v= 6; vs = 20;h =110;
  EditFieldTL(h,v, 150,"užs.",   M4Str,Normal,30,f1,false,0);
  EditFieldTL(h,v+=vs ,150,"Prekė",M4UStr,Normal,41,LastAcc,false,INSClass);
  EditFieldTL(h,v+=vs ,150,"Pirkėjas",M4UStr,Normal,41,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,150,"Maršrutas",M4Code,Normal,20,f12,false,DelRouteSClass); //EBS
  if (HasSalesman or HasSalesmanBonus) then begin
  EditFieldTL(h,v+=vs ,50,"Pardavėjas",M4UStr,Normal,10,AccStr,false,UserSClass);
  end;
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=vs ,50,"užs. klasė",M4UStr,Normal,5,FirstAcc,false,OrderClassSClass);
  end;
  if (HasObjects) then begin
  EditFieldTL(h,v+=vs ,150,"Objektas",M4UStr,Normal,60,ObjStr,false,ObjSClass);
  end;
  if (HasMultiLocations) then begin
  EditFieldTL(h,v+=vs, 150,"Patalpa",M4UStr,Normal,10,f4,false,LocationSClass);
  end;
  if (HasItemGroups) then begin
  EditFieldTL(h,v+=vs ,50,"Prekių grupė",M4UStr,Normal,5,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs, 150,"Prekės klasė", M4UStr,Normal,100,f8,false,DISClass);
  end;
  if (IsEnterprise) then begin
  EditFieldTL(h,v+=vs ,150,"Plan. siuntimas",M4UStr,Normal,21,Stext,false,PasteCurDate);
  EditFieldTL(h,vm=(v+=vs) ,150,"Užsakymo tipas",M4Str,Normal,433,f7,false,SetSClass);
  end;
  CheckBox(h-5,v+=25,0,"Leisti dalinį siuntimą",OnlyUnprntd);
  if (HasItemGroups) then begin
  CheckBox(h-5,v+=16,0,"Tik pasirinktos grupės prekės",Comparison);
  end;
  ButtonFrame(h-5,vm=(v+=40),123,2,"Būklė");
  CheckBox(h-5,v,0,"Nepatvirtinti",flags[7]);
  CheckBox(h-5,v+=16,0,"Patvirtinti",flags[8]);
  if (IsEnterprise) then begin
  ButtonFrame(h+=150,v=vm,170,3,"Funkcija");
  RadioButton(h,v,0,0,"Visi pirkėjai",flags[9]);
  RadioButton(h,v+=16,1,0,"Neįtraukti sulaikytų pirkėjų",flags[9]);
  RadioButton(h,v+=16,2,0,"Tik sulaikytus pirkėjus",flags[9]);
  end;
  ButtonFrame(h=300,v=24,160,4,"Funkcijos");
  RadioButton(h,v,0,0,"Peržiūra",ArtMode);
  if (HasSalesman or HasSalesmanBonus) then begin
  RadioButton(h,v+=16,3,0,"Peržiūra pagal pardavėją",ArtMode);
  end;
  RadioButton(h,v+=16,1,0,"Detaliai",ArtMode);
  RadioButton(h,v+=16,2,0,"Užsakymų eilutės",ArtMode);
  RadioButton(h,v+=16,4,0,"By routes",ArtMode); //EBS
  EndFrame;
  ButtonFrame(h,v+=40,150,3,"Funkcija");
  RadioButton(h,v,0,0,"Suma",flags[10]);
  RadioButton(h,v+=16,1,0,"Kiekis",flags[10]);
  CheckBox(h+10,v+=16,0,"Rodyti sandėlio likučius",flags[11]);
  EndWindow;
end;

window IVRClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,v,vs;

  WindowBegin("Faktūros",IVRClass,CGRcW,RcType);
  SetWRect(20,80,440,300);
  PeriodField(h=100,v=6,"Periodas");
  EditFieldTL(h,v+=20, 150,"Nr.",   M4Str,Normal,30,f1,false,0);
  EditFieldTL(h,v+=20, 150,"Oficialus Nr.",   M4Str,Normal,60,f3,false,0);
  EditFieldTL(100,v+=20,150,"Pirkėjas",M4UStr,Normal,41,f2,false,CUSClass);
  EditFieldTL(100,v+=20,150,"Route",M4Code,Normal,20,f10,false,DelRouteSClass); //EBS
  EditFieldTL(100,v+=20,50,"Kalba",   M4Str,Normal,5,Language,false,LangSClass);
  ButtonFrame(h=30,v=147,175,3,"Būklė"); //EBS edit
  RadioButton(h,v,0,0,"Tik nespausdintos",OnlyUnprntd);
  RadioButton(h,v+=16,1,0,"Visos",OnlyUnprntd);
  RadioButton(h,v+=16,2,0,"Originalios",OnlyUnprntd);
  ButtonFrame(h,v=230,175,5,"Eilutės išd."); //EBS edit
  RadioButton(h,v,0,0,"Nėra",flags[15]);
  RadioButton(h,v+=16,1,0,"Pagal prekės gr.",flags[15]);
  RadioButton(h,v+=16,2,0,"Pagal prekės gr. - viena eilutė",flags[15]);
  RadioButton(h,v+=16,3,0,"Kambario paketą",flags[15]);
  RadioButton(h,v+=16,4,0,"Viena eilutė",flags[15]);
  CheckBox(h1=225,v=140,0,"Tik neapmokėtos faktūros",flags[10]); //EBS edit
  CheckBox(h1,v+=16,0,"Praleisti sustabdytas faktūras",flags[11]);
  CheckBox(h1,v+=16,0,"Įtraukti EDI faktūras",flags[28]);
  CheckBox(h1,v+=16,0,"Įtraukti E-faktūras",flags[5]);
  ButtonFrame(h1,v=230,165,4,"Faktūros tipas"); //EBS edit
  CheckBox(h1,v,0,"Faktūra",flags[1]);
  CheckBox(h1,v+=16,0,"Už grynus",flags[2]);
  CheckBox(h1,v+=16,0,"Kredito pažyma",flags[3]);
  CheckBox(h1,v+=16,0,"Delspinigių faktūra",flags[4]);
  EndWindow;
end;

window BLT_PUToScannerVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Gavimų eksportas į barkodų skaitytuvą",BLT_PUToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periodas");
    EditFieldTL(h,v+=20,100,"Gavimo nr.",M4Long,Normal,10,long1,false,PUSClass);
    ButtonFrame(h,v+=40,140,2,"Include");
    CheckBox(h,v,0,"Exported",flags[0]);
    CheckBox(h,v+=16,0,"Not exported",flags[1]);
  EndWindow;

  return;
end;

window BLT_SHToScannerVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Siuntimų eksportas į barkodų skaitytuvą",BLT_SHToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periodas");
    EditFieldTL(h,v+=20,100,"Siuntimo nr.",M4Long,Normal,10,long1,false,SHSClass);
    ButtonFrame(h,v+=40,140,2,"Include");
    CheckBox(h,v,0,"Exported",flags[0]);
    CheckBox(h,v+=16,0,"Not exported",flags[1]);
  EndWindow;

  return;
end;

window BLT_ORToScannerVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Siuntimų eksportas į barkodų skaitytuvą",BLT_ORToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periodas");
    EditFieldTL(h,v+=20,100,"Užsakymo nr.",M4Long,Normal,10,long1,false,ORSClass);
    ButtonFrame(h,v+=40,140,2,"Include");
    CheckBox(h,v,0,"Exported",flags[0]);
    CheckBox(h,v+=16,0,"Not exported",flags[1]);
  EndWindow;

  return;
end;

window BLT_ScannerSetTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 150;

  WindowBegin("Barcode scanner folders",BLT_ScannerSetTClass,CGSbl,ItemSettingType);
  Sizeable(-1,-1,-1,0);
  SetWRect(20,80,480,320);
  SetBlid(BLT_ScannerSetBlock);
  EditField(h,v=10,-20,"Goods rec. file name",Normal,PUFileName,false,0);
  EditField(h,v+=vs,-20,"Goods rec. export folder",Normal,PUExpFolder,false,0);
  EditField(h,v+=vs,-20,"Goods rec. import folder",Normal,PUImpFolder,false,0);
  EditField(h,v+=vs,-20,"Delivery file name",Normal,SHFileName,false,0);
  EditField(h,v+=vs,-20,"Delivery export folder",Normal,SHExpFolder,false,0);
  EditField(h,v+=vs,-20,"Delivery import folder",Normal,SHImpFolder,false,0);
  EditField(h,v+=vs,-20,"Item file name",Normal,ItemFileName,false,0);
  EditField(h,v+=vs,-20,"Item exprot folder",Normal,ItemExpFolder,false,0);
  EndWindow;
end;

window SHSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Siuntimai",SHSClass,CGslist,-);
  SpawnClass(SHDClass);
  SetWRect(20,80,880,298);
  Sizeable(-1,-1,0,0);
  UseView(SHVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(79,79,"OK",OKFlag,false,OKFlag);
  RlColKey(111,111,"Data",ShipDate,false,ShipDate);
  if (HasMultiLocations) then begin
    RlCol(191,191,"Patalpa",Location,false);
    RlColKey(251,251,"Užsak. nr.",OrderNr,false,OrderKey);
  end else begin
    RlColKey(191,191,"Užsak. Nr.",OrderNr,false,OrderKey);
  end;
  if (HasOfficialSerNr) then begin
    RlColKey(321,321,"Oficialus Nr.",OfficialSerNr,false,OfficialSerNr);
  end;
  RlColKey(411,411,"Pirkėjas",CustCode,false,CustCode);
  RlColKey(471,471,"Pavadinimas",Addr0,false,CustName);
  if (IsEnterprise) then begin
    RlColKey(-180,-180,"Transporto nr.",TransportNumber,false,TransportNumber);
    RlColKey(-80,-80,"Siunt. būdas",ShipMode,false,ShipMode);
  end else begin
    RlColKey(-180,-180,"Komentaras",Comment,false,Comment);
  end;
  SearchField("Ieškoti");
  EndWindow;
end;

window BLT_PUFromScannerVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Goods receipt import",BLT_PUFromScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    EditFieldTL(h=100,v=10,-20,"File name",M4Str,Normal,255,f1,false,BLT_FileSClass);
  EndWindow;

  return;
end;

window BLT_SHFromScannerVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Delivery note import",BLT_SHFromScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    EditFieldTL(h=100,v=10,-20,"File name",M4Str,Normal,255,f1,false,BLT_FileSClass);
  EndWindow;

  return;
end;

window BLT_FileSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Insert",BLT_FileSClass,CGother,HBlRecType);
    SetWRect(240,80,500,299);
    Sizeable(-1,-1,0,0);
    StringList(9,9,-40,-10);
  EndWindow;

  return;
end;

window BLT_INToScannerVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm;

  WindowBegin("Item export",BLT_INToScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
  EndWindow;

  return;
end;

window ProdSettingsTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Gamybos parametrai",ProdSettingsTClass,CGSbl,-);
  SetBlid(ProdSettingsBlock);
  SetWRect(20,80,470,420);
  Sizeable(-1,-1,0,0);
  Tile(0,30,false,"",-);
  TileButton(1,"Nustatymai");
  TileButton(2,"Prekės");
  Tile(1,120,true,"1",DayBuffer);
  h = 120; v = 6; vs = 20; h2 = 350;
  EditField(h,v,100,"Dienos atsargoje",Normal,DayBuffer,false,0);
  CheckBox(h,v+=30,0,"Tikras kiekis gaminių eilėse",ProdRowsHoldActualQty);
  CheckBox(h,v+=17,0,"Visada kurti gaminamą kiekį iš planuojamo",SetNormalPlanned);
  CheckBox(h,v+=17,0,"Kurti sandėlio nurašymus iš išardytų gaminių",MakeSDFromDiscard);
  CheckBox(h,v+=17,0,"Apvalinti valandas iki vienos dienos",RoundUpToOneDay);
  if (StandardHansa==false) then begin
    CheckBox(h,v+=17,0,"Perkelti Užsakymo klasę į produkcijos klasę",OrdClassToProd);
  end;
 // CheckBox(h,v+=17,0,"Atnaujinti produkcijos kiekius iš sandėlio perkėlimų",UpdProdInQtyFromStockMov);
//we will finish it in 6.2
  h=h-100;
  if (HasAdvancedProduction) then begin
    ButtonFrame(h,v+=41,380,2,"Gamybos operacijos");
    RadioButton(h,v,0,0,"Leisti dirbti su kita seka, nepabaigus esamos",CompleteSequence);
    RadioButton(h,v+=16,1,0,"Pabaigti seką prieš pereinant prie kitos",CompleteSequence);
  end;
  ButtonFrame(h,v+=41,123,2,"Kurti suplanuotus");
  RadioButton(h,v,0,0,"Gaminius",AutoGenProd);
  RadioButton(h,v+=16,1,0,"Gamybos Užsakymus",AutoGenProd);
  Tile(2,140,true,"2",MachineCostItem);
  h = 120; v = 3; vs = 20; h2 = 350;
  EditField(h,v,100,"Įrengimų kaštų prekė",Normal,MachineCostItem,false,INSClass);
  EditField(h,v+=vs,100,"Darbo kaštų prekė",Normal,LabourCostItem,false,INSClass);
  EditField(h2,v,60,"Darbo veiklos tipas",Normal,ActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Parengimo kaštų prekė",Normal,SetupCostItem,false,INSClass);
  EditField(h2,v,60,"Parengimo veiklos tipas",Normal,SetupActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Perkėlimo kaštų prekė",Normal,MoveCostItem,false,INSClass);
  EditField(h2,v,60,"Perkėlimo veiklos tipas",Normal,MoveActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Sekos kaštų prekė",Normal,QueueCostItem,false,INSClass);
  EditField(h2,v,60,"Sekos veiklos tipas",Normal,QueueActType,false,ActTypeSClass);
  EditField(h,v+=vs,60,"Box item class",Normal,BoxItemClass,false,DISClass); //EBS
  h=h-100;
  ButtonFrame(h,v+=40,123,2,"Laikas");
  RadioButton(h,v,0,0,"Tikras laikas",FixedTime);
  RadioButton(h,v+=16,1,0,"Fiksuotas laikas",FixedTime);
  CheckBox(h,v+=30,0,"Autom.skaičiuoti pagamintų prekių savikainą",AutoCalcCostf);
  CheckBox(h,v+=17,0,"Papildyti darbo kaštais",AddWorkCost);
  EditField(350,v,60,"Darbo savikaina/val.",Normal,WorkCostPerHour,true,0);
  CheckBox(h,v+=17,0,"Papildyti išardytų savikaina",AddDiscardedCost);
/*
  EditField(h,v,100,"Machine Cost Item",Normal,MachineCostItem,false,INSClass);
  EditField(h2,v,60,"Prod. Act. Type",Normal,ActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Labour Cost Item",Normal,LabourCostItem,false,INSClass);
  EditField(h2,v,60,"Setup Act. Type",Normal,SetupActType,false,ActTypeSClass);
  EditField(h,v+=vs,100,"Buffer Days",Normal,DayBuffer,false,0);
  CheckBox(h=h-100,v+=30,0,"Auto Calc Cost of produced items",AutoCalcCostf);
  CheckBox(h,v+=17,0,"Round odd Hours to One Day",RoundUpToOneDay);
  CheckBox(h,v+=17,0,"Add Work Cost",AddWorkCost);
  EditField(350,v,60,"Work Cost per Hour",Normal,WorkCostPerHour,true,0);
  CheckBox(h,v+=17,0,"Add Discarded Cost",AddDiscardedCost);

  CheckBox(h,v+=17,0,"Create Stock Depreciation from Discarded Production",MakeSDFromDiscard);
  CheckBox(h,v+=17,0,"Always create Normal Production Qty from Planned",SetNormalPlanned);
  CheckBox(h,v+=17,0,"Production Lines hold Actual Qty",ProdRowsHoldActualQty);
  ButtonFrame(h,v+=41,123,2,"Generate Planned");
  RadioButton(h,v,0,0,"Productions",AutoGenProd);
  RadioButton(h,v+=16,1,0,"Production Orders",AutoGenProd);
  ButtonFrame(h,v+=41,380,0,"Production Operations");
  ButtonFrame(h,v+=20,380,2,"Sequence");
  RadioButton(h,v,0,0,"Allow to work with Next Sequence while current one is not finished",CompleteSequence);
  RadioButton(h,v+=16,1,0,"Complete Sequence before next one",CompleteSequence);
*/
  EndWindow;
end;

window BLT_BoxItemsSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Insert",BLT_BoxItemsSClass,CGother,HBlRecType);
    SetWRect(240,80,500,299);
    Sizeable(-1,-1,0,0);
    StringList(9,9,-40,-10);
  EndWindow;

  return;
end;

window RecDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vm,vs;
  WindowBegin("Ruošinys",RecDClass,CGview,-);
  SetWRect(20,80,600,340);
  Sizeable(-1,-1,0,0);
  UseView(RecVc);
  FormName(RecForm);
  vs = 20;
  h = 130; h2 = 350; h3 = 570;
  EditField(h,v=10,50,"Kodas",St_i,Code,false,0);
  EditField(h2,v,-40,"Komentaras",Normal,Comment,false,0);
  if (HasAdvancedProduction) then begin
    EditField(h,v+=vs,85,"Norm. prod. kiekis",Normal,NormProdQty,true,0);
		EditField(h2,v,85,"Laikas paruošimui",Normal,SetUpTime,true,0);
		EditField(h3,v,85,"Kalba",Normal,LangCode,true,LangSCLass);
		EditField(h,v+=vs,85,"Min. gam. apimtis",Normal,MinProdQty,true,0);
		EditField(h2,v,85,"Dienos pagaminimui",Normal,QtyAssemblyDays,true,0);
  end;
  if (IsStandardProduct) then begin
    CheckBox(h3,v+=vs,0,"Uždarytas",Closed);
  end else begin
    CheckBox(h3,v,0,"Uždarytas",Closed);
  end;
  if (HasAdvancedProduction) then begin
    EditField(h,v+=vs,85,"Fiks. surink. dienos",Normal,FixedAssembDays,true,0);
//  EditField(h,v+=vs,85,"In Item Scale",Normal,Scale,false,0);
  EditField(h2,v,85,"Val. pagaminimui",Normal,HrsToProd,true,0);
    EditField(h2+160,v,50,"Minutės",Normal,MinsToProd,true,0);
  EditField(h2+280,v,50,"Sekundės",Normal,SecsToProd,true,0);
  EditField(h,v+=vs,85,"Spalva",Normal,ResMgrColNr,false,SetSClass);
  EditField(h2,v,85,"Gaminių sk.",Normal,NumProd,true,0);
  EditField(h,v+=vs,85,"Stand. siunta",Normal,StdBatch,true,0);
  EditField(h2,v,85,"Papild. gam. kiekis",Normal,ExtraProdQty,false,0);
  EditField(h2+220,v,85,"Laiko klasė",Normal,TimeClass,false,TimeClassSClass); //EBS
  EditField(h,v+=vs,85,"Pagr. maršrutizavimas",Normal,DefaultRouting,false,RoutingSClass);
  EditField(h2,v,85,"Def. box item",Normal,DefBoxItem,false,BLT_BoxItemsSClass); //EBS
  EditField(h2+220,v,85,"Qty in box",Normal,QtyInBox,true,0); //EBS
  EditField(h,v+=vs,-40,"Instrukcijos",Normal,Instr0,false,0);
  EditField(h,v+=vs,-40,"",Normal,Instr1,false,0);
  EditField(h,v+=vs,-40,"",Normal,Instr2,false,0);
  end;
  CheckBox(30,-21,0,"Užrakinta",OKFlag);
  EnterSkip(Math);
  h=4; v=v+(vs+17);
  MatrixBegin(4,v,-50,-49,-,300);
  InsertRowTest;
  DeleteRowTest;
  vm = v;
  Flip(0);
  MatCol(1,30,"Prekė",0,Item,false,INSClass);
  MatCol(1,114,"Aprašymas",0,Comment,false,0);
  Flip(1);
  MatCol(1,-350,"Į",0,InQty,true,MATVARINSClass);
  MatCol(1,-290,"Iš",0,OutQty,true,MATVARINSClass);
  MatCol(1,-230,"Vnt.",0,Unittext,false,UnitSClass);
  if (HasAdvancedProduction) then begin
    MatCol(1,-180,"Paskirst.",0,RelVal,true,0);
  end;
  MatCol(1,-120,"Kaštai",0,ItemCost,true,0);
  if (HasAdvancedProduction) then begin
    MatCol(1,-60,"Papild.",0,ExtraCost,true,0);
  end;
  if (HasAdvancedProduction) then begin
    Flip(2);
    MatCol(1,-400,"Aprašymas",0,Desc,false,0);
    MatCol(1,-240,"Medžiaga",0,Material,false,MaterialSClass);
    MatCol(1,-100,"Ruošinys",0,Recipe,false,SetSClass); // Bad name for field, will be confused with the Recepy of the item
  end;
  EndMatrix;
  vs = 20;
  if (HasAdvancedProduction) then begin
    VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
    v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  end;
  EditField(-370,  -21,85,"Į savikaina",ViewOnly,InSum,true,0);
  EditField(-150,  -21,85,"Į vertė",ViewOnly,OutSum,true,0);
  if (HasAdvancedProduction) then begin
    SpecialMenu("Atidaryti gaminamos prekės aternatyvą",' ',0,"RecShowMachineDsm");
  end;
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  EndWindow;
end;

window PLDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Kaina",PLDClass,CGview,-);
  SetWRect(64,80,709,330);
  UseView(PLVc);
  v = 10; vs = 20; h = 120;
  EditField(h,v, 100,"Prekė",Normal,ArtCode,false,INSClass);
  EditField(h,v+=vs,50,"Kainoraštis",Normal,PLCode,false,PLDefSClass);
  EditField(h,v+=vs,-40,"Comment",Normal,Comment,false,0);
  EditField(h,v+=vs ,70,"Kaina",Normal,ExVatPrice,true,0);
  if (HasModNL) then begin
  EditField(h,vm=(v+=vs),70,"Pardavimų sąsk.",Normal,SalesAcc,false,AccSClass);
  end;

  if (HasStandardCRM) then begin
    EditField(h,v+=vs,70,"Pirkėjas",Normal,CustCode,false,CUSClass);
  end;
  if (HasBuyBack) then begin
    EditField(h,v+=vs ,70,"Savikaina",Normal,CostPrice,true,0);
    EditField(h,v+=20,70,"Sukaup. BuyBack sąsk.",Normal,BBVarAcc,false,AccSClass);
  end;
  //EBS -->
  EditField(h,v+=vs,70,"Akc. pradž. data",Normal,CampStartDate,false,PasteCurDate);
  EditField(h,v+=vs,70,"Akc. pab. data",Normal,CampEndDate,false,PasteCurDate);
  EditField(h,v+=vs,70,"Akc. kaina",Normal,CampPrice,true,0);
  //EBS <--
  if (IsEnterprise) then begin
    CheckBox(80,v+=30,0,"Naudoti šią kainą, netaikyti kitų kainos skaičiavimų",NoOtherPricing);
    CheckBox(80,v+=16,0,"Neperskaičiuoti",DonotRecalculate);
  end;
  if (HasBuyBack) then begin
    CheckBox(80,v+=16,0,"Sukurti BuyBack operaciją",BBGenTrans);
  end;
  EndWindow;
end;

window InvoiceBalticXMLExpVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer h,v,vs,vs2;

  WindowBegin("Faktūros (Edisoft XML) eksportas",InvoiceBalticXMLExpVClass,CGMnt,RcType);
  SetWRect(20,80,450,240);
  v = 20; vs = 20; vs2 = 40; h = 145;
  PeriodField(h,v,"Periodas");
  EditFieldTL(h,v+=vs,150,"Pirkėjas",M4Code,Normal,10,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,150,"Faktūra",M4Long,Normal,0,long1,false,IVSClass);
  h = h-10;
  ColourPushButton(h,v+=vs+10,h+170,v+vs2,"StartInvoiceBalticXMLExpSm","Eksportas",2);
  StaticText(h,v+60,"",false);
  EndWindow;

  return;
end;

window InvBalXMLExpFolTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer h,v,vs,vs2;

  WindowBegin("Faktūros (Edisoft XML) exporto nustatymai",InvBalXMLExpFolTClass,CGSbl,-);
  SetBlid(InvBalXMLExpFolBlock);
  SetWRect(64,80,570,260);
  h=160;v=10; vs =20;
  EditField(h,v,130,"Siuntėjo ILN kodas",Normal,DefSendILN,false,0);
  EditField(h,v+=vs,130,"Siuntėjo klientas kodas",Normal,DefSendCustCode,false,CUSClass);
  EditField(h,v+=vs,130,"Gavėjo ILN kodas",Normal,DefRecvILN,false,0);
  EditField(h,v+=vs,130,"Gavėjo klientas kodas",Normal,DefRecvCustCode,false,CUSClass);
  EditField(h,v+=vs,130,"Logistics company ILN code",Normal,LogistCompILN,false,0);
  EditField(h,v+=vs,130,"Senders veterinary cert. No",Normal,VetCertNo,false,0);
  EditField(h,v+=vs,130,"Cust. code in logistics company",Normal,LogisticCustCode,false,0);
  //h=70;
  EditField(h,v+=vs*2,340,"Edisoft eksp. aplankas",Normal,Folder,false,0);
  EndWindow;

  return;
end;

window ORXMLImpErrorDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Pardavimų užsakymo importas - klaidos",ORXMLImpErrorDClass,CGview,-);
  SetWRect(20,80,500,200);
  UseView(ORXMLImpErrorVc);
  vs=20; h=75;
  EditField(h,v=15,80,"Nr.",Normal,SerNr,false,0);
  EditField(h+150,v,80,"Pardavimų užsakymas",Normal,ORSerNr,false,0);
  EditField(h,v+=vs,80,"Data",Normal,TransDate,false,0);
  EditField(h+150,v,80,"Laikas",Normal,TransTime,false,0);
  EditField(h,v+=vs*2,-40,"Klaida",Normal,Comment,false,0);
  SpecialMenu("",'',0,"");
  EndWindow;

  return;
end;

window ORXMLImpErrorLClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Pardavimų užsakymo importas - klaidos",ORXMLImpErrorLClass,CGmlist,-);
  SpawnClass(ORXMLImpErrorDClass);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,550,300);
  UseView(ORXMLImpErrorVc);
  RecordList(4,17,-20,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(80,80,"Pardavimų užsakymas",ORSerNr,false,ORSerNr);
  RlColKey(160,160,"Data",TransDate,false,TransDate);
  RlCol(225,225,"Laikas",TransTime,false);
  RlColKey(280,280,"Klaida",Comment,false,Comment);
  SearchField("Ieškoti");
  EndWindow;

  return;
end;

window ORXMLImpCUTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Pardavimų užsakymo importas - pirkėjo kodai",ORXMLImpCUTClass,CGHbl,HBlRecType);
  SetBlid(ORXMLImpCUBlock);
  SetWRect(20,80,500,400);
  Sizeable(-1,-1,0,0);
  h = 8; v = 25;
  MatrixBegin(h,v,-31,-10,-,1000);
  MatCol(1,h=30,"Importo pirkėjo ILN kodas",0,ImpCustCode,false,0);
  MatCol(1,h=210,"HansaWorld pirkėjo kodas",0,CustCode,false,VESClass);
  EndMatrix;
  EndWindow;

  return;
end;

window ORXMLImpArtGTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Pardavimų užsakymo importas - prekių grupės",ORXMLImpArtGTClass,CGHbl,HBlRecType);
  SetBlid(ORXMLImpArtGBlock);
  SetWRect(20,80,500,400);
  Sizeable(-1,-1,0,0);
  h = 8; v = 25;
  MatrixBegin(h,v,-31,-10,-,100);
  MatCol(1,h=30,"Prekės grupė",0,ArtGroup,false,ITSClass);
  EndMatrix;
  EndWindow;

  return;
end;

window DelAddrDClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vm,vs;
  string 255 label;
  WindowBegin("Pristatymo adresas",DelAddrDClass,CGview,DelAddrView);
  DynamicWindow;
  SetWRect(64,80,650,420);
  UseView(DelAddrVc);
  v = 10; vs = 20; h = 100; h2 = 350; h3 = 360;
  // if (HasModRent) then begin //EBS
  Tile(0,90,false,"",DelCode);
  TileButton(1,"Adresas");
  if (HasModRent) then begin //EBS
  TileButton(2,"Nuomai");
  end;
  EditField(h,v, 80,"Pirkėjas",Normal,CustCode,false,AllCUSClass);
  EditField(h2,v,-40,"Pavadinimas",Normal,Name,false,0);
  EditField(h,v+=vs, 80,"Siunt. kodas",Normal,DelCode,false,0);
  EditField(h2,v,-40,"Komentaras",Normal,Comment,false,0);
  EditField(h,v+=vs, 80,"Freight comp.",Normal,BLT_FreightComp,false,FreightCompanySClass);
  EditField(h2,v,-40,"Del. address code",Normal,BLT_FreightCompAddr,false,0);
  EditField(h,v+=vs, 80,"Default location",Normal,DefaultLocation,false,LocationSClass);
  // if (HasModRent) then begin //EBS
  Tile(1,250,false,"1",DelAddr0);
  // end; //EBS
  label = UserDefined("CUVc","InvAddr0");
  EditField(h,v=6,-40,label,Normal,DelAddr0,false,0);
  label = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,-40,label,Normal,DelAddr1,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,-40,label,Normal,DelAddr2,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs,-40,label,Normal,DelAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs,-40,label,Normal,DelAddr4,false,0);
  EditField(h,vm = (v+=vs),150,"Kontaktas",Normal,Contact,false,0);
  EditField(h3,v,-40,"El. paštas",Normal,Email,false,0);
  EditField(h,v+=vs,150,"Telefonas",Normal,Phone,false,0);
  EditField(h3,v,-40,"Faksas",Normal,Fax,false,0);
  EditField(h,v+=vs,50,"Šalis",Normal,DelCountry,false,CountrySClass);
  EditField(h3,v,-40,"Regionas",Normal,Region,false,RegionSClass);

  EditField(h,v+=vs,150,"GLN",Normal,RecipientGLN,false,0);
  EditField(h,v+=vs, 150,"Objects",Normal,Objects,false,ObjSClass); //EBS
  EditField(h3,v,-40,"Skyrius",Normal,RecipientDepartment,false,0);
  v = v + vs;
  if (HasFreightAdvanced) then begin
    EditField(h,v,50,"Frachto kodas",Normal,FreightCode,false,WebFreightSClass);
  end;
  if (HasRoute) then begin
    EditField(h3,v,-40,"Maršrutas",Normal,Sorting,false,DelRouteSClass);
  end;
  if (HasTaxMatrix) then begin
    if (UseTaxTemplatesforTaxCalc) then begin
      EditField(h3,v+=vs,50,"Pard. mok. šabl.",Normal,TaxTemplateCode,false,TaxTemplateSClass);
    end else begin
      EditField(h3,v+=vs,50,"#PVM# kd.",Normal,VATCode,false,VATCodeSClass);
    end;
  end;
  if (HasLocalization("GBR")) then begin
  HalPushButton(-40-100,v+=20,-40,v+20,"UpdAddressDelAddrDsm","Atnaujinti adresą");
  end;
  VATZoneButtonsLabelslit(h,v=v+38,170,16);
  if (HasModRent) then begin
  Tile(2,250,false,"2",PriceList);
  v = 6; h = 50; vs = 20; h2 = 350;
  ButtonFrame(h,vm=(v=20),250,3,"Faktūros turinys");
  RadioButton(h,v,0,0,"Eilutė kiekvienai prekei rezervacijoje",InvoiceBase);
  RadioButton(h,v+=16,1,0,"Eilutė kiekvienai rezervacijai",InvoiceBase);
  RadioButton(h,v+=16,2,0,"Eilutė kiekvienai sutarčiai",InvoiceBase);
  ButtonFrame(h2,v=vm,200,3,"Periodas");
  RadioButton(h2,v,0,0,"Neįtraukti",IncludePeriod);
  RadioButton(h2,v+=16,1,0,"Eilutėje virš prekės",IncludePeriod);
  RadioButton(h2,v+=16,2,0,"Toje pačioje eilutėje po prekės pav.",IncludePeriod);
  ButtonFrame(h,vm=(v+=40),250,3,"Kiekis (tik viena eilutė kiekvienai rezervacijai)");
  RadioButton(h,v,0,0,"Dienos kaip kiekis",UseAsQty);
  RadioButton(h,v+=16,1,0,"Prekės kaip kiekis",UseAsQty);
  RadioButton(h,v+=16,2,0,"Dauginti prekes su kiekiais",UseAsQty);
  ButtonFrame(h2,v=vm,200,3,"Grupinis faktūravimas");
  RadioButton(h2,v,0,0,"Jokio",GroupInvoice);
  RadioButton(h2,v+=16,1,0,"Viena faktūra vienam klientui",GroupInvoice);
  RadioButton(h2,v+=16,2,0,"Viena faktūra vienam klientui/projektui",GroupInvoice);
  EditField(h2,v+32,100,"Kainoraštis",Normal,PriceList,false,PLDefSClass);
  CheckBox(h,vm=(v+=32),0,"Įtraukti originalias prekes",IncludeOriginalItem);
  CheckBox(h,v+=16,0,"Įtraukti sutartį ir projektą",IncludeSite);
  CheckBox(h,v+=16,0,"Įtraukti pirkėjo Užsk. nr.",InclCustOrdNr);
  CheckBox(h,v+=16,0,"Įtraukti nuomos rezervacijos nr.",InclRentResNo);
  CheckBox(h,v+=16,0,"Pridėti tuščią eil. kaip skirtuką",AddEmptyLine);
  end;
  EndWindow;
end;

window IVDClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,hm,hs,t,v,v2,v3,vm,vs,width,h5;
  string 255 label;
  Integer rn;

  WindowBegin("Faktūra",IVDClass,CGview,-);
  Sizeable(-1,-1,0,0);
  UseView(IVVc);

  ActiveFieldOnNew("CustCode");
  SetWRect(20,80,750,460);
  CommunicateButton;
  Tile(0,74,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Pirkėjas",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Pavadinimas",Normal,Addr0,false,0);
  if (StandardHansa==false) then begin
    if (HasLocalization("FIN")) then begin
      EditField(h,vm=(v+=20),180,"Mokėjimo nuor.",ViewOnly,CalcFinRef,false,0);
    end else begin
  EditField(h,vm=(v+=20),135,"Oficialus Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
    end;
    if (HasLocalization("BRA")) then begin
      EditField(500,vm,135,"Banko kvito nr.",ViewOnly,BankReceiptNr,false,0);
    end;
  end else begin
    v = v + 20;
    vm = v;
  end;
  CheckBox(h4=-80,v,0,"OK",OKFlag);
  TileButton(1,"Terminai");
  TileButton(2,"Prekės");
  TileButton(3,"Valiuta");
  TileButton(4,"Siuntimas");
  TileButton(5,"Ident.");
  TileButton(6,"Kainodara");
  TileButton(7,"Fakt. adresas");
  TileButton(8,"Siunt. adresas");
  Tile(1,110,false,"1",InvDate);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Faktūros data",Normal,InvDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Mok. sąl.",Normal,PayDeal,false,PDSClass);//PDMSClass);
  EditField(h1,v+=vs,82,"Apmokėti iki",Normal,PayDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Oper. data",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Pasl. prist. data",Normal,ServiceDelDate,false,PasteCurDate);
  EditField(h2,v=vm,135,"Mūsų nuoroda",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Perspėjimas",Normal,ClientContact,false,ContactSClass);
  EditField(h2,v+=vs,135,"Objektai",Normal,Objects,false,ObjSClass);
  EditField(h2,v+=vs,135,"Nuoroda",Normal,RefStr,false,0);
  EditField(h2,v+=vs,135,"Pirk. Užsk. Nr.",Normal,CustOrdNr,false,0);
  EditField(h3,v=vm,80,"Pardavėjas",Normal,SalesMan,false,UserSClass);
  if (StandardHansa) then begin
    EditField(h3,v+=vs,80,"Patalpa",Normal,Location,false,LocationSClass);
  end else begin
  EditField(h3,v+=vs,80,"Projektas",Normal,PRCode,false,0);
  end;
  EditField(h3,v+=vs,80,"Kredito priežastis",Normal,Reason,false,StandProblemsSClass);
  if (HasLocalization("MEX")) then begin
    EditField(h3,v+=vs,80,"Mokėjimo būsena",Normal,PMCode,false,PMSClass);
  end;
  if (HasLocalization("BRA")) then begin
    EditField(h3,v+=vs,80,"Faktūros tipas",Normal,BrazilEInvType,false,BrazilEInvTypeSClass);
  end;
  if (HasLocalization("BOL,BRA,HRV,MEX")) then begin
    EditField(h3,v+=vs,130,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
  end;
  if (HasLocalization("MEX")) then begin
    EditField(h3,v+=vs,80,"No. Pay. Acc.",Normal,PayAccNo,false,0);
  end;
  if (HasLocalization("RUS")) then begin
    EditField(h3,v+=vs,-20,"Čekio info.",Normal,ReceiptInfo,false,0);
  end;
  CheckBox(-80,v=6,0,"Abejotina",DisputedFlag);
  CheckBox(-80,v+=16,0,"Išsiųsta EDI",SentToEDI); //EBS
  CheckBox(-80,v+=16,0,"Patvirtinta",ConfirmedEDI); //EBS
  if (StandardHansa) then begin
    CheckBox(h4,v+=16,0,"Atnaujinti sandėlį",UpdStockFlag);
  end;
  EnterSkip(Math);
  Tile(2,220,true,"2",Math);
//  CheckBox(20,-20,0,"OK",OKFlag);
  if (CompileType!=ctiPhone) then begin
    EditField(-150,-61,95,"Svoris",ViewOnly ,BLT_TotalWeight,true,0); //EBS
    EditField(410,-61,70,"Neto svoris",ViewOnly ,BLT_TotalNetWeight,true,0); //EBS
  EditField(55,-41,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
  if (UseTaxTemplatesforTaxCalc==false) then begin
  if (UserCanAction("ViewCostPrice",true)) then begin
        EditField(160,-41,70,"BP %",Normal,GPProc,true,0);
    EditField(160,-21,70,"Viso BP",ViewOnly,TotGP,true,0);
  end;
      if (HasLocalization("GBR,LTU,POL")) then begin
        EditField(310,-41,50,"Reversinis PVM",ViewOnly,RvrsVAT,true,0);
        EditField(290,-21,70,"Ext. mok",ViewOnly,TAX1Sum,true,0);
      end else begin
  EditField(290,-41,70,"Mok. 2",ViewOnly,TAX2Sum,true,0);
  EditField(290,-21,70,"Pap. mok.",ViewOnly,TAX1Sum,true,0);
      end;
  EditField(410,-41,95,"PVM",ViewOnly ,Sum3,true,0);
  end else begin
    if (UserCanAction("ViewCostPrice",true)) then begin
        EditField(290,-41,70,"BP %",Normal,GPProc,true,0);
      EditField(290,-21,70,"BP viso",ViewOnly,TotGP,true,0);
    end;
      EditField(410,-41,95,"Mok.",ViewOnly ,Sum3,true,0);
  end;
  EditField(410,-21,95,"Suma",ViewOnly,BaseSum4,true,0);
  EditField(-150,-41,95,"Tarp. suma",ViewOnly ,Sum1,true,0);
  EditField(-150,-21,95,"VISO",ViewOnly ,Sum4,true,0);
  end else begin
    EditField(55,-41,80,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
    EditField(55,-21,80,"PVM",ViewOnly ,Sum3,true,0);
    EditField(-120,-41,80,"Pap. mok.",ViewOnly,TAX1Sum,true,0);
    EditField(-120,-21,80,"VISO",ViewOnly ,Sum4,true,0);
  end;
  v = 24;
  MatrixBegin(4,v,-50,-69,-,200);
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(t=kInvoiceRowTypeNormal,32,"Prekė",0,ArtCode,false,BLT_INSClass); //EBS edit
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Kiekis",0,Quant,true,0);
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatText(t=kInvoiceRowTypeCredit,32,"Faktūros kreditas",true);
  MatCol(t,208,"",0,OrdRow,false,ARSClass);
  MatCol(t,-216,"",0,Spec,false,0);//MatText(t,-216,"",true);
  MatText(t=kInvoiceRowTypeDebit,32,"Faktūros debetas",true);
  MatCol(t,208,"",0,OrdRow,false,0);
  MatCol(t,-216,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeInterest,32,"Delspinigiai",true);
  MatCol(t,98,"",0,ArtCode,false,0);
  MatCol(t,153,"",0,Quant,true,0);
  MatCol(t,188,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeDownpayment,32,"Išankstinis apmokėjimas",true);
  MatColTL(t,122,"",0,-1,ViewOnly,0,ArtCode,true,0);
  MatColTL(t,188,"",0,-1,ViewOnly,0,Quant,true,0);
  MatCol(t,238,"",0,Spec,false,0);
  MatColTL(t,-240,"",0,-1,ViewOnly,0,Price,true,0);
  MatColTL(t,-180,"",0,-1,ViewOnly,0,vRebate,true,0);
  MatColTL(t,-140,"",0,-1,Normal,0,Sum,true,0); //?? TL?
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-100,"",0,SalesAcc,false,AccSClass);
    MatCol(t,-54,"",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-70,"",0,SalesAcc,false,AccSClass);
    MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  end;
  MatText(t=kInvoiceRowTypePrepayment,32,"Išankstinio numeris",true);
  MatCol(t,208,"",0,CUPNr,false,ARPay3SClass);
  MatCol(t,-216,"",0,BasePrice,false,0);
  MatCol(t,-170,"",0,Price,true,0);// Price holds the #VAT# sum, Recipe holds the date of prepaym. BasePrice holds amount in base 1, TAX1Reb holds TAX1Sum
  MatCol(t,-100,"",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeLoan,32,"Paskola",true);
  MatCol(t,98,"",0,CuAccCode,true,CuAccSClass);
  MatCol(t,-350,"",0,SalesAcc,true,AccSClass);
  MatCol(t,-230,"",0,Objects,false,0);
  MatCol(t,-110,"",0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeLoanInterest,32,"Paskolos palūkanos",true);
  MatCol(t,98,"",0,CuAccCode,true,CuAccSClass);
  MatCol(t,-350,"",0,SalesAcc,true,AccSClass);
  MatCol(t,-230,"",0,Objects,false,0);
  MatCol(t,-110,"",0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeUpdateMark,32,"Parašas",false);
  MatColTL(t,94,"Parašas",0,-1,ViewOnly,0,VoidedSign,false,0);
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeVoid,32,"Panaikintas",false);
  MatColTL(t,65,"Parašas",0,-1,ViewOnly,0,VoidedSign,false,0);
  MatCol(t,100,"Prekė",0,ArtCode,false,ForSaleINSClass);
  if (HasVarieties) then begin
  MatCol(t,150,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,150,"Kiekis",0,Quant,true,0);
  end;
  MatCol(t,190,"Kaina",0,Price,true,0);
  MatCol(t,250,"Aprašymas",0,Spec,false,0);
  MatCol(t,-195,"Ser. nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-110,"%",0,vRebate,true,0);
  MatCol(t,-80,"Suma",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeSubtotal,32,"Viso",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-140,"Suma",0,-1,ViewOnly,0,Sum,true,0);
//  MatCol(t,-70,"Kaštai",0,Cost,true,0);
  MatText(t=kInvoiceRowTypeHidden,32,"ši ir žemiau esančios eilutės nebus spausdinamos",false);
  MatText(t=kInvoiceRowTypeCorrection,32,"K",true);
  MatCol(t,45,"Prekė",0,ArtCode,false,ForSaleINSClass);
  MatCol(t,91,"Kiekis",0,Quant,true,0);
  MatText(t=kInvoiceRowTypeRetention,32,"Išlaikymas",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-210,"Pard.sąsk",0,-1,0,0,SalesAcc,false,AccSClass);
  MatColTL(t,-110,"Suma",0,-1,0,0,Sum,true,0);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeGiftVoucherSold,32,"DĮ",true);
  MatCol(t,58,"",0,GCNr,false,GCSClass);
  MatCol(t,-416,"",0,Spec,false,0);
  MatCol(t,-84,"Suma",0,Sum,true,0);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeGiftVoucherPayment,32,"GVR",true);
  MatCol(t,58,"",0,GCNr,false,GCSSClass);
  MatCol(t,-316,"",0,Spec,false,0);
  MatCol(t,-84,"Suma",0,Sum,true,0);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeCashPayment,32,"KASA",true);
  MatCol(t,94,"Suma",0,Sum,true,0);
  MatCol(t,198,"Mok. būdas",0,PayMode,true,PMSClass);
  MatCol(t,250,"Spec",0,Spec,false,0);
    MatText(t=kInvoiceRowTypeLoyaltyPointsPayment,32,"LOYPA",true);
  MatCol(t,68,"Suma",0,Sum,true,0);
  MatCol(t,108,"Taškai",0,Points,true,0);
  MatCol(t,148,"Valiuta",0,CurncyCode,true,CurncyCodeSClass);
  MatCol(t,-280,"Spec",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeLoyaltyPointsBonus,28,"LOYBO",true);
  MatCol(t,68,"Taškai",0,Points,true,0);
  MatCol(t,141,"Spec",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeCreditCardPayment,32,"KK",true);
  MatCol(t,94,"Suma",0,Sum,true,0);
  MatCol(t,198,"Mok. būdas",0,PayMode,true,PMSClass);
  MatCol(t,250,"Spec",0,Spec,false,0);
  MatCol(t,-280,"",0,CreditCard,false,CreditCardSClass);
  MatCol(t,-84,"Autorizacija",0,AuthorizationCode,false,0);
  MatText(t=kInvoiceRowTypeHeader,32,"Antraštė",true);
  MatCol(t,100,"",0,Spec,false,0);
   MatText(t=kInvoiceRowType18,28,"Rezervuota",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowType19,28,"Rezervuota",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Percepcinis mokestis",true);
  MatCol(t,132,"",0,CuAccCode,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,AccSClass);
  MatCol(t,452,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeWithholdingTax,32,"Sulaikymo mokestis",true);
  MatCol(t,132,"",0,WHTax,false,WHTaxSClass);
  MatCol(t,172,"",0,SalesAcc,false,AccSClass);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,392,"",0,Spec,false,0);
  if (StandardHansa==false) then begin
    MatText(t=kInvoiceRowTypeMultiBuyDiscount,32,"Multipirkimų nuol.",true);
  end;
  MatCol(t,152,"",0,MBRCode,false,0);
  MatCol(t,192,"",0,ArtCode,false,ForSaleINSClass);
  MatCol(t,-400,"",0,Spec,false,0);
  MatCol(t,-270,"",0,Quant,true,0);
  MatCol(t,-235,"",0,Price,true,0);
  MatCol(t,-135,"",0,vRebate,true,0);
  MatCol(t,-100,"",0,Sum,true,0);
  MatText(t=kInvoiceRowTypeDebtorsTransfer,32,"DBT TRSF",true);
  MatCol(t,94,"Spec",0,Spec,false,0);
  MatCol(t,-235,"Deb. sąsk.",0,SalesAcc,false,0);
  MatCol(t,-135,"Suma",0,Sum,true,0);
  MatCol(t,-30,"PVM kd.",0,VATCode,false,0);
  /*
  MatText(t=kInvoiceRowTypePreviousDownpayment,32,"Prev. Down Payment",true);
  MatColTL(t,152,"",0,-1,ViewOnly,0,CUPNr,true,0);
  MatColTL(t,222,"",0,-1,ViewOnly,0,ServiceDelDate,true,0);
  MatColTL(t,-200,"",0,-1,Normal,0,Price,true,0);
  MatColTL(t,-100,"",0,-1,Normal,0,Sum,true,0);
  */
  //t = 21 kInvoiceRowTypeChequePayment
  MatText(t=kInvoiceRowTypeActivationDate,32,"Aktyvavimo data",true);
  MatCol(t,130,"",0,ServiceDelDate,false,PasteCurDate);
  Flip(1);
//  MatCol(t=1,194,"Aprašymas",0,Spec,false,0);
  t=kInvoiceRowTypeNormal;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
//  MatColTL(t,-235,"",0,M45Val,Normal,0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
//  MatColTL(t,-235,"",0,M45Val,Normal,0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeInterest,-260,"",0,OrdRow,true,0);
  MatCol(t,-235,"",0,BasePrice,true,0);
  MatCol(t,-135,"",0,vRebate,true,0);
  MatCol(t,-100,"",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  Flip(2);
  MatCol(t=kInvoiceRowTypeNormal,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-360,"Sąsk.",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-310,"Sukaupta",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-255,"Patalpa",0,Location,false,LocationSClass);
  MatCol(t,-180,"Pozicija",0,PosCode,false,UsedPosSClass);
  if (UseTaxTemplatesforTaxCalc) then begin
  MatCol(t,-144,"Objektai",0,Objects,false,ObjSClass);
  MatCol(t,-70,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(t,-124,"Objektai",0,Objects,false,ObjSClass);
    if (HasLocalization("GBR,LTU,POL") and IsEnterprise) then begin
      MatCol(t,-60,"PVM-k",0,VATCode,false,VATCodeSClass);
      MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass);
    end else begin
  MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
    end;
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-360,"Sąsk.",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-310,"Padidėjimas",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-255,"Patalpa",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-180,"Pozicija",0,PosCode,false,UsedPosSClass);
  end;
  if (UseTaxTemplatesforTaxCalc) then begin
  MatCol(t,-144,"Objektas",0,Objects,false,ObjSClass);
  MatCol(t,-70,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
  MatCol(t,-124,"Objektai",0,Objects,false,ObjSClass);
  MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
  end;
  MatCol(t=kInvoiceRowTypeInterest,-70,"",0,SalesAcc,false,AccSClass);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
//  MatCol(t=kInvoiceRowTypePrepayment,-224,"",0,SalesAcc,false,AccSClass);
//  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-250,"Sąsk.",0,SalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-170,"Padid.",0,PeriodCode,false,AutSimPerSClass);
  end;
  MatCol(t,-104,"Objektai",0,Objects,false,ObjSClass);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-35,"Mok. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
  end;
  Flip(3);
  t=kInvoiceRowTypeNormal;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
  MatCol(t,-380,"Vnt. kn.",0,Price,true,0);
  MatCol(t,-315,"%",0,vRebate,true,0);
  MatCol(t,-280,"Savikaina B2",0,BasePriceB2,true,0);
  MatCol(t,-210,"Savikaina",0,BasePrice,true,0);
  MatCol(t,-140,"BP",0,rowGP,true,0);
  MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-380,"Vnt. kaina",0,Price,true,0);
    MatCol(t,-315,"%",0,vRebate,true,0);
    MatCol(t,-280,"Savik. B2",0,BasePriceB2,true,0);
    MatCol(t,-210,"Savik.",0,BasePrice,true,0);
    MatCol(t,-140,"BP",0,rowGP,true,0);
    MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeCorrection,144,"Aprašymas",0,Spec,false,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-315,"Vnt. kn.",0,Price,true,0);
    MatCol(t,-245,"%",0,vRebate,true,0);
    MatCol(t,-210,"Savikaina",0,BasePrice,true,0);
    MatCol(t,-140,"BP",0,rowGP,true,0);
    MatCol(t,-70,"FIFO",0,FIFO,true,0);
  end else begin
    MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  Flip(4);
  t=kInvoiceRowTypeNormal;
  MatCol(t=kInvoiceRowTypeNormal,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-370,"Pardavėjas",0,Salesmen,false,UserSClass);
  MatCol(t,-300,"Ser. Nr",0,SerialNr,false,SerialNrSClass);
//  MatCol(t,-250,"Main Serial No.",0,MotherNr,true,0);
  MatCol(t,-220,"K.faktorius",0,PriceFactor,true,0);
  MatCol(t,-170,"Ruošinys",0,Recepy,false,RecSClass);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-70,"Eilutė FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-310,"Ser. nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-240,"K. fakt.",0,PriceFactor,true,0);
  MatCol(t,-180,"Ruošinys",0,Recepy,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-110,"Eilutė FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t,-40,"Koef.",0,Coefficient,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-310,"Ser. nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-240,"K. fakt.",0,PriceFactor,true,0);
  MatCol(t,-180,"Ruošinys",0,Recepy,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-110,"Eil. FIFO",0,FIFORowVal,true,0);
  end else begin
  end;
  MatCol(t,-80,"",0,MotherArtCode,false,0);
  MatCol(t,-40,"",0,RecipeQuant,false,0);
//  MatCol(t,-40,"Coeff",0,Coefficient,true,0);
  Flip(5);
  t=kInvoiceRowTypeNormal;
  MatCol(t=kInvoiceRowTypeNormal,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Vnt.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plotis",0,UnitXval,true,0);
  MatCol(t,-160,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-120,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vieneto kaina",0,UnitFactPrice,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Vienetas",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Vnt. kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plotis",0,UnitXval,true,0);
  MatCol(t,-160,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-120,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vnt. kaina",0,UnitFactPrice,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Aprašymas",0,Spec,false,0);//New Row Type..
  MatCol(t,-315,"Vnt.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plotis",0,UnitXval,true,0);
  MatCol(t,-160,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-120,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vnt. kaina",0,UnitFactPrice,true,0);
  Flip(6);
  t = kInvoiceRowTypeNormal;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-390,"Pirk. Prekės Nr.",0,CustArtCode,false,CUINSClass);
  MatCol(t,-300,"Koef.",0,Coefficient,true,0);
  MatCol(t,-260,"K.faktor.",0,PriceFactor,true,0);
  if (UserCanAction("HWContractAdmin",false) or UserCanAction("HWContractCUServiceHistEdit",false) or UserCanAction("HWContract_LocalAdmin",false)) then begin
  MatCol(t,-210,"Pasl. kontr. ist.",0,CUServiceHistNr,false,0);
  end;
  MatCol(t,-130,"Kred. eil.",0,CreditedRow,false,0);
  MatCol(t,-70,"Aplink. mok.",0,RepaExVAT,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-390,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass);
  MatCol(t,-300,"Koef.",0,Coefficient,true,0);
  MatCol(t,-260,"K.faktor.",0,PriceFactor,true,0);
  if (UserCanAction("HWContractAdmin",false) or UserCanAction("HWContractCUServiceHistEdit",false) or UserCanAction("HWContract_LocalAdmin",false)) then begin
  MatCol(t,-210,"Pasl. kontr. ist.",0,CUServiceHistNr,false,0);
  end;
  MatCol(t,-130,"Kred. eil.",0,CreditedRow,false,0);
  MatCol(t,-70,"Aplink. mok.",0,RepaExVAT,true,0);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Aprašymas",0,Spec,false,0);//New Row Type..
  MatCol(t,-80,"Aplinkos mok.",0,RepaExVAT,true,0);
  Flip(7);
  t = kInvoiceRowTypeNormal;
  if (GuiType!=kGuiiPhone) then begin
    MatCol(t,144,"Aprašymas",0,Spec,false,0);
  end;
  MatCol(t,-240,"Muito Nr.",0,CustomsNr,false,0);
  MatCol(t,-100,"Kilmės šalis",0,CountryOfOrg,false,CountrySClass);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-240,"Muito Nr.",0,CustomsNr,false,0);
  MatCol(t,-100,"Kilmės šalis",0,CountryOfOrg,false,CountrySClass);
  MatCol(t=kInvoiceRowTypeCorrection,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-240,"Muito Nr.",0,CustomsNr,false,0);
  MatCol(t,-100,"Kilmės šalis",0,CountryOfOrg,false,CountrySClass);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Prekės būklė",'I','I',0,"ItemStatusIVDsm");
  RowMenuItem(0,"Ankstesnė pardavimo kaina",' ',' ',0,"IVLastSPrsm");
  RowMenuItem(0,"Pridėti antraštės eilutę",' ',' ',0,"HeaderLineIVDsm");
  RowMenuItem(0,"Pridėti paslėptą eilutę",' ',' ',0,"HiddenLineIVDsm");
  if (HasLocalization("SVN")==false) then begin
    RowMenuItem(0,"Pridėti grynųjų eilutę",' ',' ',0,"CashLineIVDsm");
    RowMenuItem(0,"Pridėti kreditinės kort. eilutę",' ',' ',0,"CreditCardLineIVDsm");
  end;
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Pridėti sulaikymą",' ',' ',0,"RetentionLineIVDsm");
  end;
  RowMenuItem(0,"Pridėti tarpinę sumą",' ',' ',0,"SubTotalLineIVDsm");
  RowMenuItem(0,"Apple garantinės būklės tikrinimas",'w',' ',0,"WarrantyStatusIVDsm");
  if (FileExists("hob/hmdatadef.hob")) then begin//??? why here and not it ahansamail ?
    RowMenuItem(0,"Pridėti licenzijos pradžios datą",' ',' ',0,"LicStartIVDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 22;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+vs,50,"Baz. val. 1",Normal,BaseRate1,true,0);
  EditField(h,v+(vs*2),50,"Baz. val. 2",Normal,BaseRate2,true,0);
  EditField(h2=295,v,50,"Kursas",Normal,FrRate,true,0);
  RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false);
  RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);
  Tile(4,110,false,"4",ShipDeal);
  vs = 20; h1 = 110; h2 = 310; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Siuntimo sąlyga",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Siuntimo būdas",Normal,ShipMode,false,DMSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Maršrutas",Normal,Sorting,false,DelRouteSClass);
  EditField(h1,v+=vs,80,"Patalpa",Normal,Location,false,LocationSClass);
    EditField(h1,v+=vs,80,"Plan. siunt. data",Normal,PlanSendDate,false,PasteCurDate);
    EditField(h1,v+=vs,80,"Plan. siunt. data",Normal,PlanSendTime,false,PasteCurTime);
  end;
  EditField(h1,v+=vs,80,"Filialas",Normal,BranchID,false,AllCUSClass);
  EditField(h2,v=vm,80,"Viso kiekis",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Viso svoris",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Viso tūris",ViewOnly,TotVolume,true,0);
  EditField(h2,v+=vs,80,"Frachtas",Normal,FrPrice,true,0);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Plan. atv. data",Normal,PlanArrDate,false,PasteCurDate);
    EditField(h2,v+=vs,80,"Plan. atv. laiaks",Normal,PlanArrTime,false,PasteCurTime);
  	EditField(h2,v+=vs,80,"Frachto įm.",Normal,FreightCode,false,FreightCompanySClass);
  	CheckBox(h3,v=vm,0,"Atnaujinti sand.",UpdStockFlag);
  	EditField(h3,v+=2*vs,80,"Frachtas #PVM kd.#",Normal,FrVATCode,true,VATCodeSClass);
  	EditField(h3,v+=vs,80,"Intrastat oper. kd.",Normal,IntrastatTransCode,true,IntrastatTransCodeSClass);
    EditField(h3,v+=vs,80,"Glob. transp. nr.",Normal,GlobalTransportNr,false,0);
    EditField(h3,v+=vs,80,"Glob. transp. data",Normal,GlobalTransportDate,false,PasteCurDate);
  end;
  Tile(5,170,false,"5",OrderNr);
  EditField(h1,v=vm,80,"Užsk. nr.",ViewOnly,OrderNr,false,0);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Pasl. Užsk. nr.",ViewOnly,SVONr,false,0);
  EditField(h1,v+=vs,80,"Kred. rank. nr.",ViewOnly ,CredManNr,false,0);
  end;
  EditField(h1,v+=vs,135,"Oficialus Nr 2.",Normal,OfficialSerNr2,false,0);
  if (HasLocalization("FIN")) then begin
    EditField(h1,v+=vs,135,"Delivery Site Code",Normal,DeliverySiteCode,false,0);
    EditField(h1,v+=vs,135,"Work Site Number",Normal,WorkSiteNumber,false,0);
  end;
  if (HasLocalization("BRA")) then begin
    EditField(h1,v+=vs,80,"Federal Service",Normal,FedServCode,false,FederalSerSClass);
  end;
  if (HasLocalization("ARG,BOL")) then begin
    EditField(h1,v+=vs,135,"CAE/CAEA",Normal,CAE,false,0);
    EditField(h1,v+=vs,135,"CAE galioj. pabaiga",Normal,CAEExpiry,false,0);
    EditField(h1,v+=vs,70,"CAEA pradžia",ViewOnly,CAEAStartDate,false,0);
  end;

  EditField(h2=350,v=vm,80,"Stat. vertė",Normal,StatVal,true,0);
  EditField(h2,v+=vs,80,"Trans. laikas",Normal,TransTime,false,SetSClass);
  EditField(h2,v+=vs,80,"Spausdinimo data",ViewOnly,PrintDate,false,0);
  EditField(h2,v+=vs,80,"Oprt. komentaras",ViewOnly,OYDescription,false,0);
  if (FileExists("hob/hmdatadef.hob")) then begin//??? why here and not it ahansamail ?
    EditField(h2,v+=vs,80,"Inv.Nr",ViewOnly,ToBeIVNr,false,0);
  end;
//  ColourPushButton(-100,v,-20,v+60,"TestIVDClassCardData","Test" & chr(10) & "CardData",4);
//  SoftEditField(h3+50,v,100,"Valdymo kodas"  ,ViewOnly ,"TaxAuthIDCC",false,0,M4Str,60);
  if (StandardHansa==false) then begin
  if (HasLocalization("ARG,BOL")) then begin
      EditField(h2,v+=vs,135,"Mok. autor. ID",Normal,TaxAuthID,false,0);
  	EditField(h2,v+=vs,135,"Kontrolės kd.",ViewOnly ,TaxAuthIDCC,false,0);
  	end;
    if (HasLocalization("PRT")) then begin
		EditField(h2,v+=vs,135,"Būklė",Normal,Status,false,SetSClass);
    end;
    if (HasLocalization("ARG,PRT")) then begin
      EditField(h2,v+=vs,135,"Mokesč. tipas",Normal,TaxInvType,false,SetSClass);
    end;
    if (HasLocalization("ARG")) then begin
      EditField(h2,v+=vs,70,"CAEA Expiry",ViewOnly,CAEAExpiryDate,false,0);
    end;
    if (HasLocalization("SVN")) then begin
      EditField(h2,v+=vs,180,"E-Inv. Conf. No.",ViewOnly,TaxAdminReceiptNr,false,0);
      EditField(h2,v+=vs,180,"Tax Seal",ViewOnly,TaxAdminServSeal,false,0);
    end;
  end;
//  EditField(h2,v+=vs,135,"E-Inv Exp. Date",ViewOnly,EInvExpDate,false,0);//Tx server
//  EditField(h2,v+=vs,135,"E-Inv Exp. Qty",ViewOnly,EInvExpQty,false,0);
  CheckBox(h3=450,v=vm,0,"Be priminimų",NoRemndrFlag);
  CheckBox(h3,v+=16,0,"Be delspinigių",NoInterestFlag);
  CheckBox(h3,v+=16,0,"Be rinkinio",NoColectionFlag);
  CheckBox(h3,v+=16,0,"Fiskalinė fakt.",FiscalFlag);
  CheckBox(h3+130,v=vm,0,"Pirk. Inf. operacijoje",ARonTR);
  CheckBox(h3+130,v+=16,0,"Nesiųsti kaip E-fakt.",NoEInvoice);
  CheckBox(h3+130,v+=16,0,"Sav. atsisk.",SelfBilling);
  CheckBox(h3+130,v+=16,0,"Siuntimo kvito PVM",IPBookVAT);
  if (HasLocalization("LTU")) then begin
    CheckBox(h3+130,v+=16,0,"Neįtraukti į eksportus",ExcludeFromExports);
  end;
//    CheckBox(h3,v+=16,0,"Including VAT",InclVAT);
//  CheckBox(h3,v+=16,0,"E-Invoice Exported",EInvExpFlag);
  Tile(6,150,false,"6",PriceList); vs = 20; h3=550;
  EditField(h1,v=vm,80,"Kainoraštis",Normal,PriceList,false,PLDefSClass);
  EditField(h1,v+=vs,80,"Nuolaidų lentelė",Normal,RebCode,false,0);
//  EditField(h1,v+=vs,80,"Disc. %",ViewOnly,DiscPerc,false,0);
//  EditField(h1,v+=vs,80,"Disc. Amount",ViewOnly,DiscSum,false,0);
  EditField(h1,v+=vs,80,"Orig. pirkėjas",ViewOnly,OrgCust,false,0);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Kreditinė kortelė",Normal,CreditCard,false,CreditCardSClass);
  EditField(h1,v+=vs,80,"Autorization",Normal,AuthorizationCode,false,0);
  end;
  EditField(h1,v+=vs,80,"Debitoriai",Normal,ARAcc,false,AccSClass);
  EditField(h1,v+=vs,-20,"Komentaras",Normal,InvComment,false,0);
  if (HasSalesGroup) then begin
    EditField(h2=310,v=vm,80,"Pard. grupė",ViewOnly,SalesGroup,true,0);
  	EditField(h2,v+=vs,80,"Kalba",Normal,LangCode,false,LangSClass);
  end else begin
    EditField(h2,v=vm,80,"Kalba",Normal,LangCode,false,LangSClass);
  end;
  EditField(h2,v+=vs,80,"Komisiniai",Normal,Commision,true,0);
  EditField(h2,v+=vs,80,"Viso su komis.",ViewOnly,SumIncCom,true,0);
  EditField(h2,v+=vs,80,"Delspinigiai",Normal,IntCode,true,IntSClass);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Org. Nr.",Normal,CredInv,false,0);
  EditField(h3,v=vm,80,"Primin. lygis",Normal,LastRemndr,false,0);
  end else begin
    EditField(h3,v=vm,80,"Org. Nr.",Normal,CredInv,false,0);
    EditField(h3,v+=vs,80,"Primin. lygis",Normal,LastRemndr,false,0);
  end;
  EditField(h3,v+=vs,80,"Pask. primin. data",Normal,LastRemDate,false,PasteCurDate);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Lojalumo kortelė",Normal,LoyaltyCardNr,false,LoyaltyCardSClass);
  end;
    EnterSkip(Math);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Narystės lygis",ViewOnly,LCMLevel,false,LCMemberLevelSClass);
  EditField(h3,v+=vs,80,"Lojalumo taškai",ViewOnly,Points,true,0);
  end;
  if (HasTREO) then begin
    EditField(h3,v+=vs,80,"TREO Nr.",Normal,TREONr,false,0);
  end;
  Tile(7,250,false,"7",Addr1); vs = 20;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Faktūra"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Adresas"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=vs),80,"Šalis",Normal,InvCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h2-89,v,232,"",ViewOnly,InvCountryName,false,0);
    h5 = -170;
    width = 150;
  end else begin
    h5 = -270;
    width = 135;
  end;
  EditField(h5,v,width,"Faktūra",Normal,BankCode,false,BankSClass);
  if (StandardHansa==false) then begin
    if (HasApprovals) then begin
      SoftEditField(h3=h+4,v=(vm+=40),123,"Patvirtinimo būsena",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
    end;
/*
//oldapprovals
  ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Patvirtinimo būklė");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nereikalaujama",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nepradėta",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Neprašoma",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Laukiama",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Patvirtinta",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Atsakyta",AcceptanceStatus);
*/
    v = VATZoneButtonsLabelslit(h3=290,v=vm,170,16);
  end else begin
    v = VATZoneButtonsLabelslit(h3=290,v=vm+40,170,16);
  end;
  EditField(h2=-170,v=vm,150,"Regionas",Normal,Region,false,RegionSClass);
  EditField(h2,v+=vs,150,"PVM Reg. Nr.",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"Įmonės kodas",Normal,RegNr1,false,0);
  EditField(h2,v+=vs,150,"GLN",ViewOnly,RecipientGLN,false,0);
  EditField(h2,v+=vs,150,"Telefonas",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Faksas",Normal,Fax,false,0);
  Tile(8,170,false,"8",ShipAddr0); vs = 20;
  if (StandardHansa==false) then begin
    EditField(h1,v=6,80,"Adreso kd.",Normal,DelAddrCode,false,DelAddr3SClass);
    EditField(h1,v+=vs,-20,"Siuntimas",Normal,ShipAddr0,false,0);
  end else begin
    EditField(h1,v=6,-20,"Siuntimas",Normal,ShipAddr0,false,0);
  end;
  EditField(h1,v+=vs,-20,"Adresas",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Šalis",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0);
  end;
  EditField(h2,v,150,"Siuntimo GLN",ViewOnly,DelRecipientGLN,false,0);
  EnterSkip(InvDate);
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Faktūros būklė",'r',2,"IVInfoIVDsm");
    SpecialMenu("Prekės būklė",'I',0,"ItemStatusIVDsm");
    SpecialMenu("Atidaryti D/K operaciją",'t',8,"OpenTRFromIV");
    SpecialMenu("Sukurti kredito pažymą",' ',20,"CreateCreditNoteIVDsm");
    SpecialMenu("Pridėti tarpinę sumą",' ',12,"SubTotalLineIVDsm");
    SpecialMenu("Prijungti prie išankstinio",' ',4,"ConnectToPrepayIVDsm");
/*not working yet
    SpecialMenu("Create E-Mail",'m',23,"CreateMailFromIVDsm");
*/
  end else begin
//  SpecialMenu("Prekės būklė",'I',0,"ItemStatusIVDsm");
    if (HasCustomerStatusReport) then begin
    SpecialMenu("Pirkėjo būklė",'e',0,"CUStatusIVDsm");
    end;
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  SpecialMenu("Faktūros būklė",'r',2,"IVInfoIVDsm");
  SpecialMenu("Prijungti aplinkos mokestį",' ',19,"RepaIVsm");
  if (GuiType==kGuiiPhone) then begin
    //SpecialMenu("Pasirašyti",' ',10,"SignIVDsm");//what is that ?
  end;
  SpecialMenu("Pakeisti į bazinę val. 1",' ',14,"SwitchToBase1IVDsm");
  SpecialMenu("Prijungti prie išankstinio",' ',4,"ConnectToPrepayIVDsm");
  SpecialMenu("Perskaičiuoti nuolaidą",' ',11,"RecalcDiscountIVDsm");
  SpecialMenu("Perskaičiuoti svorį ir tūrį",' ',10,"RecalcWeightIVDsm");
  SpecialMenu("Atnaujinti valiutinį kainoraštį",' ',5,"UpdatePricesIVDsm");
  SpecialMenu("Spausdinti kasos pajamas-išlaidas",' ',7,"PrintCashInOutIVDsm");
    if (HasLocalization("PRT")==false) then begin
  SpecialMenu("Spausdinti proforma faktūrą",' ',3,"PrintProformaIVDsm");
    end;
  if (StandardHansa==false) then begin
  SpecialMenu("Spausdinti į fiskalinį spausdintuvą",' ',19,"PrintToFiscPrntIVDsm");
  SpecialMenu("Mokėjimas kortele",' ',22,"CCPayIVDsm");
  SpecialMenu("Keisti dalinius mokėjimus",' ',24,"EditInstalmentIVDsm");
  end;
	if (HasLocalization("EST")) then begin
		SpecialMenu("Persiųsti E-faktūrą",' ',21,"ResendEstEIVDsm");
	end else begin
		SpecialMenu("Persiųsti E-faktūras",' ',21,"ResendEIVDsm");
	end;
  if (HasLocalization("ARG")) then begin
      SpecialMenu("Persiųsti Argentinos el. faktūrą",'n',17,"SendArgEInvIVDsm");
    SpecialMenu("Retrive CAE/CAEA",'',17,"ConsultarArgEInvIVDsm");
  end;
  if (HasLocalization("MEX")) then begin
      SpecialMenu("Send Mexican E-Invoice",'e',17,"SendMexEInvIVDsm");
    end;
    if (HasLocalization("BRA")) then begin
    SpecialMenu("Send/Resend Brazilian E-Invoice",' ',27,"SendBraEInvIVDsm");
      SpecialMenu("Get Bank Receipt",' ',28,"GetBankReceiptDsm");
  end;
    if (HasLocalization("FIN")) then begin
      SpecialMenu("Export Finvoice",' ',28,"ExportFinvoiceIVDsm");
    end;
    if (HasLocalization("USA")) then begin
      SpecialMenu("Gauti mokesčių tarifus",' ',0,"IVGetTaxRatesDsm");
    end;

  SpecialMenu("Atidaryti D/K operaciją",'t',8,"OpenTRFromIV");
	if (StandardHansa==false) then begin
		SpecialMenu("Vadovo nuolaidos perrašymas",' ',24,"MgrsDiscOverrideIVDsm");
		if (HasTaxMatrix) then begin
			SpecialMenu("Atidaryti mok. matricą",' ',25,"TestVatMatrixIVDsm");
		end;
	end;
    if (HasApprovals) then begin
      SpecialMenu("Patvirtinimo užklausa",' ',6,"IVSendforAcceptanceIVDsm");
      SpecialMenu("Atšaukti patvirtinimo užklausą",' ',2,"CancelApprovalRequestDsm");
    end;
	SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModCRM) then begin
//    SpecialMenu("Sukurti veiklą",'c',9,"CreateActFromIVDsm");
  end;
  SpecialMenu("Sukurti kasos pajamas",' ',1,"DoCLInFromIVD");
  SpecialMenu("Sukurti kredito pažymą",' ',20,"CreateCreditNoteIVDsm");
  if (StandardHansa==false) then begin
  SpecialMenu("Sukurti kredito sutartį",' ',25,"CreateCredManIVsm");
  end;
  SpecialMenu("Sukurti kontraktą",' ',13,"COFromIVDsm");
  if (StandardHansa==false) then begin
      if (HasLocalization("PRT")==false) then begin
  SpecialMenu("Sukurti koregavimo faktūrą",' ',16,"CorrectionIVsm");
      end;
    SpecialMenu("Sukurti kredito įrašą",' ',20,"CreateDebitNoteIVDsm");
  SpecialMenu("Sukurti EDI faktūrą",' ',9,"DoEDIInvFromIVD");
  end;
  SpecialMenu("Sukurti el. laišką",'m',23,"CreateMailFromIVDsm");
  if (HasLocalization("UKR")) then begin
  SpecialMenu("Sukurti pirmą atvejį",' ',18,"FirstEventIVDsm");
  end;
  if (StandardHansa==false) then begin
  	SpecialMenu("Sukurti dalinių mokėjimų įplaukas",' ',6,"CreateInstalmentsIVDsm");
      if (HasLocalization("HRV,POL,RUS,SRB,SVN,UKR")) then begin
  		SpecialMenu("Sukurti PVM koregavimą pard. kn.",' ',17,"VATCorrectionIVsm");
    end;

//  SpecialMenu("GSXAutoEnrollmentIVDsm",'w',26,"GSXAutoEnrollmentIVDsm");

//  SpecialMenu("TESTSendArgEInvoiceFECAESolicitar",' ',25,"TESTSendArgEInvoiceFECAESolicitar");
//  SpecialMenu("Test Mex E-Invoices",'1',0,"TestMexEInvoices");
    end;
    SpecialMenu("Pridėti pirkėją",' ',0,"AddCustomerIVDsm");
    SpecialMenu("Pridėti prekę",' ',0,"AddItemIVDsm");
  end;

  EndWindow;
end;

window BLT_EDISetTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs;
  v = 6; vs = 20; h = 150; h2=200;

  WindowBegin("EDI nustatymai",BLT_EDISetTClass,CGSbl,ItemSettingType);
  Sizeable(-1,-1,-1,0);
  SetWRect(20,80,480,320);
  SetBlid(BLT_EDISetBlock);
  EditField(h,v=10,-20,"EDI eksporto katalogas",Normal,ExpFolder,false,0);
  EditField(h,v+=vs,-20,"EDI importo katalogas",Normal,ImpFolder,false,0);
  EditField(h,v+=vs,-20,"Series comment",Normal,SerComment,false,0);
  EditField(h,v+=vs,100,"EDI užsakymo klasė",Normal,OrderClass,false,OrderClassSClass);
  CheckBox(h,v+=vs,0,"Ignore best before dates with import",DoNotCheckBesfBef);
  StaticText(h=50,v+=39,"Automatic sales order imports",false);
  CheckBox(h,v+=12,0,"Monday",MonFlag);
  EditField(h2,v,70,"Time",Normal,MonTime,false,0);
  CheckBox(h,v+=vs,0,"Tuesday",TueFlag);
  EditField(h2,v,70,"Time",Normal,TueTime,false,0);
  CheckBox(h,v+=vs,0,"Wednesday",WedFlag);
  EditField(h2,v,70,"Time",Normal,WedTime,false,0);
  CheckBox(h,v+=vs,0,"Thursday",ThuFlag);
  EditField(h2,v,70,"Time",Normal,ThuTime,false,0);
  CheckBox(h,v+=vs,0,"Friday",FriFlag);
  EditField(h2,v,70,"Time",Normal,FriTime,false,0);
  CheckBox(h,v+=vs,0,"Saturday",SatFlag);
  EditField(h2,v,70,"Time",Normal,SatTime,false,0);
  CheckBox(h,v+=vs,0,"Sunday",SunFlag);
  EditField(h2,v,70,"Time",Normal,SunTime,false,0);
  EndWindow;

end;

window IVLClass:8
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real pos;
  Boolean acptf;

  WindowBegin("Faktūros",IVLClass,CGmlist,-);
  pos = 920;
  acptf = AcceptanceStatusColumnTest("IVVc");
  if (acptf) then begin
  	pos = pos + 40;
  end;
  SetWRect(20,80,pos,298);
    Sizeable(-1,-1,0,0);
    SpawnClass(IVDClass);
    UseView(IVVc);
    FormName(PrintIVL);
    RecordList(4,17,-21,-39);
    RlColKey(4,4,"Nr.",SerNr,false,SerNr);
    RlColKey(79,79,"OK",OKFlag,false,OKFlag);
    RlColKey(111,111,"EDI",SentToEDI,false,SentToEDI);
    RlColKey(141,141,"Fakt. data",InvDate,false,InvDate);
    RlColKey(221,221,"Siun. data",ServiceDelDate,false,ServiceDelDate);
    RlColKey(291,291,"Oficial. Nr.",OfficialSerNr,false,OfficialSerNr);
    RlColKey(381,381,"Užsk. Nr.",OrderNr,false,OrderNr);
    pos = 451;
    RlColKey(pos,pos,"Siunt. Adresas",ShipAddr1,false,ShipAddr1); pos = pos + 150; //EBS
    RlColKey(pos,pos,"Pirkėjas",CustCode,false,CustCode); pos = pos + 60;
    RlColKey(pos,pos,"Pavadinimas",Addr0,false,Name);
    if (acptf) then begin
      CalculatedColumn(-230,-230,"Patv.","IVLClassAcceptanceStatus",false);
    end;
    CalculatedColumn(-190,-190,"Brutto","IVLClassCalcBruttoWeight",true);
    RlColKey(-130,-130,"Viso",Sum1,true,Sum1);
    RlCol(-60,-60,"",CredMark,true);
    if (HasMultiCurrency or HasBase2) then begin
      RlCol(-40,-40,"Val.",CurncyCode,true);
    end;
    RlCol(-1,-1,"",Invalid,true);
    SearchField("Ieškoti");
    if (HasLimitedAccess) then begin
      BrowseSubsetButton(-40,-15);
    end;
    SpecialMenu("OK",'G',0,"OKIVLsm");
    SpecialMenu("Spausdinti proforma faktūrą",' ',1,"PrintIVLsm");
    SpecialMenu("Faktūros būklė",'r',2,"IVInfoIVLsm");
  EndWindow;
end;

window BLT_ProdLabelsRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;
  WindowBegin("Gaminiai",ProdOrderRClass,CGRcW,RcType);
  SetWRect(20,80,400,148);
  EditFieldTL(150,v=6,153,"Gaminys",M4Str,Normal,30,f1,false,0);
  EndWindow;
end;

window ORDClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs,h5,flipnr,width;
  string 255 label;
  Integer rn;

  WindowBegin("Užsakymas",ORDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(ORVc);
  ActiveFieldOnNew("CustCode");
  CommunicateButton;
  Tile(0,74,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Pirkėjas",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Pavadinimas",Normal,Addr0,false,0);
  if (StandardHansa==false) then begin
  EditField(h,vm=(v+=20),135,"Oficialus Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  CheckBox(h4=-100,v,0,"OK",OKFlag);
  end else begin
    CheckBox(h4=-100,vm=(v+=20),0,"OK",OKFlag);
  end;
//  CheckBox(h+120,vm,0,"Closed",Closed);
//  CheckBox(h+240,vm,0,"Reserved",Reserved);
  TileButton(1,"Terminai");
  TileButton(2,"Prekės");
  TileButton(3,"Valiuta");
  TileButton(4,"Siunt. terminai");
  TileButton(5,"Kainodara");
  TileButton(6,"Fakt. adr.");
  TileButton(7,"Siunt. adr.");
  Tile(1,110,false,"1",OrdDate);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Data",Normal,OrdDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Mok. terminas",Normal,PayDeal,false,PDSClass);
  EditField(h1,v+=vs,82,"Plan. siuntimas",Normal,PlanShip,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Siuntimo data",Normal,DespatchDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Siuntimo laikas",Normal,DespatchTime,false,PasteCurTime);
  EditField(h2,v=vm,135,"Mūsų nuor.",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Perspėjimas",Normal,CustContact,false,ContactSClass);
  EditField(h2,v+=vs,135,"Objektai",Normal,Objects,false,ObjSClass);
  EditField(h2,v+=vs,135,"Nuoroda",Normal,RefStr,false,0);
  EditField(h2,v+=vs,135,"Pirk. užs. Nr.",Normal,CustOrdNr,false,0);
  EditField(h3,v=vm,80,"Pardavėjas",Normal,SalesMan,false,UserSClass);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Projektas",Normal,PRCode,false,PRSClass);
  end;
  EditField(h3,v+=vs,80,"Užsak. klasė",Normal,OrderClass,false,OrderClassSClass);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Užsak. tipas",Normal,OrderType,false,SetSClass);
    EditField(h3,v+=vs,80,"Pard. sutartis",Normal,ORCONr,false,ORCOSClass);
  end;
  CheckBox(h4,v=6,0,"Uždarytas",Closed);
  CheckBox(h4,v+=16,0,"Rezervuotas",Reserved);
  CheckBox(h4,v+=16,0,"Importuotas",BLT_Importf); //EBS
  CheckBox(h4,v+=16,0,"Eksportuotas",BLT_Exportf); //EBS
  CheckBox(h4,v+=16,0,"Sent to log.",BLT_SentToLogistics); //EBS
  EnterSkip(Math);
  Tile(2,220,true,"2",Math);
//  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(55,-41,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
  if (UseTaxTemplatesforTaxCalc==false) then begin
  if (UserCanAction("ViewCostPrice",true)) then begin
    EditField(160,-41,70,"BP %",Normal,GPProc,true,0);
    EditField(160,-21,70,"Viso BP",ViewOnly,TotGP,true,0);
  end;
    if (HasLocalization("GBR,LTU,POL")) then begin
      EditField(310,-41,50,"Reversinis PVM",ViewOnly,RvrsVAT,true,0);
      EditField(290,-21,70,"Ext. mokest.",ViewOnly,TAX1Sum,true,0);
    end else begin
  EditField(290,-41,70,"Mok. 2",ViewOnly,TAX2Sum,true,0);
  EditField(290,-21,70,"Pap. Mok.",ViewOnly,TAX1Sum,true,0);
    end;
  EditField(410,-41,100,"PVM",ViewOnly ,Sum3,true,0);
  end else begin
    if (UserCanAction("ViewCostPrice",true)) then begin
      EditField(290,-41,70,"BP %",Normal,GPProc,true,0);
      EditField(290,-21,70,"Viso BP",ViewOnly,TotGP,true,0);
    end;
    EditField(410,-41,100,"Mok.",ViewOnly ,Sum3,true,0);
  end;
  EditField(410,-21,100,"Suma",ViewOnly,BaseSum4,true,0);
  EditField(-150,-41,100,"Tarp. suma",ViewOnly ,Sum1,true,0);
  EditField(-150,-21,100,"VISO",ViewOnly ,Sum4,true,0);
  v = 24;
  MatrixBegin(3,v,-50,-49,-,200);
  MatTypedRow(stp);
  flipnr = 0;
  Flip(flipnr); flipnr = flipnr + 1;
  MatText(t=9,32,"Tarp. suma",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-80,"Suma",0,-1,ViewOnly,0,Sum,true,0);
  MatText(t=17,32,"Antraštė",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatCol(t=1,32,"Prekė",0,ArtCode,false,BLT_INSClass); //EBS edit
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Kiekis",0,Quant,true,0);
  t = 1;
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0);
  end;
    EnterSkip(ArtCode);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Kiekis",0,Quant,true,0);
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0);
  end;
  EnterSkip(ArtCode);
  MatText(t=10,32,"Spausdinant, ši ir toliau einančios eilutės bus paslėptos",false);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Percepcijos mok.",true);
  MatCol(t,132,"",0,Region,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,0);
  MatCol(t,452,"",0,Spec,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
//  MatCol(t=1,194,"Aprašymas",0,Spec,false,0);
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-345,"Min. best bef.",0,MinBestBefore,false,PasteCurDate);  // EBS
  MatCol(t,-270,"Max. best bef.",0,MaxBestBefore,false,PasteCurDate);  // EBS
  MatCol(t,-195,"Vnt. kaina",0,Price,true,0); //EBS edit
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-224,"Sąskaita",0,SalesAcc,false,AccSClass);
    MatCol(t,-164,"Objektas",0,Objects,false,ObjSClass);
    MatCol(t,-70,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-184,"Sąsk.",0,SalesAcc,false,AccSClass);
    MatCol(t,-124,"Objektas",0,Objects,false,ObjSClass);
    if (HasLocalization("GBR,LTU,POL") and IsEnterprise) then begin
      MatCol(t,-60,"PVM-K",0,VATCode,false,VATCodeSClass);
      MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass);
    end else begin
    MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
    end;
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-224,"Sąskaita",0,SalesAcc,false,AccSClass);
    MatCol(t,-164,"Objektas",0,Objects,false,ObjSClass);
    MatCol(t,-70,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass);
    MatCol(t,-184,"Sąsk.",0,SalesAcc,false,AccSClass);
    MatCol(t,-124,"Objektas",0,Objects,false,ObjSClass);
    if (HasLocalization("GBR,LTU,POL") and IsEnterprise) then begin
      MatCol(t,-60,"PVM-K",0,VATCode,false,VATCodeSClass);
      MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass);
    end else begin
    MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
    end;
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,344,"Užsakymo tipas",0,OrderType,false,SetSClass);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-245,"Vnt. kaina",0,Price,true,0);
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Savikaina",0,BasePrice,true,0);
    MatCol(t,-70,"BP",0,rowGP,true,0);
  end else begin
    MatCol(t,-235,"Vieneto kaina",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
    if (UserCanAction("ViewCostPrice",true)) then begin
     MatCol(t,-245,"Vnt. kaina",0,Price,true,0);
     MatCol(t,-175,"%",0,vRebate,true,0);
     MatCol(t,-140,"Savikaina",0,BasePrice,true,0);
     MatCol(t,-70,"BP",0,rowGP,true,0);
   end else begin
    MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Apraš.",0,Spec,false,0);
  MatCol(t,-300,"Pardavėjas",0,Salesmen,false,UserSClass);
  MatCol(t,-236,"Siunt. 1",0,Shipd1,true,0);
  MatCol(t,-184,"Siunt. 2",0,Shipd2,true,0);
  MatCol(t,-132,"Faktūruota",0,Invd,true,0);
  MatCol(t,-80,"Ruošinys",0,Recepy,false,RecSClass);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraš.",0,Spec,false,0);
  MatCol(t,-290,"Siunt. 1",0,Shipd1,true,0);
  MatCol(t,-220,"Siunt. 2",0,Shipd2,true,0);
  MatCol(t,-150,"Faktūruota",0,Invd,true,0);
  MatCol(t,-80,"Ruošinys",0,Recepy,false,RecSClass);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-290,"Serijinis nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Plan. siunt.",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Kainos faktorius",0,PriceFactor,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-290,"Serijinis nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Plan. siunt.",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Kainos faktorius",0,PriceFactor,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Siuntimo pažyma",0,ShipNote,false,0);
  MatCol(t,-210,"Patalpa",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-145,"Pozicija",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Šaltinis",0,Source,true,SourceSClass);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Siuntimo žinutė",0,ShipNote,false,0);
  MatCol(t,-210,"Patalpa",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-145,"Pozicija",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Šaltinis",0,Source,true,SourceSClass);
  if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,144,"Surink. data",0,PickingDate,false,PasteCurDate);
  MatCol(t,-390,"Surink. laik.",0,PickingTime,false,PasteCurTime);
  MatCol(t,-320,"Pakr. data",0,InloadingDate,true,PasteCurDate);
  MatCol(t,-230,"Pakr. laikas",0,InloadingTime,true,PasteCurTime);
  MatCol(t,-160,"Iškr. data",0,DespatchRowDate,true,PasteCurDate);
  MatCol(t,-70,"Iškr. laikas",0,DespatchRowTime,true,PasteCurTime);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Atsi. data",0,PickingDate,false,PasteCurDate);
  MatCol(t,-390,"Atsi. laikas",0,PickingTime,false,PasteCurTime);
  MatCol(t,-320,"Pakr. data",0,InloadingDate,true,PasteCurDate);
  MatCol(t,-230,"Pakr. laikas",0,InloadingTime,true,PasteCurTime);
  MatCol(t,-160,"Siunt. data",0,DespatchRowDate,true,PasteCurDate);
  MatCol(t,-70,"Siunt. laikas",0,DespatchRowTime,true,PasteCurTime);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Vnt.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plotis",0,UnitXval,true,0);
  MatCol(t,-160,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-120,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vnt. egz. kaina",0,UnitFactPrice,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Vienetas",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Vieneto kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plotis",0,UnitXval,true,0);
  MatCol(t,-160,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-120,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vieneto kaina",0,UnitFactPrice,true,0);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Prekės paieška",'I','I',0,"ItemStatusORDsm");
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Ankstesnė pardavimo kaina",' ',' ',0,"ORLastSPrsm");
  end;
  RowMenuItem(0,"Pridėti antraštės eilutę",' ',' ',0,"ORAddHeaderLine");
  RowMenuItem(0,"Pridėti paslėptą liniją",' ',' ',0,"ORAddHidLine");
  RowMenuItem(0,"Pridėti tarpinę sumą",' ',' ',0,"SubtotalORDsm");
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Vadovo nuolaidos keitimas",' ',' ',0,"MgrsDiscOverrideORDsm");
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  if (StandardHansa==false) then begin
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,8,"H");
  end;
  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+vs,50,"Baz. val. 1",Normal,BaseRate1,true,0);
  EditField(h,v+(vs*2),50,"Baz. val. 2",Normal,BaseRate2,true,0);
  EditField(h2=295,v,50,"Kursas",Normal,FrRate,true,0);
  RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false);
  RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);
  Tile(4,110,false,"4",ShipDeal);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Siuntimo term.",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Sintimo būdas",Normal,ShipMode,false,DMSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Maršrutas",Normal,Sorting,false,DelRouteSClass);
  end;
  EditField(h1,v+=vs,80,"Patalpa",Normal,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Filialas",Normal,BranchID,false,AllCUSClass);
  end;
  EditField(h2,v=vm,80,"Viso kiekis",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Viso svoris",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Viso tūris",ViewOnly,TotVolume,true,0);
  EditField(h2,v+=vs,80,"Frachtas",Normal,FrPrice,true,0);
  EditField(h3,v,80,"Plan. del. date",ViewOnly,PlanShipDate,false,0); //EBS
  EditField(h2,v+=vs,80,"Intrastat kodas",Normal,IntrastatTransCode,true,IntrastatTransCodeSClass);
  if (StandardHansa==false) then begin
    EditField(h3,v,80,"Frahto PVM kd.",Normal,FrVATCode,true,VATCodeSClass);
  end;
  CheckBox(473,v=vm,0,"Faktūros prieš siuntimą",InvBeforeShip);
  CheckBox(473,v+=16,0,"Nustat. prist. kiekį į 0",SHShipSetToZero);
  Tile(5,130,false,"5",PriceList);
    h3 = 530;
  EditField(h1,v=vm,80,"Kainoraštis",Normal,PriceList,false,PLDefSClass);
  EditField(h1,v+=vs,80,"Nuolaidų lentelė",ViewOnly,RebCode,false,0);
//  EditField(h2,v+=vs,80,"Disc %",ViewOnly,DiscPerc,false,0);
//  EditField(h2,v+=vs,80,"Disc Amnt",ViewOnly,DiscSum,false,0);
  EditField(h1,v+=vs,80,"Faktūra kam",Normal,InvoiceToCode,false,CUSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Kreditinė kortelė",Normal,CreditCard,false,CreditCardSClass);
  EditField(h1,v+=vs,80,"Autorizacija",Normal,AuthorizationCode,false,0);
  end;
  EditField(h1,v+=vs,-20,"Komentaras",Normal,Comment,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment4,false,0);
  v = vm;
  if (HasSalesGroup) then begin
    EditField(h2,v,80,"Pard. grupė",Normal,SalesGroup,false,SalesGroupSClass);
    v = v + vs;
  end;
  EditField(h2,v,80,"Kalba",Normal,LangCode,false,LangSClass);
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Komisiniai",Normal,Commision,true,0);
    EditField(h2,v+=vs,80,"Viso įtr. komisinius",ViewOnly,SumIncCom,true,0);
  end;
  if (HasTREO) then begin
    EditField(h3,v=vm,80,"TREO nr.",Normal,TREONr,false,0);
  EditField(h3,v+=vs,80,"TREO galioj. data",Normal,TREOExpDate,false,PasteCurDate);
  end;
  Tile(6,250,false,"6",Addr1);
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Invoice"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Adresas"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=vs),80,"Šalis",Normal,InvCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h2-89,v,232,"",ViewOnly,InvCountryName,false,0);
    h5 = -170;
    width = 150;
  end else begin
    h5 = -270;
    width = 135;
  end;
  EditField(h5,v,width,"Faktūra",Normal,BankCode,false,BankSClass);
  if (HasApprovals) then begin
    SoftEditField(h3=h+4,v=(vm+=40),123,"Patvirtinimo būsena",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
/*
		ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Patvirtinimo būklė");
		RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nereikalaujama",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nepradėta",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nereikalauta",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Laukiama",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Patvirtinta",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Atmesta",AcceptanceStatus);
*/
    v = VATZoneButtonsLabelslit(h3=290,v=vm,170,16);
  end else begin
    v = VATZoneButtonsLabelslit(h3=290,v=vm+20,170,16);
  end;
  EditField(h2=-170,v=vm,150,"Regionas",Normal,Region,false,RegionSClass);
  EditField(h2,v+=vs,150,"PVM Reg. Nr.",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"GLN",ViewOnly,RecipientGLN,false,0);
  EditField(h2,v+=vs,150,"Telefonas",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Faksas",Normal,Fax,false,0);
  // Tile(7,170,false,"7",ShipAddr0);
  if (StandardHansa==false) then begin
    Tile(7,170,false,"7",DelAddrCode);
  EditField(h1,v=6,80,"Adreso kd.",Normal,DelAddrCode,false,DelAddr3SClass);
  EditField(h1,v+=vs,-20,"Siuntimas",Normal,ShipAddr0,false,0);
  end else begin
    Tile(7,170,false,"7",ShipAddr0);
    EditField(h1,v=6,-20,"Siuntimas",Normal,ShipAddr0,false,0);
  end;
  EditField(h1,v+=vs,-20,"Adresas",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Šalis",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin
    EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0);
    h5 = -170;
    width = -20;
  end;
  EditField(h2,v,150,"Siuntimo GLN",ViewOnly,DelRecipientGLN,false,0);
//  EditField(h1+200,v,80,"#VAT Code#",Normal,CustVATCode,false,0);
  EnterSkip(OrdDate);
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Užsakymo būklė",'r',5,"ORInfoRnORDsm");
    SpecialMenu("Prekės būklė",'I',2,"ItemStatusORDsm");
    SpecialMenu("Sukurti Siuntimą",'L',0,"SHFromORDsm");
    SpecialMenu("Sukurti faktūrą",'F',1,"IVFromORDsm");
    SpecialMenu("Pridėti tarp. sumą",' ',14,"SubtotalORDsm");
/*
email not working yet
    SpecialMenu("Create E-Mail",'m',11,"CreateMailFromORDsm");
*/
  end else begin
  SpecialMenu("Perskaičiuoti nuolaidą",' ',11,"RecalcDiscountORDsm");
  if (StandardHansa==false) then begin
  SpecialMenu("Perskaičiuoti svorį ir tūrį",' ',10,"RecalculateWeightORDsm");
  end;
  if (HasLocalization("USA")) then begin
    SpecialMenu("Gauti mok. vertes",' ',0,"ORGetTaxRatesDsm");
  end;

  SpecialMenu("Atnaujinti valiutinių kainoraščių prekes",' ',7,"UpdatePricesORDsm");
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  SpecialMenu("Užsakymo būklė",'r',5,"ORInfoRnORDsm");
  if (HasTaxMatrix) then begin
    SpecialMenu("Atidaryti mok. matricą",' ',25,"OpenVatMatrixORDsm");
  end;
  if (StandardHansa==false) then begin
  	SpecialMenu("Spausdinti vidinį užsakymą",' ',4,"Or2FormORDsm");
  end;
  SpecialMenu("Rezervacijos",' ',15,"OrderReservORDsm");
  if (GuiType==kGuiiPhone) then begin
    SpecialMenu("Parašas",' ',10,"SignORDsm");
  end;

  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
//  SpecialMenu("Sukurti veiklą",'c',9,"CreateActFromORDsm");
  SpecialMenu("Sukurti siuntimą",'L',0,"SHFromORDsm");
  if (HasDownpayments) then begin
  SpecialMenu("Sukurti išankstinio apmok. faktūrą",' ',3,"DownPayFromORDsm");
  end;
  if (HaseMail) then begin
  	SpecialMenu("Sukurti el. laišką",'m',11,"CreateMailFromORDsm");
	end;
  SpecialMenu("Sukurti faktūrą",'F',1,"IVFromORDsm");
  if (HasModTS or IsEnterprise) then begin
  SpecialMenu("Sukurti projektą",' ',9,"CreatePRFromORDsm");
  SpecialMenu("Sukurti projekto biudžetą",' ',10,"CreateTBBUFromORDsm");
    end;
    SpecialMenu("Sukurti pirkimo užsakymą",' ',4,"POFromORDsm");
  SpecialMenu("Sukurti grąžinimą",'B',6,"RetFromORsm");
  SpecialMenu("Sukurti sandėlio perkėlimą",' ',8,"StockMovFromORDsm");
  if (HasApprovals) then begin
    SpecialMenu("Patvirtinimo užklausa",' ',6,"ORSendforAcceptanceORDsm");
    SpecialMenu("Atšaukti patvirtinimo užklausą",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecialMenu("Pridėti pirkėją",' ',0,"AddCustomerORDsm");
  SpecialMenu("Pridėti prekę",' ',0,"AddItemORDsm");
  end;
  EndWindow;
end;

window ORLClass:3
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  Integer pos,rn;

  WindowBegin("Užsakymai",ORLClass,CGmlist,-);
  SpawnClass(ORDClass);
  SetWRect(20,80,980,298); //EBS edit
  Sizeable(-1,-1,0,0);
  UseView(ORVc);
  FormName(PrintORL);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr.",SerNr,false,SerNr);
  RlColKey(79,79,"OK",OKFlag,false,OKFlag);
  pos = 111;
  if (HasModIN) then begin
    RlColKey(pos,pos,"Išs.",ShipMark,false,ShipFlag);
    pos = pos + 32;
  end;
  if (HasModSL) then begin
    RlColKey(pos,pos,"Fakt.",InvMark,false,InvFlag);
    pos = pos + 32;
  end;
  RlCol(pos,pos,"Užd.",Closed,false);
  pos = pos + 32;
  //EBS -->
  RlCol(pos,pos,"Imp.",BLT_Importf,false);
  pos = pos + 32;
  RlCol(pos,pos,"Exp.",BLT_Exportf,false);
  pos = pos + 32;
  //EBS <--
  RlColKey(pos,pos,"užs. data",OrdDate,false,OrdDate);
  pos = pos + 80;
  RlColKey(pos,pos,"Plan. shp.",PlanShipDate,false,PlanShipDate);
  pos = pos + 80;
  if (HasMultiLocations) then begin
    RlCol   (pos,pos,"Patalpa",Location,false);
    pos = pos + 60;
  end;
  RlColKey(pos,pos,"Pirk. užs. Nr.",CustOrdNr,false,CustOrdNr);
  pos = pos + 80;
  RlColKey(pos,pos,"Pirkėjas",CustCode,false,CustCode);
  pos = pos + 60;
  RlColKey(pos,pos,"Pavadinimas",Addr0,false,Name);
  if (IsEnterprise) then begin
    if (AcceptanceStatusColumnTest("ORVc")) then begin
      CalculatedColumn(-240,-240,"Patv.","ORLClassAcceptanceStatus",false);
    end;
    RlColKey(-200,-200,"Klasė",OrderClass,false,OrderClass);
    RlColKey(-155,-155,"Viso",Sum4,true,Sum4);
    RlCol(-75,-75,"Downpaid",DownPaySent,true);
  end else begin
    RlColKey(-55,-55,"Viso",Sum4,true,Sum4);
  end;
  if (HasLimitedAccess) then begin
  BrowseSubsetButton(-40,-15);
  end;
  SearchField("Ieškoti");
  if (GuiType==kGuiMetro) then begin
    rn = 0;
    RowMenuBegin("");
    if (HasModIN) then begin
      RowMenuItem(rn,"Sukurti Siuntimą",'L','L',4300,"SHFromORLsm"); rn = rn + 1;
    end;
    RowMenuItem(rn,"Sukurti Faktūrą",'L','L',4300,"IVFromORLsm"); rn = rn + 1;
    if (HasDownpayments) then begin
      RowMenuItem(rn,"Sukurti Išakst. apm. faktūrą",'o','o',4300,"DownPayFromORLsm"); rn = rn + 1;
    end;
    RowMenuItem(rn,"Užsakymo būklė",'r','r',4300,"ORStatusORLsm"); rn = rn + 1;
    if (HasModPO) then begin
      RowMenuItem(rn,"Sukurti Pirkimo užsakymą",' ',' ',4300,"POFromORLsm"); rn = rn + 1;
    end;
    if (HasModCRM) then begin
      RowMenuItem(rn,"Sukurti veiklą",'c','c',4300,"ActFromORLsm"); rn = rn + 1;
    end;
    if (IsEnterprise) then begin
      RowMenuItem(rn,"Nustatyti užsakymą faktūruojamu",' ',' ',4300,"ORToInvORLsm"); rn = rn + 1;
    end;
    EndRowMenu;
  end else begin
    SpecialMenu("Užsakymo būklė",'r',3,"ORStatusORLsm");
    if (IsEnterprise) then begin
      SpecialMenu("Faktūruoti užsakymą",' ',6,"ORToInvORLsm");
    end;
    SpecialMenu("Importuoti EDI užsakymus",'',5,"EBS_ImportEDIOrderssm");
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
		if (HasModIN) then begin
		SpecialMenu("Sukurti siuntimą",'L',0,"SHFromORLsm");
		end;
		SpecialMenu("Sukurti faktūrą",'F',1,"IVFromORLsm");
    if (HasDownpayments) then begin
		SpecialMenu("Sukurti išankstinio apmok. faktūrą",'o',2,"DownPayFromORLsm");
		end;
		if (HasModPO) then begin
		SpecialMenu("Sukurti pirkimo užsakymą",' ',4,"POFromORLsm");
		end;
		if (HasModCRM) then begin
		SpecialMenu("Sukurti veiklą",'c',5,"ActFromORLsm");
		end;
  end;
  EndWindow;
end;

window BLT_CompQtyRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Kiekių palyginimas",BLT_CompQtyRClass,CGRcW,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Periodas");
    EditFieldTL(h,v+=20,100,"Siuntimas",M4Str,Normal,30,f1,false,SHSClass);;
  EndWindow;

return;
end;

window PLLClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Kainos",PLLClass,CGmlist,-);
  SpawnClass(PLDClass);
  SetWRect(64,80,709,320);
  Sizeable(-1,-1,0,0);
  UseView(PLVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Prekė",ArtCode,false,ArtCode);
  RlColKey(100,100, "Kainoraštis",PLCode,false,PLCode);
  if (HasStandardCRM) then begin
  RlCol(180,180,"Pirkėjas",CustCode,false);
    RlColKey(270,270, "Komentaras",Comment,false,Comment);
  end else begin
    RlColKey(180,180, "Komentaras",Comment,false,Comment);
  end;
  RlCol(-290,-290,"Kaina",ExVatPrice,false);
  RlColKey(-220,-220,"Akcija nuo",CampStartDate,false,CampStartDate); //EBS
  RlColKey(-140,-140,"Akcija iki",CampEndDate,false,CampEndDate); //EBS
  RlColKey(-60,-60,"Akc. kaina",CampPrice,true,CampPrice); //EBS
  SearchField("Ieškoti");
  EndWindow;
end;

window ArtRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vs;
  WindowBegin("Prekių sąrašas",ArtRClass,CGRcW,RcType);
  SetWRect(20,80,415,310);
  v = 6; vs = 20; h = 120;
  EditFieldTL(h,v, 150,"Prekės nr.",   M4UStr,Normal,50,f1,false,INSClass);
  if (HasItemGroups) and (HasModSL) then begin
  EditFieldTL(h,v+=vs, 150,"Prekės grupė",   M4UStr,Normal,11,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
  EditFieldTL(h,v+=vs, 150,"Prekės klasė", M4UStr,Normal,60,f4,false,DISClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs, 85,"Patalpos",M4UStr,Normal,30,f5,false,LocationSClass);
  end;
  EditFieldTL(h,v+=vs, 85,"Kalba",M4Code,Normal,30,Stext,false,LangSClass);
  if (HasAdvancedPricing) then begin
    EditFieldTL(h,v+=vs,100,"Kainoraštis",M4Str,Normal,5,FirstAcc,false,PLDefSClass);
  end;
  if (IsEnterprise) then begin
    h = 30;
  end;
  ButtonFrame(h,vm=(v+=41),123,3,"Rūšiavimas");
  RadioButton(h,v,0,0,"Nr.",flags[2]);
  if (HasItemGroups) and (HasModSL) then begin
  RadioButton(h,v+=16,1,0,"Grupė",flags[2]);
  end;
  RadioButton(h,v+=16,2,0,"Aprašymas",flags[2]);
  EndFrame;
  if (IsEnterprise) then begin
  ButtonFrame(h,v+=41,123,4,"Rodyti");
  CheckBox(h,v,0,"Paprastas",flags[3]);
  CheckBox(h,v+=16,0,"Sandėliuojamas",flags[4]);
  CheckBox(h,v+=16,0,"Struktūrines",flags[5]);
    if (StandardHansa==false) then begin
  CheckBox(h,v+=16,0,"Paslaugas",flags[6]);
    end;
    EndFrame;
  CheckBox(h2=230,v=vm,0,"Rodyti bar kodus",flags[7]);
  CheckBox(h2,v+=16,0,"Įtraukti Uždarytas prekes",flags[10]);
  end else begin
  CheckBox(h,v+=32,0,"Įtr. Uždarytas prek.",flags[10]);
  end;
  EndWindow;
end;

window CustPSDClass:3
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vm,vs,vs2;
  Integer tilenr;

  WindowBegin("Informacija pirkėjo būklės ataskaitoje",CustPSDClass,CGview,-);
  UseView(CustPSVc);
  SetWRect(74,73,550,480);
  h=70;h2=45;h3=390;v=10;vs=20;vm=30; vs2=18;
  if (IsEnterprise) then begin
  Tile(0,50,false,"",Signature);
  end;
  tilenr = 1;
  EditField(h,v,82,"Vartotojas",Normal,Signature,false,UserSClass);
  if (IsEnterprise) then begin
    TileButton(tilenr,tilenr);  tilenr = tilenr + 1;
    TileButton(tilenr,tilenr); tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
    // TileButton(tilenr,tilenr); tilenr = tilenr + 1;
    end;
    tilenr = 1;
    Tile(tilenr,400,false,tilenr,NrOfAct); tilenr = tilenr + 1;
    v = vm;
  end else begin
    tilenr = 1;
    v = v + 40;
    vm = v;
  end;
  h = 30;
  if (HasModCRM) then begin
    ButtonFrame(20,v=vm,420,2,"Veiklos");
    CheckBox(h,v,0,"Įtraukti veiklas",Activities);
  CheckBox(h3-100,v,0,"Rodyti veiklų klases",ShowActivityClasses);
  CheckBox(h2,v+=17,0,"Įtraukti neatliktas",NotOKAct);
  EditField(h3,v,40,"Paskutinių veiklų skaičius",Normal,NrOfAct,false,0);
  end;
  ButtonFrame(20,vm=(v+40),420,2,"Siuntimo adresus");
  CheckBox(h=30,v+=(vs+20),0,"Įtraukti siuntimo adresus",BLT_ShowDelAddress);
  if (HasModSL) then begin
  ButtonFrame(20,vm=(v+40),420,3,"Faktūros");
  CheckBox(h=30,v+=(vs+20),0,"Įtraukti faktūras",Invoices);
  CheckBox(h2,v+=17,0,"Atidarytas",NotOKIV);
  EditField(h3,v,40,"Paskutinė apmokėta faktūra",Normal,NrOfIV,false,0);
  end;
  if (HasModCheck) then begin
  CheckBox(h2,v+=16,0,"Įtraukti čekius",Checks);
  end;
  if (HasModSL) then begin
    EndFrame;
  end;
  if (HasModCO) then begin
  ButtonFrame(h=20,vm=(v+40),420,2,"Kontraktų pasiūlymai");
  CheckBox(h=30,v+=(vs+20),0,"Įtraukti kontraktų pasiūlymus",ContQuote);
  CheckBox(h2,v+=17,0,"Įtraukti uždarytus",TermCQ);
  EditField(h3,v,40,"Kontraktų pasiūlymų skaičius",Normal,NrOfCQ,false,0);
  ButtonFrame(20,vm=(v+40),420,2,"Kontraktai");
  CheckBox(h=30,v+=(vs+20),0,"Įtraukti kontraktus",Contract);
  EditField(h3,v=v-1,40,"Kontrakto klasė",Normal,ContractClass,false,ContractClassSClass);
  CheckBox(h2,v+=17,0,"Įtraukti nepatvirtintas",NotOKCO);
  EditField(h3,v+1,40,"Sutarčių skaičius",Normal,NrOfCO,false,0);
//  CheckBox(h,v+=vs+10,0,"Kredito istorija",PaymentHistory);//available for evryone
  end;
  if (HasAdvancedCRM) then begin
  ButtonFrame(20,vm=(v+40),420,2,"SMS žinutės");
  CheckBox(h=30,v+=(vs+20),0,"Įtraukti SMS žinutes",SMSes);
  EditField(h3,v,40,"Žinučių skaičius",Normal,NrOfSMS,false,0);
  end;
  if (HasAdvancedCRM) then begin
    Tile(tilenr,121,true,tilenr,CustItemMonthNr); tilenr = tilenr + 1;
    if (StandardHansa==false) then begin
  ButtonFrame(20,v=50,420,1,"Mėnesio balansai");
  CheckBox(h=30,v,0,"Įtraukti mėn. bal.(12 mėnesių)",MonthBal);
  ButtonFrame(20,vm=(v+45),420,1,"Pirkėjo prekės statistika");
  CheckBox(h=30,v+=(vs+25),0,"Įtraukti pirkėjo prekę",CustItem);
  EditField(h3,v,40,"Mėnesių skaičius",Normal,CustItemMonthNr,false,0);
  end;
  end;
  if (HasModQT) then begin
    if (StandardHansa==false) then begin
  ButtonFrame(20,vm=(v+45),420,2,"Pasiūlymai");
  CheckBox(h=30,v+=(vs+25),0,"Įtraukti pasiūlymą",Quotations);
    end else begin
      ButtonFrame(20,v=30,420,2,"Pasiūlymai");
      CheckBox(h=30,v,0,"Įtraukti pasiūlymus",Quotations);
    end;
  EditField(h3,v=v-1,40,"Pasiūlymų klasė",Normal,QTClass,false,QuoteClassSClass);
  EditField(h3,v+=vs2,40,"Pasiūlymų skaičius",Normal,NrOfQT,false,0);
  end;
  if (HasModSO) then begin
  ButtonFrame(20,vm=(v+40),420,2,"Užsakymai");
  CheckBox(h=30,v+=(vs+20),0,"Įtraukti užsakymus",Orders);
  EditField(h3,v=v-1,40,"Užsakymo klasė",Normal,ORClass,false,OrderClassSClass);
  EditField(h3,v+=vs2,40,"Užsakymų skaičius",Normal,NrOfOR,false,0);
  end;
  if (HasModPOS) then begin
    ButtonFrame(20,vm=(v+45),420,2,"POS faktūros");
    CheckBox(h=20,v+=(vs+25),0,"Įtraukti POS faktūras",IVCash);
    EditField(h3,v+=vs2,40,"POS faktūrų skaičius",Normal,NrOfIVCash,false,0);
  end;
  if (HasModCRM) then begin
  ButtonFrame(20,vm=(v+40),420,1,"Neįtraukti");
  EditField(h+80,v+=(vs+20),100,"Veiklų tipų",Normal,ExcludeActTypes,false,ActTypeSClass);
  end;

  if (HasModTS or HasModRent or HasModSVO) then begin
    Tile(tilenr,121,true,tilenr,NrOfPR); tilenr = tilenr + 1;
    h=20; v=20;
  end;
  if (HasModTS) then begin
    ButtonFrame(h,v,420,1,"Projektai");
  CheckBox(h2=30,v,0,"Įtraukti projektus",Projects);
  EditField(h3,v,40,"Projektų skaičius",Normal,NrOfPR,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Projektų Biudžetai");
  CheckBox(h2,v+=(vs+20),0,"Įtraukti projektų biudžetus",ProjectBudgets);
  EditField(h3,v,40,"Projektų biudžetų skaičius",Normal,NrOfTBBU,false,0);
  end;
  if (HasModRent) then begin
  ButtonFrame(h,vm=(v+40),420,1,"Sutartys");
  CheckBox(h2,v+=(vs+20),0,"Įtraukti sutartis",Agreements);
  EditField(h3,v,40,"Sutarčių skaičius",Normal,NrOfAgreements,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Nuomos rezervacijos");
  CheckBox(h2,v+=(vs+20),0,"Įtraukti nuomos rezervacijas",RentalReservations);
  EditField(h3,v,40,"Nuomos rezervacijų skaičius",Normal,NrOfRentRes,false,0);
  end;
  if (HasModSVO) then begin
  ButtonFrame(h,vm=(v+40),420,1,"Paslaugų užsakymai");
  CheckBox(h2,v+=(vs+20),0,"Įtraukti paslaugų Užsakymus",ServiceOrders);
  EditField(h3,v,40,"Paslaugų Užsakymų skaičius",Normal,NrOfSVO,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Darbo kortelės");
  CheckBox(h2,v+=(vs+20),0,"Įtraukti darbo korteles",WorkSheets);
  EditField(h3,v,40,"Darbo kortelių skaičius",Normal,NrOfWS,false,0);
  ButtonFrame(h,vm=(v+40),420,1,"Kita");
  CheckBox(h2,v+=(vs+20),0,"Rodyti ryšius su kitais kontaktais",ContactRelations);
  end;
  EndWindow;
end;

window BLT_WeightSetTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 150;

  WindowBegin("Weighing machine settings",BLT_WeightSetTClass,CGSbl,ItemSettingType);
  Sizeable(-1,-1,-1,0);
  SetWRect(20,80,480,320);
  SetBlid(BLT_WeightSetBlock);
  EditField(h,v=10,100,"Port",Normal,Port,false,0);
  EditField(h,v+=vs,100,"Port name",Normal,PortCode,false,0);
  EditField(h,v+=vs,100,"Baud rate",Normal,BaudRate,false,0);
  EditField(h,v+=vs,100,"Parity",Normal,Parity,false,0);
  EditField(h,v+=vs,100,"DataLength",Normal,DataLength,false,0);
  EditField(h,v+=vs,100,"StopBits",Normal,StopBits,false,0);
  EditField(h,v+=vs,100,"FlowControl",Normal,FlowControl,false,0);
  EndWindow;

end;

window BLT_SyncAllScannerVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Synchronize scanners",BLT_SyncAllScannerVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Period");
    ButtonFrame(h,v+=40,140,2,"Include");
    CheckBox(h,v,0,"Exported",flags[0]);
    CheckBox(h,v+=16,0,"Not exported",flags[1]);
    ButtonFrame(h,v+=40,140,5,"Synchronize");
    CheckBox(h,v,0,"Items",flags[2]);
    CheckBox(h,v+=16,0,"Delivery export",flags[3]);
    CheckBox(h,v+=16,0,"Sales order export",flags[7]);
    CheckBox(h,v+=16,0,"Goods receipts export",flags[4]);
    CheckBox(h,v+=16,0,"Delivery import",flags[5]);
    CheckBox(h,v+=16,0,"Goods receipts import",flags[6]);
  EndWindow;

  return;
end;

window BLT_EDISyncVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("EDI invoice sync.",BLT_EDISyncVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    PeriodField(h=100,v=10,"Period");
    EditFieldTL(h,v+=20,100,"Invoice",M4Long,Normal,0,long1,false,IVSClass);
    CheckBox(h,v+=20,0,"Only not sent",flags[0]);
  EndWindow;

  return;
end;

window IVSClass:8
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real pos;
  Boolean acptf;

  WindowBegin("Faktūros",IVSClass,CGslist,-);
  pos = 920;
  SetWRect(20,80,pos,298);
    Sizeable(-1,-1,0,0);
    SpawnClass(IVDClass);
    UseView(IVVc);
    FormName(PrintIVL);
    RecordList(4,17,-21,-39);
    RlColKey(4,4,"Nr.",SerNr,false,SerNr);
    RlColKey(79,79,"OK",OKFlag,false,OKFlag);
    RlColKey(111,111,"EDI",SentToEDI,false,SentToEDI);
    RlColKey(141,141,"Fakt. data",InvDate,false,InvDate);
    RlColKey(221,221,"Siun. data",ServiceDelDate,false,ServiceDelDate);
    RlColKey(291,291,"Oficial. Nr.",OfficialSerNr,false,OfficialSerNr);
    RlColKey(381,381,"Užsk. Nr.",OrderNr,false,OrderNr);
    pos = 451;
    RlColKey(pos,pos,"Siunt. Adresas",ShipAddr1,false,ShipAddr1); pos = pos + 150; //EBS
    RlColKey(pos,pos,"Pirkėjas",CustCode,false,CustCode); pos = pos + 60;
    RlColKey(pos,pos,"Pavadinimas",Addr0,false,Name);
    if (acptf) then begin
      CalculatedColumn(-230,-230,"Patv.","IVLClassAcceptanceStatus",false);
    end;
    CalculatedColumn(-190,-190,"Brutto","IVLClassCalcBruttoWeight",true);
    RlColKey(-130,-130,"Viso",Sum1,true,Sum1);
    RlCol(-60,-60,"",CredMark,true);
    if (HasMultiCurrency or HasBase2) then begin
      RlCol(-40,-40,"Val.",CurncyCode,true);
    end;
    RlCol(-1,-1,"",Invalid,true);
    SearchField("Ieškoti");
    if (HasLimitedAccess) then begin
      BrowseSubsetButton(-40,-15);
    end;
  EndWindow;
end;

window BLT_INSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Įstatyti prekes",BLT_INSClass,CGother,HBlRecType);
  SetWRect(40,80,750,298);
  Sizeable(-1,-1,-1,0);
  v = 6;
  ToolBar;
  HalPushButton(-320,v,-220,v+10,"BLT_INSClassShowAllItemsBtn","All items");
  EndToolBar;
  DataList(1,0,-17,-1,"item_in_pricelist");
  DataListColumn(1,8,105,AdjLeft,"code","Nr.",M4Code);
  DataListColumn(1,110,195,AdjLeft,"group","Grupė",M4Code);
  DataListColumn(1,200,-215,AdjLeft,"description","Aprašymas",M4Str);
  DataListColumn(1,-210,-110,AdjRight,"alternativecode","Alt. kodas",M4Str);
  DataListColumn(1,-105,-60,AdjRight,"uprice1","Kaina",M4Val);
  DataListColumn(1,-55,-10,AdjRight,"instock","Sandėlyje",M4UVal);
  SearchField("Search");
  EndWindow;
end;

window SerialNrSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Įstatyti serijinį numerį",SerialNrSClass,CGother,HBlRecType);
  SetWRect(240,80,800,348);
  StringList(9,9,-19,-19);
  SearchField("Ieškoti");
  EndWindow;
end;

window CUINDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Pirkėjo prekė",CUINDClass,CGview,-);
  SetWRect(64,80,609,160);
  UseView(CUINVc);
  v = 6; vs = 20; h = 120; h2 = 280;
  EditField(h,v, 100,"Pirkėjas",Normal,CustCode,false,CUSClass);
  EditField(h2,v,-40,"Pavadinimas",Normal,CustName,false,0);
  EditField(h,v+=vs, 100,"Prekė",Normal,ArtCode,false,INSClass);
  EditField(h2,v,-40,"Pavadinimas",Normal,ArtName,false,0);
  EditField(h,v+=vs, 100,"Pirkėjo prekės Nr.",Normal,CustArtCode,false,0);
  EditField(h,v+=vs, 50,"Min galiojimo dienos",Normal,BLT_MinDays,true,0); //EBS
  EndWindow;
end;

window BLT_UpdatePIPriceDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Atnaujinti Kainas",BLT_UpdatePIPriceDClass,CGview,-);
  SetWRect(20,100,530,200);
  UseView(BLT_UpdatePIPriceVc);
  Sizeable(-1,-1,0,0); //EBS
  h = 120; v = 6; vs = 20;
  EditField(h,v,160,"Nr.",ViewOnly,SerNr,false,0);
  EditField(h,v+=vs,100,"Tiekėjas",Normal,VECode,false,VESClass);
  EditField(h+160,v,-40,"Pavadinimas",Normal,VEName,false,0);
  MatrixBegin(4,v+=40,-32,-40,-,100);
  MatColTL(1,24,"Prekės kodas",0,M4Code,ViewOnly,20,ArtCode,false,INSClass);
  MatColTL(1,104,"Aprašymas",0,M4Str,ViewOnly,255,Spec,false,0);
  MatColTL(1,-200,"Sena kaina",0,M45Val,ViewOnly,0,OldPrice,false,0);
  MatCol(1,-100,"Nauja kaina",0,NewPrice,true,0);
  EndMatrix;
  SpecialMenu("Atnaujinti kainas",'',0,"BLT_UpdatePricessm");
  EndWindow;

end;

window BLT_UpdatePIPriceLClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Atnaujinti Kainas",BLT_UpdatePIPriceLClass,CGmlist,-);
  SpawnClass(BLT_UpdatePIPriceDClass);
  SetWRect(64,80,509,320);
  Sizeable(-1,-1,0,0);
  UseView(BLT_UpdatePIPriceVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,2,"Nr.",SerNr,false,SerNr);
  RlColKey(100,100, "Tiekėjas",VECode,false,VECode);
  RlCol(200,200,"Pavadinimas",VEName,false);
  SearchField("Ieškoti");
  EndWindow;
end;

window SalesForecastDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs;
  WindowBegin("Pardavimų prognozė",SalesForecastDClass,CGview,-);
  UseView(SalesForecastVc);
  SetWRect(20,80,600,340); //EBS edit
  Sizeable(-1,-1,0,0);
  vs = 20; h = 80; h2 = 230;
  EditField(h,v=10,80,"Kodas",St_i,Code,false,TSerSClass);
  EditField(h2,v,50,"Versija",ViewOnly,Version,false,0);
  HalPushButton(400,v-8,400+100,v-8+20,"SalesForecastNewVersion","Nauja versija");
  EditField(h,v+=vs,-40,"Aprašymas",Normal,Comment,false,0);
  EditField(h,v+=20,80,"Periodas",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,80,"-",Normal,EndDate,false,PasteCurDate);
  EditField(613,v,70,"Sukūrimo data",Normal,CreateDate,false,PasteCurDate);
  EditField(613,v+=vs,70,"Pask. pasikeitimas",Normal,OKDate,false,PasteCurDate);
  EditField(h,v,80,"Eil. tipas",Normal,RowType,false,SetSClass);
  EditField(h2,v,80,"Klasė",Normal,Class,false,ForecastClassSClass);
  EditField(h2+160,v,80,"Pirkėjas",Normal,BLT_CustCode,false,CUSClass); //EBS
  CheckBox(25,-21,0,"OK",OKFlag);
  CheckBox(100,-21,0,"Uždaryta",Closed);
  EditField(-290,-21,70,"Viso kiekis",ViewOnly,BLT_TotQty,true,0); //EBS
  EditField(-110,-21,70,"Viso suma",ViewOnly,BLT_TotSum,true,0); //EBS
  StaticText(h=47,v+=39,"Prekė/",false);
  h = 8; v=v+19;
  MatrixBegin(h,v,-40,-22,-,1000);
  MatCol(1,h=34,"Prekės grupė",60,ItemCode,false,ITSClass);
  MatCol(1,h+=80,"Aprašymas",0,Spec,false,0);
  MatCol(1,-260,"Data",0,RowDate,false,PasteCurDate); //EBS
  MatCol(1,-170,"Kiekis",0,Qty,true,0);
  MatCol(1,-100,"Suma",0,Sum,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  EndWindow;
end;

window POPlanDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,t,v,vs;
  WindowBegin("Pirkimų užsakymo planas",POPlanDClass,CGview,-);
  UseView(POPlanVc);
  SetWRect(20,80,527,340);
  Sizeable(-1,-1,0,0);
  vs = 20; h = 80; h2 = 230; h3 = 430;
  EditField(h,v=10,50,"Nr.",St_i,SerNr,false,TSerSClass);
  EditField(h2,v,-40,"Aprašymas",Normal,Comment,false,0);
  EditField(h,v+=20,80,"Periodas",Normal,StartDate,false,PasteCurDate);
  EditField(h2,v,80,"-",Normal,EndDate,false,PasteCurDate);
  EditField(h3,v,80,"Tiekėjas",Normal,VECode,false,VESClass);
  EditField(550,v,80,"Data",Normal,EarliestPODate,false,PasteCurDate);
  CheckBox(25,-21,0,"OK",OKFlag);
  CheckBox(100,-21,0,"Uždaryta",Closed);
  h = 8; v=v+45;
  MatrixBegin(h,v,-50,-22,-,1000);
  Flip(0);
  MatCol(t=1,h=34,"Prekė",60,ItemCode,false,INSClass);
  MatCol(t,h+=80,"Aprašymas",0,Spec,false,0);
  Flip(1);
  MatCol(t=1,-400,"Užsak. data",0,POOrdDate,false,0);
  MatCol(t,-320,"Siunt. dienų",0,DaysToGet,true,0);
  MatCol(t,-260,"Reikiama data",0,NeededDate,false,PasteCurDate);
  MatCol(t,-180,"Siūl. kiekis",0,SugQty,true,0);
  MatCol(t,-90,"Koreg. kiekis",0,Qty,true,0);
  Flip(2);
  MatCol(t=1,-340,"Tiekėjas",0,VECode,false,BLT_VESClass); //EBS edit
  MatCol(t=1,-240,"Siunt. dienų",0,DaysToGet,true,0);
  MatCol(t,-180,"Siūl. kiekis",0,SugQty,true,0);
  MatCol(t,-90,"Koreg. kiekis",0,Qty,true,0);
  Flip(3);
  MatCol(t=1,-370,"Užsakoma prekė",0,FromItemCode,false,INSClass);
  MatCol(t=1,-270,"Pirk. užs. nr.",0,PONr,false,0);
  MatCol(t,-180,"Siūl. kiekis",0,SugQty,true,0);
  MatCol(t,-90,"Koreg. kiekis",0,Qty,true,0);
  RowMenuBegin("");
  RowMenuItem(0,"Padalinti eilutę",'l','l',0,"POPlanSplitDsm");
  EndRowMenu;
  EndMatrix;
  VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  SpecialMenu("Pirkimų užsakymo plano info",'o',0,"POPlanInfoDsm");
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Sukurti pirkimo užsakymą",'L',0,"POFromPOPlanDsm");
  EndWindow;
end;

window BLT_VESClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Įstatyti tiekėją",BLT_VESClass,CGother,HBlRecType);
  SetWRect(40,80,750,298);
  Sizeable(-1,-1,-1,0);
  v = 6;
  DataList(1,0,-17,-1,"ve_in_pivc");
  DataListColumn(1,8,105,AdjLeft,"code","N_r.",M4Code);
  DataListColumn(1,110,195,AdjLeft,"searchkey","Sutrumpintas",M4Str);
  DataListColumn(1,200,265,AdjLeft,"vecat","Cat.",M4Str);
  DataListColumn(1,200,-10,AdjLeft,"name","Vardas",M4Str);
  SearchField("Ieškoti");
  EndWindow;
end;

window SalesForecastRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Pardavimų prognozė",SalesForecastRClass,CGRcW,RcType);
  SetWRect(90,80,518,180);
  v = 6; vs = 20; h = 140;
  PeriodField(h,v,"Periodas");
  EditFieldTL(h,v+=20, 150,"Prekė",M4UStr,Normal,41,f1,false,INSClass);
  if (HasItemGroups) then begin
    EditFieldTL(h,v+=vs,150,"Prekės grupė",M4UStr,Normal,50,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
    EditFieldTL(h,v+=vs,150,"Prekės klasifikavimas",M4UStr,Normal,100,f2,false,DISClass);
  end;
  EditFieldTL(h,v+=20, 150,"Klasė",M4UStr,Normal,5,LastAcc,false,ForecastClassSClass);
  ButtonFrame(h,vm=(v+=41),123,2,"Nurodyti");
  RadioButton(h,v,0,0,"Kiekį ",flags[1]);
  RadioButton(h,v+=16,1,0,"Sumą",flags[1]);
  //EBS -->
  ButtonFrame(h,v+=41,123,2,"Funkcija");
  RadioButton(h,v,0,0,"Peržiūra",ArtMode);
  RadioButton(h,v+=16,1,0,"Detaliai",ArtMode);
  //EBS <--
  EndWindow;
end;

window BLT_SHAndIVImportVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Import delivery notes and invoices",BLT_SHAndIVImportVClass,CGMnt,RcType);
    SetWRect(20,80,450,150);
    EditFieldTL(h=100,v=10, 150,"Period",M4UStr,Normal,21,Stext,false,PerSClass);
    CheckBox(h,v+=20,0,"Run import for all companies",flags[0]);
  EndWindow;

  return;
end;

window ORSerTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Numeravimas - užsakymai",ORSerTClass,CGHbl,HBlRecType);
  SetBlid(ORSerBlock);
  TSERW_LIT;
  EndWindow;
end;

window POSerTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Numeravimas - Pirkimų užsakymai",POSerTClass,CGHbl,HBlRecType);
  SetBlid(POSerBlock);
  TSERW_LIT;
  EndWindow;
end;

window INrsRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,h4,v,vm,vs;
  WindowBegin("Prekės istorija",INrsRClass,CGRcW,RcType);
  SetWRect(20,80,550,460);
  v = 6; vs = 20; h = 160; h2 = 30; h3 = 180; h4 = 340;
  PeriodField(h,v,"Periodas");
  EditFieldTL(h,v+=vs,150,"Prekė",M4UStr,Normal,50,f1,false,INSClass);
  if (HasItemGroups) then begin
  EditFieldTL(h,v+=vs,150,"Grupė",M4UStr,Normal,5,f3,false,ITSClass);
  end;
  if (HasItemClassification) then begin
  EditFieldTL(h,v+=vs,150,"Prekės klasė", M4UStr,Normal,60,f4,false,DISClass);
  EditFieldTL(h,v+=vs,150,"Klasių tipas",M4UStr,Normal,60,f5,false,CTypeSClass);
  end;
  if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs,150,"Patalpa",M4Code,Normal,21,f6,false,LocationSClass);
    if (StandardHansa==false and IsEnterprise) then begin
      EditFieldTL(h,v+=vs,150,"Patalpos grupė",M4Code,Normal,10,f7,false,LocGrSClass);
      EditFieldTL(h,v+=vs,150,"Patalpos klasė",M4List,Normal,200,f8,false,LocClSClass);
    end;
  end;
  if (HasDepartments) then begin
  EditFieldTL(h,v+=vs,150,"Skyrius",M4UStr,Normal,10,AccStr,false,DepSClass);
  end;
  if (HasModPO) then begin
  EditFieldTL(h,v+=vs,150,"Pagr. tiekėjas",M4UStr,Normal,10,f2,false,VESClass);
  end;
  EditFieldTL(h,v+=vs ,150,"Pirkėjas",M4UStr,Normal,50,f12,false,CUSClass);
  if (IsEnterprise) then begin
  CheckBox(h2,v+=26,0,"Tik sandėliuojamos prekės",flags[11]);
//  CheckBox(h2,v+=16,0,"Show Quantity 2",flags[12]);
  CheckBox(h2,v+=16,0,"Rodyti balansą prekėms be istorijos",flags[13]);
  CheckBox(h2,v+=16,0,"Įtraukti būsimus įrašus",flags[14]);
  end;
  if (HasMultiLocations) then begin
  CheckBox(h2,v+=16,0,"Pagal patalpą",flags[15]);
  end;
  if (HasSerialNumbers) then begin
  CheckBox(h2,v+=16,0,"Įtraukti ser. nr. informaciją",AccSpec);
  end;
  if (HasLocalization("ARG,MEX,USA") and IsStandardProduct==false) then begin
    CheckBox(h2,v+=16,0,"Include Dispatch Number",flags[22]);
  end;
//  CheckBox(h2,v+=16,0,"Include History Before Stocktake",flags[19]);
  ButtonFrame(h2,vm=(v+=38),130,2,"Funkcija");
  RadioButton(h2,v,0,0,"Peržiūra",flags[9]);
  RadioButton(h2,v+=16,1,0,"Detaliai",flags[9]);
  if (IsEnterprise) then begin
  ButtonFrame(h2,v+=40,130,2,"Rūšiavimas");
  RadioButton(h2,v,0,0,"Savik. data",flags[10]);
  RadioButton(h2,v+=16,1,0,"Oper. data",flags[10]);
  end;
  ButtonFrame(h3,v=vm,140,3,"Funkcijos");
  RadioButton(h3,v,0,0,"Kiekiai",ArtMode);
  if (HasVarieties) then begin
  RadioButton(h3,v+=16,3,0,"Kiekiai ir įvairovės",ArtMode);
  end;
  RadioButton(h3,v+=16,1,0,"Sumos",ArtMode); // 2 Has some code for it, don't know what....
  EndFrame;
  if (HasSecondQuantity) then begin
  ButtonFrame(h4,v=vm,150,3,"Funkcija");//  CheckBox(20,v+=16,0,"Show Quantity 2",flags[12]);
  RadioButton(h4,v,0,0,"Nerodyti kiekio 2",flags[12]);
  RadioButton(h4,v+=16,1,0,"Rodyti kiekį 2",flags[12]);
  RadioButton(h4,v+=16,2,0,"Rodyti koeficientą",flags[12]);
    ButtonFrame(h4,v=30,160,12,"Registrai");
  end else begin
    ButtonFrame(h4,v=vm,160,12,"Registrai");
  end;
  if (HasModSO) then begin
    CheckBox(h4,v,0,"Siuntimai",flags[2]); v = v + 16;
  end;
  CheckBox(h4,v,0,"Gavimai",flags[3]); v = v + 16;
  CheckBox(h4,v,0,"Faktūros",flags[1]); v = v + 16;
//  CheckBox(h4,v,0,"POS Invoices",flags[16]); v = v + 16;
  if (HasModProd) then begin
    if (StandardHansa==false) then begin
      CheckBox(h4,v,0,"Gamybos užsakymai",flags[18]); v = v + 16;
    end;
    CheckBox(h4,v,0,"Gaminiai",flags[5]); v = v + 16;
    if (StandardHansa==false) then begin
      CheckBox(h4,v,0,"Gamybos operacijos",flags[20]); v = v + 16;
    end;
  end;
  if (HasAdvancedStock) then begin
    CheckBox(h4,v,0,"Grąžintos prekės",flags[8]); v = v + 16;
    CheckBox(h4,v,0,"Grąž. prekės iš tiek.",flags[19]); v = v + 16;
  end;
  CheckBox(h4,v,0,"Nurašymai",flags[6]); v = v + 16;
  if (IsEnterprise or (HasLocalization("PRT") and HasMultiLocations)) then begin
    CheckBox(h4,v,0,"#Stock# Movements",flags[4]); v = v + 16;
  end;
  if (HasAdvancedStock) then begin
    CheckBox(h4,v,0,"Perkainavimai",flags[22]); v = v + 16;
  end;
  if (HasModRent) then begin
    CheckBox(h4,v,0,"Iškėlimai",flags[17]); v = v + 16;
  end;
  if (HasModSVO) then begin
    CheckBox(h4,v,0,"Darbo kortelės",flags[7]); v = v + 16;
  end;
  EndFrame;
  EndWindow;
end;

window AddORItemTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,h3,v,vs;

  WindowBegin("Additional import items",AddORItemTClass,CGHbl,HBlRecType);
  SetBlid(AddORItemBlock);
  SetWRect(20,80,500,400);
  Sizeable(-1,-1,0,0);
  h = 8; v = 25;
  MatrixBegin(h,v,-31,-10,-,30);
  MatCol(1,h=30,"Item",0,ItemCode,false,INSClass);
  MatCol(1,h=210,"Quantity",0,Quant,false,0);
  EndMatrix;
  EndWindow;

  return;
end;

window ORRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;
  WindowBegin("Užsakymai",ORRClass,CGRcW,RcType);
  SetWRect(20,80,400,150);
  EditFieldTL(120,v=6, 150,"Nr.",   M4UStr,Normal,30,f1,false,0);
  EditFieldTL(120,v+=20, 150,"Plan. Delivery Date",M4Date,Normal,10,d1,false,PasteCurDate); //EBS
  CheckBox(120,v+=30,0,"Tik nespausdinti",OnlyUnprntd);
  EndWindow;
end;

window IVJRClass:3
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hs,v,v3,vm,vs,l;

  WindowBegin("Faktūrų žurnalas",IVJRClass,CGRcW,RcType);
  if (IsEnterprise) then begin
    SetWRect(20,80,520,390);
  end else begin
    SetWRect(20,80,460,390);
  end;
    vs = 20;
    hs=148;
  if (IsEnterprise) then begin
    if (HasLocalization("ARG,HRV,LTU,LVA,POL,PRT,RUS") or (HasOfficialSerNr and HasPreferedOfficialSerNr==false))  then begin
      Tile(0,40,false,"",f1);
    end else begin
      Tile(0,20,false,"",f1);
    end;
  end;

  v = 6; h = 150;
  if (HasPreferedOfficialSerNr) then begin
    EditFieldTL(h,v,150,"Oficialus Nr.",M4UStr,Normal,41,f6,false,0);
    v = v + 20;
    if (HasLocalization("POL,PRT")==false)  then begin
      EditFieldTL(h,v,150,"Faktūros Nr.",M4Str,Normal,30,f1,false,0);
      v = v + 20;
    end;
   end else begin
    EditFieldTL(h,v,150,"Faktūros nr.",M4Str,Normal,30,f1,false,0);
    v = v + 20;
    if (HasOfficialSerNr or HasInvoiceOfficialSerNr) then begin
      EditFieldTL(h,v,150,"Oficial. nr.",M4UStr,Normal,41,f6,false,0);
      v = v + 20;
    end;
  end;

   if (IsEnterprise) then begin
    TileButtons(v,2);
    Tile(1,380,false,"1",f2);
    v = 6;
     vm = v;
   end;
   PeriodField(h,v,"Periodas");
   EditFieldTL(h,v+=vs, 150,"Kredito fakt. periodas",M4UStr,Normal,21,Period2Str2,false,PerSClass);
    EditFieldTL(h,v+=vs ,150,"Pirkėjas",M4UStr,Normal,50,f2,false,CUSClass);
  if (HasCategories) then begin
    EditFieldTL(h,v+=vs ,70,"Pirkėjo kategorija",M4UStr,Normal,5,f3,false,CCatSClass);
   end;
   if (HasContactClassification) then begin
    EditFieldTL(h,v+=vs ,70,"Klasių tipai",M4UStr,Normal,60,f5,false,CTypeSClass);
    EditFieldTL(h,v+=vs ,70,"Pirkėjų klasė",M4UStr,Normal,30,f4,false,CClassSClass);
   end;
  if (HasSalesman or HasSalesmanBonus) then begin
    EditFieldTL(h,v+=vs ,70,"Pardavėjas",M4UStr,Normal,10,AccStr,false,UserSClass);
  end;
  if (HasSalesGroup) then begin
    EditFieldTL(h,v+=vs ,50,"Pard. grupė",M4UStr,Normal,10,f14,false,SalesGroupSClass);
   end;
   if (HasObjects) then begin
    EditFieldTL(h,v+=vs,250,"Objektas",M4UStr,Normal,60,ObjStr,false,ObjSClass);
    EditFieldTL(h,v+=vs,50,"Objekto tipas",M4UStr,Normal,5,ObjType,false,OTSClass);
    EditFieldTL(h,v+=vs,250,"Objektai (iš eilučių)",M4UStr,Normal,60,f11,false,ObjSClass);
   end;
  if (HasModTS or IsEnterprise) then begin
    EditFieldTL(h,v+=vs,50,"Projektas",M4UStr,Normal,20,FirstAcc,false,PRSClass);
   end;
   if (HasMultiLocations) then begin
    EditFieldTL(h,v+=vs,70,"Patalpa",M4UStr,Normal,60,LastAcc,false,LocationSClass);
   end;
   EditFieldTL(h,v+=vs,70,"Route",M4Code,Normal,25,f15,false,DelRouteSClass); //EBS
   if (IsEnterprise) then begin
    EditFieldTL(h,v+=vs,50,"Mokėjimo sąlyga",M4UStr,Normal,5,TransStr,false,PDSClass);
    EditFieldTL(h,v+=vs,50,"Org. pirkėjas",M4Code,Normal,20,f12,false,CUSClass);
  end;
  if (IsEnterprise) then begin
    EditFieldTL(h,v3=(v+=vs),50,"Min. suma",M4Val,Normal,0,vals0,false,0);
  end else begin
    EditFieldTL(h,v+=vs,100,"PVM kodas",M4UStr,Normal,100,f13,false,VATCodeSClass);
   end;
   if (IsEnterprise) then begin
     h = 320;
     v = vm + 10;
   end else begin
     v = v + 40;
     v3 = v + 20;
     vm = v;
    h = 30;
   end;
   ButtonFrame(h,v,123,5,"Būklė");
    CheckBox(h,v,0,"Nepatvirtintos",flags[1]);
    CheckBox(h,v+=16,0,"Patvirtintos",flags[2]);
   if (IsEnterprise) then begin
    RadioButton(h,v+=16,0,0,"Įtraukti abejot.",flags[7]);
    RadioButton(h,v+=16,1,0,"Neįtraukti abejot.",flags[7]);
    RadioButton(h,v+=16,2,0,"Tik abejot.",flags[7]);
   end;
   EndFrame;

   v3 = v3 + 41;
   v = v3;
   if (IsEnterprise) then begin
     vm = v;
    h = 148;
  end else begin
    h = 30;
   end;
  ButtonFrame(h,v,123,3,"Funkcija");
    RadioButton(h,v,0,0,"Peržiūra",ArtMode);
    RadioButton(h,v+=16,1,0,"Detaliai",ArtMode);
   if (HasMultiCurrency) then begin
    RadioButton(h,v+=16,4,0,"Peržiūra valiuta",ArtMode);
   end;
   EndFrame;
   if (IsEnterprise==false and HasBase2) then begin
     CheckBox(h,v+=42,0,"Rodyti baz. val. 1 & 2 sumas",flags[12]);
   end;

   if (IsEnterprise) then begin
     h2 = 320;
     l = 160;
   end else begin
     h2 = h + 148;
    l = 123;
   end;
   ButtonFrame(h2,v=vm,l,5,"Rūšiavimas");
   if (HasModNL) then begin
    RadioButton(h2,v,0,0,"Oper. data",flags[10]);
   end else begin
     RadioButton(h2,v,0,0,"Faktūros data",flags[10]);
   end;
   if (HasLocalization("BRA,POL,PRT")) then begin
     RadioButton(h2,v+=16,5,0,"Nr.",flags[10]);
   end else begin
     RadioButton(h2,v+=16,1,0,"Faktūros Nr.",flags[10]);
   end;
  if (HasMultiLocations) then begin
    RadioButton(h2,v+=16,2,0,"Patalpa(iš antraštės)",flags[10]);
  end;
  if (HasOfficialSerNr or HasInvoiceOfficialSerNr) then begin
    RadioButton(h2,v+=16,3,0,"Peržiūra su ofic.",flags[10]);
  end;
  if (IsEnterprise) then begin
    RadioButton(h2,v+=16,4,0,"Fakt. data",flags[10]);
   end;
   EndFrame;
   if (IsEnterprise) then begin
   Tile(2,330,false,"2",Stext);
   v = 6;
    EditFieldTL(h=150,v,100,"Prekių grupė",M4UStr,Normal,21,Stext,false,ITSClass);
    EditFieldTL(h,v+=vs,150,"Prekės klasė", M4UStr,Normal,60,Comment,false,DISClass);
    EditFieldTL(h,v+=vs,100,"Prekė",M4UStr,Normal,41,f10,false,INSClass);
    EditFieldTL(h,v+=vs,100,"Pardavimų sąsk.",M4UStr,Normal,21,f7,false,AccSClass);
    EditFieldTL(h,v+=vs,100,"Skolininkų sąsk.",M4UStr,Normal,21,f8,false,AccSClass);
    if (StandardHansa==false) then begin
      EditFieldTL(h,v+=vs,100,"Pagr. partneris",M4UStr,Normal,20,f9,false,CUSClass);
    end;
    EditFieldTL(h,v+=vs,100,"PVM kodas",M4UStr,Normal,100,f13,false,VATCodeSClass);
//    EditFieldTL(h,v+=vs,50,"Užsakymo klasė",M4UStr,Normal,5,Stext,false,OrderClassSClass); // no more strings to use....
    ButtonFrame(h=50,vm = (v+=40),123,4,"Faktūros tipas");
    CheckBox(h,v,0,"Faktūros",flags[3]);
    CheckBox(h,v+=16,0,"Už grynus",flags[4]);
    CheckBox(h,v+=16,0,"Kredito pažymos",flags[5]);
    CheckBox(h,v+=16,0,"Delspinigių faktūros",flags[6]);
       CheckBox(h,v+=26,0,"Faktūros tik iš pard. kn.",flags[19]);
   StaticText(h+17,v+=30,"(Ignoruoti fakt. tipus)",false);
    CheckBox(h=220,v=vm,0,"Rodyti komentarą",flags[11]);
    CheckBox(h,v+=16,0,"Rodyti bazinės valiutos 1 ir 2 viso",flags[12]);
    if (StandardHansa==false) then begin
    CheckBox(h,v+=16,0,"Tik fiskalinės faktūros",flags[13]);
    end;
    CheckBox(h,v+=16,0,"Rodyti sustabdytas faktūras",flags[14]);
    CheckBox(h,v+=16,0,"Rodyti PVM sumas",flags[15]);
    CheckBox(h,v+=16,0,"Tik nespausdintos faktūros",flags[17]);
    CheckBox(h,v+=16,0,"Įtraukti tikrąjį klientą",flags[18]);
    CheckBox(h,v+=16,0,"Faktūros su Viso sumomis lygiomis 0",flags[20]);
    CheckBox(h+=hs,v=vm,0,"Rodyti oficialų nr.",flags[16]);
   end else begin
     ButtonFrame(h+=148,v+=41,123,3,"Faktūros tipas");
     CheckBox(h,v,0,"Faktūros",flags[3]);
     CheckBox(h,v+=16,0,"Grynieji",flags[4]);
     CheckBox(h,v+=16,0,"Kredito pažymos",flags[5]);
    if (HasLocalization("PRT")) then begin
      CheckBox(h,v+=16,0,"Delsp. faktūra",flags[6]);
    end;
    EndFrame;
    v = v + 24;
    if (HasOfficialSerNr or HasInvoiceOfficialSerNr) then begin
      CheckBox(h,v,0,"Rodyti oficialų nr.",flags[16]); v = v + 16;
    end;
    if (HasLocalization("PRT")) then begin
      CheckBox(h,v,0,"Faktūros kurių bendra suma lygi nuliui",flags[20]);
    end;
   end;
    EndWindow;
end;
